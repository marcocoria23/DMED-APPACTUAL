/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Pantallas_PLE;

import static Pantallas_PLE.Integrar_TR.ventanaAbierta;
import static Pantallas_PLE.Integrar_TR.Entidad;
import static Pantallas_PLE.Integrar_TR.Envio;
import static Pantallas_PLE.Integrar_TR.Legislatura;
import java.awt.Color;
import java.awt.Component;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import mx.org.inegi.QuerysGeneral.PLE.Querys;
import mx.org.inegi.ExportaXlsm.PLE.Exporta_errores_insert_tmp;

/**
 *
 * @author ANTONIO.CORIA
 */
public class Errores_InsertTR extends javax.swing.JFrame {

    /**
     * Creates new form Errores_InsertTR
     */
    public Errores_InsertTR() {
        initComponents();
        this.setLocationRelativeTo(null);//JFRAME LOCALIZACION AL CENTRO DE LA PANTALLA
        this.getContentPane().setBackground(Color.WHITE);//JFRAME COLOR POR DEFAULT BLANCO
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(25);
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(25);
        jTable1.getColumnModel().getColumn(3).setPreferredWidth(500);
        jTextArea1.setVisible(false);
        jProgressBar1.setVisible(false);
        Borrar.setVisible(false);
        ExportaEi.setVisible(false);
        LtextoValida.setVisible(false);
        LValidacion.setVisible(false);
        LEntidad.setText(Entidad);
        LLegislatura.setText(Legislatura);
        LEnvio.setText(Envio);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        LEntidad = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        LLegislatura = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        LEnvio = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        jButton1 = new javax.swing.JButton();
        Borrar = new javax.swing.JButton();
        ExportaEi = new javax.swing.JButton();
        LtextoValida = new javax.swing.JLabel();
        LValidacion = new javax.swing.JLabel();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Entidad:");

        LEntidad.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Legislatura:");

        LLegislatura.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Envio:");

        LEnvio.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jTable1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "TABLA", "REG_ID", "CAMPO", "EXCEPCION"
            }
        ));
        jTable1.setCellSelectionEnabled(true);
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Logo CNG.png"))); // NOI18N

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/refresh.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        Borrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Borrar.png"))); // NOI18N
        Borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BorrarActionPerformed(evt);
            }
        });

        ExportaEi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Exporta.png"))); // NOI18N
        ExportaEi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExportaEiActionPerformed(evt);
            }
        });

        LtextoValida.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        LtextoValida.setText("Total Reg Validaci√≥n:");

        LValidacion.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1085, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(16, 16, 16)
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(LEntidad, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel5)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(LEnvio, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel3)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(LLegislatura, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 841, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(119, 119, 119)
                                .addComponent(LtextoValida)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LValidacion, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Borrar, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addComponent(ExportaEi, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(LEntidad, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(LLegislatura, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(LEnvio, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(ExportaEi, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(Borrar)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(LtextoValida, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(LValidacion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(8, 8, 8)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BorrarActionPerformed
        // TODO add your handling code here:
        ArrayList<String[]> Array;
        Querys Q = new Querys();
        Integrar_TR Pintegra = new Integrar_TR();
        String Tabla = "";
        String Campo = "";
        Array = Q.TablaErroresInsert(Pintegra.Entidad, Pintegra.Legislatura, Pintegra.Envio);
        if (Array.size() > 0) {
            int resp = JOptionPane.showConfirmDialog(null, "¬øDesea Eliminar los registros de las tablas con errores de insert?", "Alerta!", JOptionPane.YES_NO_OPTION);
            if (resp == JOptionPane.YES_OPTION) {
                for (int i = 0; i < Array.size(); i++) {
                    Tabla = Arrays.toString(Array.get(i)).replace("[", "").replace("]", "").replace(")", "").replace("(", "").replace("DATOS_GENERALES", "").replace("comisiones_legislativas", "").replace("personas_legisladoras", "").replace("Personal_apoyo", "").replace("iniciativas", "").replace("iniciativas_urgente_obvia", "").replace("juicios_pol√≠ticos", "").replace("declaraciones_procedencia", "").replace("Comparecencias", "").trim();
                    if (Tabla.equals("TR_PLE_MEDS1_1")) {
                        Campo = "C1_1_ID";
                    }
                    if (Tabla.equals("TR_PLE_MEDS1_1A")) {
                        Campo = "C1_1A_ID";
                    }
                    if (Tabla.equals("TR_PLE_MEDS1_1B")) {
                        Campo = "C1_1B_ID";
                    }
                    if (Tabla.equals("TR_PLE_MEDS1_1C")) {
                        Campo = "C1_1C_ID";
                    }
                    if (Tabla.equals("TR_PLE_MEDS1_1D")) {
                        Campo = "C1D_1_ID";
                    }
                    if (Tabla.equals("TR_PLE_MEDS1_2")) {
                        Campo = "C1_2_ID";
                    }
                    if (Tabla.equals("TR_PLE_MEDS1_3")) {
                        Campo = "C1_3_ID";
                    }
                    if (Tabla.equals("TR_PLE_MEDS1_3A")) {
                        Campo = "C1_3A_ID";
                    }
                    if (Tabla.equals("TR_PLE_MEDS1_4")) {
                        Campo = "C1_4_ID";
                    }
                    if (Tabla.equals("TR_PLE_MEDS1_5")) {
                        Campo = "C1_5_ID";
                    }
                    if (Tabla.equals("TR_PLE_MEDS1_6")) {
                        Campo = "C1_6_ID";
                    }
                    if (Tabla.equals("TR_PLE_MEDS1_7")) {
                        Campo = "C1_7_ID";
                    }
                    if (Tabla.equals("TR_PLE_MEDS1_8")) {
                        Campo = "C1_8_ID";
                    }
                    if (Tabla.equals("TR_PLE_MEDS1_9")) {
                        Campo = "C1_9_ID";
                    }
                    Q.EliminaRegERRORES_INSERT_RALAB(Tabla, Pintegra.Entidad, Pintegra.Envio, Pintegra.Legislatura);
                    Q.EliminaRegERRORES_TR(Tabla, Pintegra.Entidad, Pintegra.Envio, Pintegra.Legislatura, Campo);
                    JOptionPane.showMessageDialog(null, "Registros eliminados de tabla " + Tabla);
                }
                Borrar.setVisible(false);
            }
        }

    }//GEN-LAST:event_BorrarActionPerformed

    private void ExportaEiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExportaEiActionPerformed
        // TODO add your handling code here:
        Integrar_TR Pintegra = new Integrar_TR();
        Exporta_errores_insert_tmp ErroresInsert = new Exporta_errores_insert_tmp();
        try {
            ErroresInsert.exportarExcel(jTable1, Pintegra.Entidad, Pintegra.Envio, Pintegra.Legislatura);
        } catch (IOException ex) {
            Logger.getLogger(Errores_InsertTMP.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ExportaEiActionPerformed

    public void limpiarTabla() {
        DefaultTableModel TablaError = (DefaultTableModel) jTable1.getModel();
        while (TablaError.getRowCount() > 0) {
            TablaError.removeRow(0);
        }
    }

    public void MuestraError() {
        jTextArea1.setVisible(false);
        jProgressBar1.setVisible(false);
        Borrar.setVisible(false);
        ExportaEi.setVisible(false);
        LtextoValida.setVisible(false);
        LValidacion.setVisible(false);
        String Texto = "";
        String regNITMP = "", regPLETMP = "";
        String regNITR = "", regPLETR = "", regPLEValida = "";
        ArrayList<String[]> ArrayErroresIns;
        Querys Q = new Querys();
        Integrar_TR Pintegra = new Integrar_TR();

        String[] ArrayTablasTMP = new String[14];
        ArrayTablasTMP[0] = "TMP_PLE_MEDS1_1";
        ArrayTablasTMP[1] = "TMP_PLE_MEDS1_1A";
        ArrayTablasTMP[2] = "TMP_PLE_MEDS1_1B";
        ArrayTablasTMP[3] = "TMP_PLE_MEDS1_1C";
        ArrayTablasTMP[4] = "TMP_PLE_MEDS1_1D";
        ArrayTablasTMP[5] = "TMP_PLE_MEDS1_2";
        ArrayTablasTMP[6] = "TMP_PLE_MEDS1_3";
        ArrayTablasTMP[7] = "TMP_PLE_MEDS1_3A";
        ArrayTablasTMP[8] = "TMP_PLE_MEDS1_4";
        ArrayTablasTMP[9] = "TMP_PLE_MEDS1_5";
        ArrayTablasTMP[10] = "TMP_PLE_MEDS1_6";
        ArrayTablasTMP[11] = "TMP_PLE_MEDS1_7";
        ArrayTablasTMP[12] = "TMP_PLE_MEDS1_8";
        ArrayTablasTMP[13] = "TMP_PLE_MEDS1_9";
        String[] ArrayCampoEnvioTMP = new String[14];
        ArrayCampoEnvioTMP[0] = "C1_1_ID_TMP";
        ArrayCampoEnvioTMP[1] = "C1_1A_ID_TMP";
        ArrayCampoEnvioTMP[2] = "C1_1B_ID_TMP";
        ArrayCampoEnvioTMP[3] = "C1_1C_ID_TMP";
        ArrayCampoEnvioTMP[4] = "C1_1D_ID_TMP";
        ArrayCampoEnvioTMP[5] = "C1_2_ID_TMP";
        ArrayCampoEnvioTMP[6] = "C1_3_ID_TMP";
        ArrayCampoEnvioTMP[7] = "C1_3A_ID_TMP";
        ArrayCampoEnvioTMP[8] = "C1_4_ID_TMP";
        ArrayCampoEnvioTMP[9] = "C1_5_ID_TMP";
        ArrayCampoEnvioTMP[10] = "C1_6_ID_TMP";
        ArrayCampoEnvioTMP[11] = "C1_7_ID_TMP";
        ArrayCampoEnvioTMP[12] = "C1_8_ID_TMP";
        ArrayCampoEnvioTMP[13] = "C1_9_ID_TMP";
        String[] ArrayTablasTR = new String[14];
        ArrayTablasTR[0] = "TR_PLE_MEDS1_1";
        ArrayTablasTR[1] = "TR_PLE_MEDS1_1A";
        ArrayTablasTR[2] = "TR_PLE_MEDS1_1B";
        ArrayTablasTR[3] = "TR_PLE_MEDS1_1C";
        ArrayTablasTR[4] = "TR_PLE_MEDS1_1D";
        ArrayTablasTR[5] = "TR_PLE_MEDS1_2";
        ArrayTablasTR[6] = "TR_PLE_MEDS1_3";
        ArrayTablasTR[7] = "TR_PLE_MEDS1_3A";
        ArrayTablasTR[8] = "TR_PLE_MEDS1_4";
        ArrayTablasTR[9] = "TR_PLE_MEDS1_5";
        ArrayTablasTR[10] = "TR_PLE_MEDS1_6";
        ArrayTablasTR[11] = "TR_PLE_MEDS1_7";
        ArrayTablasTR[12] = "TR_PLE_MEDS1_8";
        ArrayTablasTR[13] = "TR_PLE_MEDS1_9";
        String[] ArrayCampoEnvioTR = new String[14];
        ArrayCampoEnvioTR[0] = "C1_1_ID";
        ArrayCampoEnvioTR[1] = "C1_1A_ID";
        ArrayCampoEnvioTR[2] = "C1_1B_ID";
        ArrayCampoEnvioTR[3] = "C1_1C_ID";
        ArrayCampoEnvioTR[4] = "C1_1D_ID";
        ArrayCampoEnvioTR[5] = "C1_2_ID";
        ArrayCampoEnvioTR[6] = "C1_3_ID";
        ArrayCampoEnvioTR[7] = "C1_3A_ID";
        ArrayCampoEnvioTR[8] = "C1_4_ID";
        ArrayCampoEnvioTR[9] = "C1_5_ID";
        ArrayCampoEnvioTR[10] = "C1_6_ID";
        ArrayCampoEnvioTR[11] = "C1_7_ID";
        ArrayCampoEnvioTR[12] = "C1_8_ID";
        ArrayCampoEnvioTR[13] = "C1_9_ID";
        ArrayErroresIns = Q.TotalErrores_insert_pletmp(Pintegra.Entidad, Pintegra.Envio, Pintegra.Legislatura);

        jProgressBar1.setVisible(true);
        int Contador = 20;
        for (int i = 0; i < 14; i++) {
            regPLETMP = Q.Total_Reg_TMP(ArrayTablasTMP[i], Pintegra.Entidad, ArrayCampoEnvioTMP[i], Pintegra.Envio, Pintegra.Legislatura);
            regNITR = Q.Total_Reg_NI(ArrayTablasTR[i], Pintegra.Entidad, ArrayCampoEnvioTR[i], Pintegra.Envio, Pintegra.Legislatura);;
            regPLETR = Q.Total_Reg_TR(ArrayTablasTR[i], Pintegra.Entidad, ArrayCampoEnvioTR[i], Pintegra.Envio, Pintegra.Legislatura);;
            Texto = Texto + "" + ArrayTablasTR[i] + ": \n"
                    + "Reg_TMP:" + regPLETMP + " Reg_TR:" + regPLETR + "  Reg_NoIn:" + regNITR + "\n \n";
            jProgressBar1.setValue(Contador);
            Contador = Contador + 8;
        }
        jTextArea1.setText(Texto);
        jTextArea1.setVisible(true);
        if (ArrayErroresIns.size() > 0) {
            String[] errorarray;
            String part0 = "", part1 = "", part2 = "", part3 = "";
            DefaultTableModel TablaError = (DefaultTableModel) jTable1.getModel();
            regPLEValida = Q.Total_Reg_Valid(Entidad, Envio, Legislatura);
            LValidacion.setText(regPLEValida);
            Object[] fila = new Object[5];
            for (int j = 0; j < ArrayErroresIns.size(); j++) {
                String Datos = Arrays.toString(ArrayErroresIns.get(j)).replace("[", "").replace("]", "");
                errorarray = Datos.split(",");
                part0 = errorarray[0].trim();
                part1 = errorarray[1].trim();
                part2 = errorarray[2].trim();
                part3 = errorarray[3].trim();
                fila[0] = part0;
                fila[1] = part1;
                fila[2] = part2;
                fila[3] = part3;
                TablaError.addRow(fila);
                Class<?> col_class = jTable1.getColumnClass(0);
                jTable1.setDefaultEditor(col_class, null);
            }
            Borrar.setVisible(true);
            ExportaEi.setVisible(true);
            LtextoValida.setVisible(true);
            LValidacion.setVisible(true);
            pintarFila(jTable1);
        } else {

            JOptionPane.showMessageDialog(null, "No se encontraron registros con Error de insert", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    public static void pintarFila(JTable jTable1) {
        jTable1.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
            private final Color highlightColor = new Color(255, 220, 180); // Naranja claro
            private final Color selectionColor = new Color(0, 102, 204); // Azul fuerte para selecci√≥n
            private final Color defaultTextColor = Color.BLACK; // Color predeterminado del texto

            @Override
            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected,
                    boolean hasFocus, int row, int column) {
                Component component = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);

                // Verificar si la fila debe ser resaltada
                String valor = (String) table.getValueAt(row, 2); // Suponiendo que deseas resaltar seg√∫n el valor de la tercera columna
                if (valor != null && valor.equals("-808")) {
                    component.setBackground(highlightColor);
                } else {
                    component.setBackground(table.getBackground()); // Restaurar el color de fondo predeterminado si la fila no cumple con el criterio de resaltado
                }

                // Configurar el color de fondo cuando la celda est√° seleccionada
                if (isSelected) {
                    component.setBackground(selectionColor);
                }

                // Configurar el color del texto
                Color textColor = isSelected ? table.getSelectionForeground() : defaultTextColor;
                component.setForeground(textColor);

                return component;
            }
        });
    }


    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        new Thread(() -> {
            limpiarTabla();
            MuestraError();
        }).start();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        Integrar_TR.ventanaAbierta=false;
    }//GEN-LAST:event_formWindowClosing

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        System.out.println("hola");
    }//GEN-LAST:event_jTable1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Errores_InsertTR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Errores_InsertTR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Errores_InsertTR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Errores_InsertTR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Errores_InsertTR().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Borrar;
    private javax.swing.JButton ExportaEi;
    private javax.swing.JLabel LEntidad;
    private javax.swing.JLabel LEnvio;
    private javax.swing.JLabel LLegislatura;
    private javax.swing.JLabel LValidacion;
    private javax.swing.JLabel LtextoValida;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
