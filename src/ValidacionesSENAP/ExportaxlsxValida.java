/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package ValidacionesSENAP;

import Pantallas_SENAP.Conteos;
import Pantallas_SENAP.Valida;
import java.awt.BorderLayout;
import java.awt.Container;
import java.awt.FileDialog;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.SQLException;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.BorderFactory;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JProgressBar;
import javax.swing.border.Border;
import mx.org.inegi.QuerysGeneralOracle.SENAP.QueryConteosSenap;
import org.apache.poi.ss.usermodel.BorderStyle;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.FillPatternType;
import org.apache.poi.ss.usermodel.HorizontalAlignment;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.usermodel.VerticalAlignment;
import org.apache.poi.ss.util.CellRangeAddress;
import org.apache.poi.ss.util.RegionUtil;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFCellStyle;
import org.apache.poi.xssf.usermodel.XSSFFont;
import org.apache.poi.xssf.usermodel.XSSFRichTextString;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author ANTONIO.CORIA
 */
public class ExportaxlsxValida {

    ArrayList<String[]> ArrayResult;
    String[] parts;
    String parts0 = "", parts1 = "", parts2 = "", partsfechas = "";
    JFrame f = new JFrame("Progreso Exporta SENAP.xlsx");

    public void ValidacionSENAP() throws IOException, SQLException {

        Valida val = new Valida();
        f.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        Container content = f.getContentPane();
        JProgressBar progressBar = new JProgressBar();
        progressBar.removeAll();
        progressBar.setValue(0);
        progressBar.setStringPainted(true);
        Border border = BorderFactory.createTitledBorder("Cargando...");
        progressBar.setBorder(border);
        content.add(progressBar, BorderLayout.CENTER);

        f.setSize(300, 100);
        f.setResizable(false);
        f.setLocationRelativeTo(null);
        f.setVisible(true);
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd-MM-yy");

        XSSFWorkbook libro = new XSSFWorkbook();

        XSSFCellStyle estiloCelda0 = libro.createCellStyle();
        XSSFCellStyle estiloCelda2 = libro.createCellStyle();
        XSSFCellStyle estiloCeldaConteos = libro.createCellStyle();
        XSSFCellStyle ResulestiloCeldaConteos = libro.createCellStyle();

        XSSFFont fuente0 = libro.createFont();
        fuente0.setFontHeightInPoints((short) 12);
        fuente0.setColor(IndexedColors.WHITE.getIndex());
        fuente0.setFontName("Arial");
        fuente0.setBold(true);
        estiloCelda0.setFont(fuente0);
        estiloCelda0.setWrapText(true);
        estiloCelda0.setAlignment(HorizontalAlignment.CENTER);
        estiloCelda0.setVerticalAlignment(VerticalAlignment.CENTER);
        estiloCelda0.setFillForegroundColor(IndexedColors.BLUE_GREY.getIndex());
        estiloCelda0.setFillPattern(FillPatternType.SOLID_FOREGROUND);

        estiloCeldaConteos.setFont(fuente0);
        estiloCeldaConteos.setWrapText(true);
        estiloCeldaConteos.setAlignment(HorizontalAlignment.CENTER);
        estiloCeldaConteos.setVerticalAlignment(VerticalAlignment.CENTER);
        estiloCeldaConteos.setFillForegroundColor(IndexedColors.BLUE_GREY.getIndex());
        estiloCeldaConteos.setFillPattern(FillPatternType.SOLID_FOREGROUND);
        estiloCeldaConteos.setBorderBottom(BorderStyle.THIN);
        estiloCeldaConteos.setBottomBorderColor(IndexedColors.BLACK.getIndex());
        estiloCeldaConteos.setBorderLeft(BorderStyle.MEDIUM);
        estiloCeldaConteos.setLeftBorderColor(IndexedColors.BLACK.getIndex());
        estiloCeldaConteos.setBorderRight(BorderStyle.MEDIUM);
        estiloCeldaConteos.setRightBorderColor(IndexedColors.BLACK.getIndex());
        estiloCeldaConteos.setBorderTop(BorderStyle.THIN);
        estiloCeldaConteos.setTopBorderColor(IndexedColors.BLACK.getIndex());

        XSSFCellStyle estiloCelda1 = libro.createCellStyle();
        XSSFFont fuente2 = libro.createFont();
        fuente2.setFontHeightInPoints((short) 10);
        fuente2.setColor(IndexedColors.WHITE.getIndex());
        fuente2.setFontName("Arial");
        fuente2.setBold(true);
        estiloCelda1.setFont(fuente2);
        estiloCelda1.setWrapText(true);
        estiloCelda1.setAlignment(HorizontalAlignment.CENTER);
        estiloCelda1.setVerticalAlignment(VerticalAlignment.CENTER);
        estiloCelda1.setFillForegroundColor(IndexedColors.BLUE_GREY.getIndex());
        estiloCelda1.setFillPattern(FillPatternType.SOLID_FOREGROUND);

        XSSFCellStyle PAmarillo = libro.createCellStyle();
        PAmarillo.setFillForegroundColor(IndexedColors.YELLOW.getIndex());
        PAmarillo.setFillPattern(FillPatternType.SOLID_FOREGROUND);
        PAmarillo.setBorderBottom(BorderStyle.THIN);
        PAmarillo.setBottomBorderColor(IndexedColors.BLACK.getIndex());
        PAmarillo.setBorderLeft(BorderStyle.MEDIUM);
        PAmarillo.setLeftBorderColor(IndexedColors.BLACK.getIndex());
        PAmarillo.setBorderRight(BorderStyle.MEDIUM);
        PAmarillo.setRightBorderColor(IndexedColors.BLACK.getIndex());
        PAmarillo.setBorderTop(BorderStyle.THIN);
        PAmarillo.setTopBorderColor(IndexedColors.BLACK.getIndex());
        PAmarillo.setAlignment(HorizontalAlignment.CENTER);

        XSSFCellStyle estiloCeldabordes0 = libro.createCellStyle();
        estiloCeldabordes0.setBorderBottom(BorderStyle.THIN);
        estiloCeldabordes0.setBottomBorderColor(IndexedColors.BLACK.getIndex());
        estiloCeldabordes0.setBorderLeft(BorderStyle.MEDIUM);
        estiloCeldabordes0.setLeftBorderColor(IndexedColors.BLACK.getIndex());
        estiloCeldabordes0.setBorderRight(BorderStyle.MEDIUM);
        estiloCeldabordes0.setRightBorderColor(IndexedColors.BLACK.getIndex());
        estiloCeldabordes0.setBorderTop(BorderStyle.THIN);
        estiloCeldabordes0.setTopBorderColor(IndexedColors.BLACK.getIndex());
        estiloCeldabordes0.setAlignment(HorizontalAlignment.LEFT);
        estiloCeldabordes0.setVerticalAlignment(VerticalAlignment.TOP); // Alineaci√≥n vertical
        estiloCeldabordes0.setWrapText(true); // Ajuste de texto
        XSSFFont fuente1 = libro.createFont();
        fuente1.setFontHeightInPoints((short) 11);
        fuente1.setFontName("Arial");
        estiloCeldabordes0.setFont(fuente1);
        //estiloCeldabordes0.setAlignment(HorizontalAlignment.CENTER);

        estiloCelda2.setFont(fuente1);
        estiloCelda2.setWrapText(true);
        estiloCelda2.setAlignment(HorizontalAlignment.LEFT);
        //estiloCelda2.setVerticalAlignment(VerticalAlignment.LEFT);
        estiloCelda2.setBorderBottom(BorderStyle.THIN);
        estiloCelda2.setBottomBorderColor(IndexedColors.BLACK.getIndex());
        estiloCelda2.setBorderLeft(BorderStyle.MEDIUM);
        estiloCelda2.setLeftBorderColor(IndexedColors.BLACK.getIndex());
        estiloCelda2.setBorderRight(BorderStyle.MEDIUM);
        estiloCelda2.setRightBorderColor(IndexedColors.BLACK.getIndex());
        estiloCelda2.setBorderTop(BorderStyle.THIN);
        estiloCelda2.setTopBorderColor(IndexedColors.BLACK.getIndex());

        ResulestiloCeldaConteos.setFont(fuente1);
        ResulestiloCeldaConteos.setWrapText(true);
        ResulestiloCeldaConteos.setAlignment(HorizontalAlignment.CENTER);
        //estiloCelda2.setVerticalAlignment(VerticalAlignment.LEFT);
        ResulestiloCeldaConteos.setBorderBottom(BorderStyle.THIN);
        ResulestiloCeldaConteos.setBottomBorderColor(IndexedColors.BLACK.getIndex());
        ResulestiloCeldaConteos.setBorderLeft(BorderStyle.MEDIUM);
        ResulestiloCeldaConteos.setLeftBorderColor(IndexedColors.BLACK.getIndex());
        ResulestiloCeldaConteos.setBorderRight(BorderStyle.MEDIUM);
        ResulestiloCeldaConteos.setRightBorderColor(IndexedColors.BLACK.getIndex());
        ResulestiloCeldaConteos.setBorderTop(BorderStyle.THIN);
        ResulestiloCeldaConteos.setTopBorderColor(IndexedColors.BLACK.getIndex());

        XSSFSheet hojaConteos = libro.createSheet("GLOBAL"); // Crea una nueva hoja CONTEOS
        hojaConteos.setColumnWidth(0, 4000); // Ancho de las columnas 
        hojaConteos.setColumnWidth(1, 4000);
        hojaConteos.setColumnWidth(2, 4000);
        hojaConteos.setColumnWidth(3, 4000);
        hojaConteos.setColumnWidth(4, 4000);
        hojaConteos.setColumnWidth(5, 4000);
        hojaConteos.setColumnWidth(6, 4000);
        hojaConteos.setColumnWidth(7, 4000);
        hojaConteos.setColumnWidth(8, 4000);
        hojaConteos.setColumnWidth(9, 4000);
        hojaConteos.setColumnWidth(10, 4000);
        hojaConteos.setColumnWidth(11, 6000);
        hojaConteos.setColumnWidth(12, 4000);
        hojaConteos.setColumnWidth(13, 4000);
        hojaConteos.setColumnWidth(14, 4000);
        hojaConteos.setColumnWidth(15, 4000);
        hojaConteos.setColumnWidth(16, 4000);
        hojaConteos.setColumnWidth(17, 4000);
        hojaConteos.setColumnWidth(18, 4000);
        hojaConteos.setColumnWidth(19, 4000);
        hojaConteos.setColumnWidth(20, 4000);
        hojaConteos.setColumnWidth(21, 4000);
        hojaConteos.setColumnWidth(22, 4000);
        hojaConteos.setColumnWidth(23, 4000);
        hojaConteos.setColumnWidth(24, 4000);
        hojaConteos.setColumnWidth(25, 4000);
        hojaConteos.setColumnWidth(26, 4000);
        hojaConteos.setColumnWidth(27, 4000);
        hojaConteos.setColumnWidth(28, 4000);
        hojaConteos.setColumnWidth(29, 4000);
        hojaConteos.setColumnWidth(30, 4000);
        hojaConteos.setColumnWidth(31, 4000);
        hojaConteos.setColumnWidth(32, 4000);
        hojaConteos.setColumnWidth(33, 4000);
        hojaConteos.setColumnWidth(34, 4000);
        hojaConteos.setColumnWidth(35, 4000);
        hojaConteos.setColumnWidth(36, 4000);
        hojaConteos.setColumnWidth(37, 4000);
        hojaConteos.setColumnWidth(38, 4000);
        hojaConteos.setColumnWidth(39, 4000);
        hojaConteos.setColumnWidth(40, 4000);
        hojaConteos.setColumnWidth(41, 4000);
        hojaConteos.setColumnWidth(42, 4000);
        hojaConteos.setColumnWidth(43, 4000);
        hojaConteos.setColumnWidth(44, 4000);
        hojaConteos.setColumnWidth(45, 4000);
        hojaConteos.setColumnWidth(46, 4000);
        hojaConteos.setColumnWidth(47, 4000);
        hojaConteos.setColumnWidth(48, 4000);
        hojaConteos.setColumnWidth(49, 4000);
        hojaConteos.setColumnWidth(50, 4000);
        hojaConteos.setColumnWidth(51, 4000);
        hojaConteos.setColumnWidth(52, 4000);
        hojaConteos.setColumnWidth(53, 4000);
        hojaConteos.setColumnWidth(54, 4000);
        hojaConteos.setColumnWidth(55, 4000);
        hojaConteos.setColumnWidth(56, 4000);
        hojaConteos.setColumnWidth(57, 6000);
        hojaConteos.setColumnWidth(58, 4000);
        hojaConteos.setColumnWidth(59, 4000);
        hojaConteos.setColumnWidth(60, 4000);
        hojaConteos.setColumnWidth(61, 4000);
        hojaConteos.setColumnWidth(62, 4000);
        hojaConteos.setColumnWidth(63, 4000);
        hojaConteos.setColumnWidth(64, 4000);
        hojaConteos.setColumnWidth(65, 4000);
        hojaConteos.setColumnWidth(66, 4000);
        hojaConteos.setColumnWidth(67, 4000);
        hojaConteos.setColumnWidth(68, 4000);
        hojaConteos.setColumnWidth(69, 4000);
        hojaConteos.setColumnWidth(70, 4000);
        hojaConteos.setColumnWidth(71, 4000);
        hojaConteos.setColumnWidth(72, 4000);
        hojaConteos.setColumnWidth(73, 4000);

        XSSFSheet hojaNC = libro.createSheet("NOTICIA CRIMINAL"); // Crea una nueva hoja 
        hojaNC.setColumnWidth(0, 4000); // Anchi de las columnas 
        hojaNC.setColumnWidth(1, 40000);
        hojaNC.setColumnWidth(2, 4000);
        hojaNC.setColumnWidth(3, 4000);
        hojaNC.setColumnWidth(4, 4000);

// ATENCIONES DEBE DE AGREGARSE EN NOTICIA CRIMINAL
        XSSFSheet hojaATN = libro.createSheet("ATENCIONES"); // Crea una nueva hoja 
        hojaATN.setColumnWidth(0, 4000); // Anchi de las columnas 
        hojaATN.setColumnWidth(1, 40000);
        hojaATN.setColumnWidth(2, 4000);
        hojaATN.setColumnWidth(3, 4000);
        hojaATN.setColumnWidth(4, 4000);

        XSSFSheet hojaCI = libro.createSheet("CARPETA INVESTIGACION");
        hojaCI.setColumnWidth(0, 4000);
        hojaCI.setColumnWidth(1, 40000);
        hojaCI.setColumnWidth(2, 4000);
        hojaCI.setColumnWidth(3, 4000);
        hojaCI.setColumnWidth(4, 4000);

        XSSFSheet hojaDel = libro.createSheet("DELITOS");
        hojaDel.setColumnWidth(0, 4000);
        hojaDel.setColumnWidth(1, 40000);
        hojaDel.setColumnWidth(2, 4000);
        hojaDel.setColumnWidth(3, 4000);
        hojaDel.setColumnWidth(4, 4000);

        XSSFSheet hojavic = libro.createSheet("VICTIMAS");
        hojavic.setColumnWidth(0, 4000);
        hojavic.setColumnWidth(1, 40000);
        hojavic.setColumnWidth(2, 4000);
        hojavic.setColumnWidth(3, 4000);
        hojavic.setColumnWidth(4, 4000);

        XSSFSheet hojaIMP = libro.createSheet("IMPUTADO");
        hojaIMP.setColumnWidth(0, 4000);
        hojaIMP.setColumnWidth(1, 40000);
        hojaIMP.setColumnWidth(2, 4000);
        hojaIMP.setColumnWidth(3, 4000);
        hojaIMP.setColumnWidth(4, 4000);

        XSSFSheet hojaDET = libro.createSheet("DETERMINACION");
        hojaDET.setColumnWidth(0, 4000);
        hojaDET.setColumnWidth(1, 4000);
        hojaDET.setColumnWidth(2, 40000);
        hojaDET.setColumnWidth(3, 4000);
        hojaDET.setColumnWidth(4, 4000);

        XSSFSheet hojaPROC = libro.createSheet("PROCESO");
        hojaPROC.setColumnWidth(0, 4000);
        hojaPROC.setColumnWidth(1, 4000);
        hojaPROC.setColumnWidth(2, 40000);
        hojaPROC.setColumnWidth(3, 4000);
        hojaPROC.setColumnWidth(4, 4000);

        XSSFSheet hojaMASC = libro.createSheet("MASC");
        hojaMASC.setColumnWidth(0, 4000);
        hojaMASC.setColumnWidth(1, 4000);
        hojaMASC.setColumnWidth(2, 40000);
        hojaMASC.setColumnWidth(3, 4000);
        hojaMASC.setColumnWidth(4, 4000);

        XSSFSheet hojaMJ = libro.createSheet("MANDAMIENTOS JUDICIALES");
        hojaMJ.setColumnWidth(0, 4000);
        hojaMJ.setColumnWidth(1, 4000);
        hojaMJ.setColumnWidth(2, 40000);
        hojaMJ.setColumnWidth(3, 4000);
        hojaMJ.setColumnWidth(4, 4000);

        XSSFSheet hojaMC = libro.createSheet("MEDIDAS CAUTELARES");
        hojaMJ.setColumnWidth(0, 4000);
        hojaMJ.setColumnWidth(1, 4000);
        hojaMJ.setColumnWidth(2, 40000);
        hojaMJ.setColumnWidth(3, 4000);
        hojaMJ.setColumnWidth(4, 4000);

        XSSFSheet hojaIC = libro.createSheet("INVESTIGACION COMPLEMENTARIA");
        hojaIC.setColumnWidth(0, 4000);
        hojaIC.setColumnWidth(1, 4000);
        hojaIC.setColumnWidth(2, 40000);
        hojaIC.setColumnWidth(3, 4000);
        hojaIC.setColumnWidth(4, 4000);

        XSSFSheet hojaEI = libro.createSheet("ETAPA INTERMEDIA");
        hojaEI.setColumnWidth(0, 4000);
        hojaEI.setColumnWidth(1, 4000);
        hojaEI.setColumnWidth(2, 40000);
        hojaEI.setColumnWidth(3, 4000);
        hojaEI.setColumnWidth(4, 4000);

        XSSFSheet hojaSOBR = libro.createSheet("SOBRESEIMIENTO");
        hojaSOBR.setColumnWidth(0, 4000);
        hojaSOBR.setColumnWidth(1, 4000);
        hojaSOBR.setColumnWidth(2, 40000);
        hojaSOBR.setColumnWidth(3, 4000);
        hojaSOBR.setColumnWidth(4, 4000);

        XSSFSheet hojaSPCON = libro.createSheet("SUSPENCION CONDICIONAL");
        hojaSPCON.setColumnWidth(0, 4000);
        hojaSPCON.setColumnWidth(1, 4000);
        hojaSPCON.setColumnWidth(2, 40000);
        hojaSPCON.setColumnWidth(3, 4000);
        hojaSPCON.setColumnWidth(4, 4000);

        XSSFSheet hojaSENT = libro.createSheet("SENTENCIA");
        hojaSENT.setColumnWidth(0, 4000);
        hojaSENT.setColumnWidth(1, 4000);
        hojaSENT.setColumnWidth(2, 40000);
        hojaSENT.setColumnWidth(3, 4000);
        hojaSENT.setColumnWidth(4, 4000);

        Despliega_Conteos(libro, hojaConteos, estiloCeldaConteos, ResulestiloCeldaConteos, estiloCeldabordes0, progressBar, val.Entidad, val.Periodo);
        Despliega_NoticiaCriminal(libro, hojaNC, estiloCelda0, estiloCelda1, estiloCeldabordes0, progressBar, val.Entidad, val.Periodo);
        Despliega_Atenciones(libro, hojaATN, estiloCelda0, estiloCelda1, estiloCeldabordes0, progressBar, val.Entidad, val.Periodo);
        Despliega_CarpetaInvestigacion(libro, hojaCI, estiloCelda0, estiloCelda1, estiloCeldabordes0, progressBar, val.Entidad, val.Periodo);
        Despliega_Delitos(libro, hojaDel, estiloCelda0, estiloCelda1, estiloCeldabordes0, progressBar, val.Entidad, val.Periodo);
        Despliega_Victimas(libro, hojavic, estiloCelda0, estiloCelda1, estiloCeldabordes0, progressBar, val.Entidad, val.Periodo);
        Despliega_Imputado(libro, hojaIMP, estiloCelda0, estiloCelda1, estiloCeldabordes0, progressBar, val.Entidad, val.Periodo);
        Despliega_Determinacion(libro, hojaDET, estiloCelda0, estiloCelda1, estiloCeldabordes0, progressBar, val.Entidad, val.Periodo);
        Despliega_Proceso(libro, hojaPROC, estiloCelda0, estiloCelda1, estiloCeldabordes0, progressBar, val.Entidad, val.Periodo);
        Despliega_MASC(libro, hojaMASC, estiloCelda0, estiloCelda1, estiloCeldabordes0, progressBar, val.Entidad, val.Periodo);
        Despliega_MandamientosJudiciales(libro, hojaMJ, estiloCelda0, estiloCelda1, estiloCeldabordes0, progressBar, val.Entidad, val.Periodo);
        Despliega_MedidaCautelar(libro, hojaMC, estiloCelda0, estiloCelda1, estiloCeldabordes0, progressBar, val.Entidad, val.Periodo);
        Despliega_InvestigacionComplementaria(libro, hojaIC, estiloCelda0, estiloCelda1, estiloCeldabordes0, progressBar, val.Entidad, val.Periodo);
        Despliega_EtapaIntermedia(libro, hojaEI, estiloCelda0, estiloCelda1, estiloCeldabordes0, progressBar, val.Entidad, val.Periodo);
        Despliega_Sobreseimiento(libro, hojaSOBR, estiloCelda0, estiloCelda1, estiloCeldabordes0, progressBar, val.Entidad, val.Periodo);
        Despliega_SuspencionCondicional(libro, hojaSPCON, estiloCelda0, estiloCelda1, estiloCeldabordes0, progressBar, val.Entidad, val.Periodo);
        Despliega_Sentencia(libro, hojaSENT, estiloCelda0, estiloCelda1, estiloCeldabordes0, progressBar, val.Entidad, val.Periodo);

        SaveFileTo(libro, progressBar, f, dtf, val.Entidad, val.Periodo);

    }

    public void ConteosSENAP() throws IOException, SQLException {

        Valida Con = new Valida();
        f.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        Container content = f.getContentPane();
        JProgressBar progressBar = new JProgressBar();
        progressBar.removeAll();
        progressBar.setValue(0);
        progressBar.setStringPainted(true);
        Border border = BorderFactory.createTitledBorder("Cargando...");
        progressBar.setBorder(border);
        content.add(progressBar, BorderLayout.CENTER);

        f.setSize(300, 100);
        f.setResizable(false);
        f.setLocationRelativeTo(null);
        f.setVisible(true);
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd-MM-yy");

        XSSFWorkbook libro = new XSSFWorkbook();

        XSSFCellStyle estiloCelda0 = libro.createCellStyle();
        XSSFCellStyle estiloCelda2 = libro.createCellStyle();
        XSSFCellStyle estiloCeldaConteos = libro.createCellStyle();
        XSSFCellStyle ResulestiloCeldaConteos = libro.createCellStyle();

        XSSFFont fuente0 = libro.createFont();
        fuente0.setFontHeightInPoints((short) 12);
        fuente0.setColor(IndexedColors.WHITE.getIndex());
        fuente0.setFontName("Arial");
        fuente0.setBold(true);
        estiloCelda0.setFont(fuente0);
        estiloCelda0.setWrapText(true);
        estiloCelda0.setAlignment(HorizontalAlignment.CENTER);
        estiloCelda0.setVerticalAlignment(VerticalAlignment.CENTER);
        estiloCelda0.setFillForegroundColor(IndexedColors.BLUE_GREY.getIndex());
        estiloCelda0.setFillPattern(FillPatternType.SOLID_FOREGROUND);

        estiloCeldaConteos.setFont(fuente0);
        estiloCeldaConteos.setWrapText(true);
        estiloCeldaConteos.setAlignment(HorizontalAlignment.CENTER);
        estiloCeldaConteos.setVerticalAlignment(VerticalAlignment.CENTER);
        estiloCeldaConteos.setFillForegroundColor(IndexedColors.BLUE_GREY.getIndex());
        estiloCeldaConteos.setFillPattern(FillPatternType.SOLID_FOREGROUND);
        estiloCeldaConteos.setBorderBottom(BorderStyle.THIN);
        estiloCeldaConteos.setBottomBorderColor(IndexedColors.BLACK.getIndex());
        estiloCeldaConteos.setBorderLeft(BorderStyle.MEDIUM);
        estiloCeldaConteos.setLeftBorderColor(IndexedColors.BLACK.getIndex());
        estiloCeldaConteos.setBorderRight(BorderStyle.MEDIUM);
        estiloCeldaConteos.setRightBorderColor(IndexedColors.BLACK.getIndex());
        estiloCeldaConteos.setBorderTop(BorderStyle.THIN);
        estiloCeldaConteos.setTopBorderColor(IndexedColors.BLACK.getIndex());

        XSSFCellStyle estiloCelda1 = libro.createCellStyle();
        XSSFFont fuente2 = libro.createFont();
        fuente2.setFontHeightInPoints((short) 10);
        fuente2.setColor(IndexedColors.WHITE.getIndex());
        fuente2.setFontName("Arial");
        fuente2.setBold(true);
        estiloCelda1.setFont(fuente2);
        estiloCelda1.setWrapText(true);
        estiloCelda1.setAlignment(HorizontalAlignment.CENTER);
        estiloCelda1.setVerticalAlignment(VerticalAlignment.CENTER);
        estiloCelda1.setFillForegroundColor(IndexedColors.BLUE_GREY.getIndex());
        estiloCelda1.setFillPattern(FillPatternType.SOLID_FOREGROUND);

        XSSFCellStyle PAmarillo = libro.createCellStyle();
        PAmarillo.setFillForegroundColor(IndexedColors.YELLOW.getIndex());
        PAmarillo.setFillPattern(FillPatternType.SOLID_FOREGROUND);
        PAmarillo.setBorderBottom(BorderStyle.THIN);
        PAmarillo.setBottomBorderColor(IndexedColors.BLACK.getIndex());
        PAmarillo.setBorderLeft(BorderStyle.MEDIUM);
        PAmarillo.setLeftBorderColor(IndexedColors.BLACK.getIndex());
        PAmarillo.setBorderRight(BorderStyle.MEDIUM);
        PAmarillo.setRightBorderColor(IndexedColors.BLACK.getIndex());
        PAmarillo.setBorderTop(BorderStyle.THIN);
        PAmarillo.setTopBorderColor(IndexedColors.BLACK.getIndex());
        PAmarillo.setAlignment(HorizontalAlignment.CENTER);

        XSSFCellStyle estiloCeldabordes0 = libro.createCellStyle();
        estiloCeldabordes0.setBorderBottom(BorderStyle.THIN);
        estiloCeldabordes0.setBottomBorderColor(IndexedColors.BLACK.getIndex());
        estiloCeldabordes0.setBorderLeft(BorderStyle.MEDIUM);
        estiloCeldabordes0.setLeftBorderColor(IndexedColors.BLACK.getIndex());
        estiloCeldabordes0.setBorderRight(BorderStyle.MEDIUM);
        estiloCeldabordes0.setRightBorderColor(IndexedColors.BLACK.getIndex());
        estiloCeldabordes0.setBorderTop(BorderStyle.THIN);
        estiloCeldabordes0.setTopBorderColor(IndexedColors.BLACK.getIndex());
        estiloCeldabordes0.setAlignment(HorizontalAlignment.LEFT);
        estiloCeldabordes0.setVerticalAlignment(VerticalAlignment.TOP); // Alineaci√≥n vertical
        estiloCeldabordes0.setWrapText(true); // Ajuste de texto
        XSSFFont fuente1 = libro.createFont();
        fuente1.setFontHeightInPoints((short) 11);
        fuente1.setFontName("Arial");
        estiloCeldabordes0.setFont(fuente1);
        //estiloCeldabordes0.setAlignment(HorizontalAlignment.CENTER);

        estiloCelda2.setFont(fuente1);
        estiloCelda2.setWrapText(true);
        estiloCelda2.setAlignment(HorizontalAlignment.LEFT);
        //estiloCelda2.setVerticalAlignment(VerticalAlignment.LEFT);
        estiloCelda2.setBorderBottom(BorderStyle.THIN);
        estiloCelda2.setBottomBorderColor(IndexedColors.BLACK.getIndex());
        estiloCelda2.setBorderLeft(BorderStyle.MEDIUM);
        estiloCelda2.setLeftBorderColor(IndexedColors.BLACK.getIndex());
        estiloCelda2.setBorderRight(BorderStyle.MEDIUM);
        estiloCelda2.setRightBorderColor(IndexedColors.BLACK.getIndex());
        estiloCelda2.setBorderTop(BorderStyle.THIN);
        estiloCelda2.setTopBorderColor(IndexedColors.BLACK.getIndex());

        ResulestiloCeldaConteos.setFont(fuente1);
        ResulestiloCeldaConteos.setWrapText(true);
        ResulestiloCeldaConteos.setAlignment(HorizontalAlignment.CENTER);
        //estiloCelda2.setVerticalAlignment(VerticalAlignment.LEFT);
        ResulestiloCeldaConteos.setBorderBottom(BorderStyle.THIN);
        ResulestiloCeldaConteos.setBottomBorderColor(IndexedColors.BLACK.getIndex());
        ResulestiloCeldaConteos.setBorderLeft(BorderStyle.MEDIUM);
        ResulestiloCeldaConteos.setLeftBorderColor(IndexedColors.BLACK.getIndex());
        ResulestiloCeldaConteos.setBorderRight(BorderStyle.MEDIUM);
        ResulestiloCeldaConteos.setRightBorderColor(IndexedColors.BLACK.getIndex());
        ResulestiloCeldaConteos.setBorderTop(BorderStyle.THIN);
        ResulestiloCeldaConteos.setTopBorderColor(IndexedColors.BLACK.getIndex());

        XSSFSheet hojaConteos = libro.createSheet("GLOBAL"); // Crea una nueva hoja CONTEOS
        hojaConteos.setColumnWidth(0, 4000); // Ancho de las columnas 
        hojaConteos.setColumnWidth(1, 4000);
        hojaConteos.setColumnWidth(2, 4000);
        hojaConteos.setColumnWidth(3, 4000);
        hojaConteos.setColumnWidth(4, 4000);
        hojaConteos.setColumnWidth(5, 4000);
        hojaConteos.setColumnWidth(6, 4000);
        hojaConteos.setColumnWidth(7, 4000);
        hojaConteos.setColumnWidth(8, 4000);
        hojaConteos.setColumnWidth(9, 4000);
        hojaConteos.setColumnWidth(10, 4000);
        hojaConteos.setColumnWidth(11, 6000);
        hojaConteos.setColumnWidth(12, 4000);
        hojaConteos.setColumnWidth(13, 4000);
        hojaConteos.setColumnWidth(14, 4000);
        hojaConteos.setColumnWidth(15, 4000);
        hojaConteos.setColumnWidth(16, 4000);
        hojaConteos.setColumnWidth(17, 4000);
        hojaConteos.setColumnWidth(18, 4000);
        hojaConteos.setColumnWidth(19, 4000);
        hojaConteos.setColumnWidth(20, 4000);
        hojaConteos.setColumnWidth(21, 4000);
        hojaConteos.setColumnWidth(22, 4000);
        hojaConteos.setColumnWidth(23, 4000);
        hojaConteos.setColumnWidth(24, 4000);
        hojaConteos.setColumnWidth(25, 4000);
        hojaConteos.setColumnWidth(26, 4000);
        hojaConteos.setColumnWidth(27, 4000);
        hojaConteos.setColumnWidth(28, 4000);
        hojaConteos.setColumnWidth(29, 4000);
        hojaConteos.setColumnWidth(30, 4000);
        hojaConteos.setColumnWidth(31, 4000);
        hojaConteos.setColumnWidth(32, 4000);
        hojaConteos.setColumnWidth(33, 4000);
        hojaConteos.setColumnWidth(34, 4000);
        hojaConteos.setColumnWidth(35, 4000);
        hojaConteos.setColumnWidth(36, 4000);
        hojaConteos.setColumnWidth(37, 4000);
        hojaConteos.setColumnWidth(38, 4000);
        hojaConteos.setColumnWidth(39, 4000);
        hojaConteos.setColumnWidth(40, 4000);
        hojaConteos.setColumnWidth(41, 4000);
        hojaConteos.setColumnWidth(42, 4000);
        hojaConteos.setColumnWidth(43, 4000);
        hojaConteos.setColumnWidth(44, 4000);
        hojaConteos.setColumnWidth(45, 4000);
        hojaConteos.setColumnWidth(46, 4000);
        hojaConteos.setColumnWidth(47, 4000);
        hojaConteos.setColumnWidth(48, 4000);
        hojaConteos.setColumnWidth(49, 4000);
        hojaConteos.setColumnWidth(50, 4000);
        hojaConteos.setColumnWidth(51, 4000);
        hojaConteos.setColumnWidth(52, 4000);
        hojaConteos.setColumnWidth(53, 4000);
        hojaConteos.setColumnWidth(54, 4000);
        hojaConteos.setColumnWidth(55, 4000);
        hojaConteos.setColumnWidth(56, 4000);
        hojaConteos.setColumnWidth(57, 6000);
        hojaConteos.setColumnWidth(58, 4000);
        hojaConteos.setColumnWidth(59, 4000);
        hojaConteos.setColumnWidth(60, 4000);
        hojaConteos.setColumnWidth(61, 4000);
        hojaConteos.setColumnWidth(62, 4000);
        hojaConteos.setColumnWidth(63, 4000);
        hojaConteos.setColumnWidth(64, 4000);
        hojaConteos.setColumnWidth(65, 4000);
        hojaConteos.setColumnWidth(66, 4000);
        hojaConteos.setColumnWidth(67, 4000);
        hojaConteos.setColumnWidth(68, 4000);
        hojaConteos.setColumnWidth(69, 4000);
        hojaConteos.setColumnWidth(70, 4000);
        hojaConteos.setColumnWidth(71, 4000);
        hojaConteos.setColumnWidth(72, 4000);
        hojaConteos.setColumnWidth(73, 4000);

        Despliega_Conteos(libro, hojaConteos, estiloCeldaConteos, ResulestiloCeldaConteos, estiloCeldabordes0, progressBar, Con.Entidad, Con.Periodo);

        SaveFileTo_Conteo(libro, progressBar, f, dtf, Con.Entidad, Con.Periodo);
    }

    //NOTA: Agregar a la BD el a√±o 2025 en la tabla ANIO_CONTEOS   :)
    public void Despliega_Conteos(XSSFWorkbook libro, XSSFSheet hojaNC, XSSFCellStyle estiloCeldaConteos, XSSFCellStyle estiloCelda1, XSSFCellStyle estiloCeldabordes0, JProgressBar progressBar, String Entidad, String Periodo) throws SQLException {

        int i = 4;
        QueryConteosSenap CSQ = new QueryConteosSenap();
        ArrayList<String[]> ArrayResulQuery = null;

        // Crear el t√≠tulo de la ventana emergente
        Border border = BorderFactory.createTitledBorder("Cargando...Conteos");
        progressBar.setBorder(border);
        progressBar.setValue(4); // Porcentaje de progreso

        // Crear las filas iniciales una sola vez
        XSSFRow row00 = hojaNC.createRow(0); // Fila 0
        XSSFRow row01 = hojaNC.createRow(1); // Fila 1
        XSSFRow row02 = hojaNC.createRow(2); // Fila 2
        XSSFRow row03 = hojaNC.createRow(3); // Fila 3

        // Ajustar la altura de las filas iniciales
        row00.setHeight((short) 600);
        row01.setHeight((short) 600);
        row02.setHeight((short) 1500);
        row03.setHeight((short) 2200);

        // Crear celda y fusionar celdas para "A√±o"
        XSSFCell celda00 = row00.createCell(0); // Columna 0
        celda00.setCellStyle(estiloCeldaConteos);
        celda00.setCellType(CellType.STRING);
        celda00.setCellValue(new XSSFRichTextString("A√±o"));

        CellRangeAddress rangoA√±o = new CellRangeAddress(0, 3, 0, 0); // Fusionar A1:A4
        hojaNC.addMergedRegion(rangoA√±o);

        // Aplicar bordes al rango
        RegionUtil.setBorderTop(BorderStyle.THIN, rangoA√±o, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, rangoA√±o, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, rangoA√±o, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, rangoA√±o, hojaNC);

        // Primer bucle: Conteos por A√±o y Entidad
        ArrayResulQuery = CSQ.ConteosEntidadAnioT(Entidad, Periodo);
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.createRow(i); // Crear una nueva fila para cada registro
                XSSFCell celdaCAnio = currentRow.createCell(0); // Columna A√±o
                XSSFCell celdaEntidad = currentRow.createCell(1); // Columna Entidad
                XSSFCell celdaTCI = currentRow.createCell(2); // Columna Carpeta de investigaci√≥n

                // Estilos y tipos de celda
                celdaCAnio.setCellStyle(estiloCelda1); // Celda A√ëO
                celdaCAnio.setCellType(CellType.STRING);
                celdaEntidad.setCellStyle(estiloCelda1); // Celda ENTIDAD
                celdaEntidad.setCellType(CellType.STRING);
                celdaTCI.setCellStyle(estiloCelda1); // Celda CARPETADE INVESTIGACION
                celdaTCI.setCellType(CellType.STRING);
                // Procesar datos
                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                System.out.println("Datos del m: " + txtD1); // Verificar contenido
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                String[] parts = txtD1.split(",");
                // Validar y establecer valores
                if (parts.length >= 2) {
                    celdaCAnio.setCellValue(parts[0].trim()); // Inserta el valor en la celda A5
                    celdaEntidad.setCellValue(parts[1].trim()); // Inserta el valor en la celda B5
                    celdaTCI.setCellValue(parts[2].trim()); // Inserta el valor en la celda C5
                } else {
                    System.out.println("Datos incompletos en el primer bucle para la fila " + m);
                }
                i++; // Incrementa la fila para el siguient buble
            }
        } else {
            System.out.println("No hay datos para el primer bucle");
        }

        // Segundo bucle: Conteos por Imputado Plantilla Carpeta de Investigaci√≥n
        i = 4; // Reinicia i para comenzar en la fila que el primer bucle genero
        ArrayResulQuery = CSQ.ConteosImputadoPlantillaCarpeta(Entidad, Periodo);
        System.out.println("Datos del segundo bucle: " + ArrayResulQuery.size()); // Verifica si hay datos
        if (ArrayResulQuery.size() > 0) {

            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i); // Usar la fila correspondiente creada en el primer bucle
                XSSFCell celdaIMPCAR = currentRow.createCell(3); // Columna Imputado Plantilla Carpeta

                celdaIMPCAR.setCellStyle(estiloCelda1); // Estilos y tipos de celda
                celdaIMPCAR.setCellType(CellType.STRING); // Celda Imputado Plantilla Carpeta

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m)); // Procesa datos
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaIMPCAR.setCellValue(txtD1); // Establecer valores
                progressBar.setValue(20); // Porcentaje de progreso

                i++; // Incrementar la fila para el siguiente bucle
            }
        } else {
            System.out.println("No hay datos para el segundo bucle");
        }

        i = 4; // Reinicia i para comenzar en la misma fila que el segundo bucle genero
        ArrayResulQuery = CSQ.ConteosImputadoPlantillaImputado(Entidad, Periodo);
        System.out.println("Datos del tercer bucle: " + ArrayResulQuery.size()); // Verifica si hay datos
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i); // Usar la fila correspondiente creada en el primer bucle
                XSSFCell celdaIMPCAR = currentRow.createCell(4); // Columna Imputado Plantilla Carpeta

                celdaIMPCAR.setCellStyle(estiloCelda1); // Estilos y tipos de celda
                celdaIMPCAR.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m)); // Procesar datos
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaIMPCAR.setCellValue(txtD1); // Establecer valores

                i++; // Incrementar para la siguiente fila
            }
        } else {
            System.out.println("No hay datos para el segundo bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosDelitosPlantillaCarpeta(Entidad, Periodo);
        System.out.println("Datos del cuarto bucle: " + ArrayResulQuery.size()); // Verifica si hay datos
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i); // Usar la fila correspondiente creada en el primer bucle
                XSSFCell celdaDELPCAR = currentRow.createCell(5); // Columna Imputado Plantilla Carpeta

                celdaDELPCAR.setCellStyle(estiloCelda1); // Estilos y tipos de celda
                celdaDELPCAR.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m)); // Procesar datos
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDELPCAR.setCellValue(txtD1); // Establecer valores

                i++; // Incrementar para la siguiente fila
            }
        } else {
            System.out.println("No hay datos para el segundo bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosDelitosPlantillaDelitos(Entidad, Periodo);
        System.out.println("Datos del quinto bucle: " + ArrayResulQuery.size()); // Verifica si hay datos
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i); // Usar la fila correspondiente creada en el primer bucle
                XSSFCell celdaDELPDEL = currentRow.createCell(6); // Columna Imputado Plantilla Carpeta

                celdaDELPDEL.setCellStyle(estiloCelda1); // Estilos y tipos de celda
                celdaDELPDEL.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m)); // Procesar datos
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDELPDEL.setCellValue(txtD1); // Establecer valores

                i++; // Incrementar para la siguiente fila
            }
        } else {
            System.out.println("No hay datos para el quinto bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosVictimasPlantillaCarpeta(Entidad, Periodo);
        System.out.println("Datos del sexto bucle: " + ArrayResulQuery.size()); // Verifica si hay datos
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i); // Usar la fila correspondiente creada en el primer bucle
                XSSFCell celdaVICPCAR = currentRow.createCell(7); // Columna Imputado Plantilla Carpeta

                celdaVICPCAR.setCellStyle(estiloCelda1); // Estilos y tipos de celda
                celdaVICPCAR.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m)); // Procesar datos
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaVICPCAR.setCellValue(txtD1); // Establecer valores

                i++; // Incrementar para la siguiente fila
            }
        } else {
            System.out.println("No hay datos para el sexto bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosVictimasPlantillaVictimas(Entidad, Periodo);
        System.out.println("Datos del septimo bucle: " + ArrayResulQuery.size()); // Verifica si hay datos
        if (ArrayResulQuery.size() > 0) {

            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i); // Usar la fila correspondiente creada en el primer bucle
                XSSFCell celdaVICPVIC = currentRow.createCell(8); // Columna Imputado Plantilla Carpeta

                celdaVICPVIC.setCellStyle(estiloCelda1); // Estilos y tipos de celda
                celdaVICPVIC.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m)); // Procesar datos
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaVICPVIC.setCellValue(txtD1); // Establecer valores

                i++; // Incrementar para la siguiente fila
            }
        } else {
            System.out.println("No hay datos para el septimo bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosPCIEtapaInvestInicial(Entidad, Periodo);
        System.out.println("Datos del octavo bucle: " + ArrayResulQuery.size()); // Verifica si hay datos
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i); // Usar la fila correspondiente creada en el primer bucle
                XSSFCell celdaCIETIN = currentRow.createCell(9); // Columna Imputado Plantilla Carpeta

                celdaCIETIN.setCellStyle(estiloCelda1); // Estilos y tipos de celda
                celdaCIETIN.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m)); // Procesar datos
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaCIETIN.setCellValue(txtD1); // Establecer valores
                progressBar.setValue(36); // Porcentaje de progreso

                i++; // Incrementar para la siguiente fila
            }
        } else {
            System.out.println("No hay datos para el octavo bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosPCINoIdentificado(Entidad, Periodo);
        System.out.println("Datos del noveno bucle: " + ArrayResulQuery.size()); // Verifica si hay datos
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i); // Usar la fila correspondiente creada en el primer bucle
                XSSFCell celdaCINoIdent = currentRow.createCell(10); // Columna Imputado Plantilla Carpeta

                celdaCINoIdent.setCellStyle(estiloCelda1); // Estilos y tipos de celda
                celdaCINoIdent.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m)); // Procesar datos
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaCINoIdent.setCellValue(txtD1); // Establecer valores

                i++; // Incrementar para la siguiente fila
            }
        } else {
            System.out.println("No hay datos para el noveno bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosDeterminacionTotalDet(Entidad, Periodo);
        System.out.println("Datos del decimo bucle: " + ArrayResulQuery.size()); // Verifica si hay datos
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i); // Usar la fila correspondiente creada en el primer bucle
                XSSFCell celdaDETTOT = currentRow.createCell(11); // Columna Imputado Plantilla Carpeta

                celdaDETTOT.setCellStyle(estiloCelda1); // Estilos y tipos de celda
                celdaDETTOT.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m)); // Procesar datos
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETTOT.setCellValue(txtD1); // Establecer valores
                progressBar.setValue(52); // Porcentaje de progreso

                i++; // Incrementar para la siguiente fila
            }
        } else {
            System.out.println("No hay datos para el decimo bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosDeterminacionEstatusTotal(Entidad, Periodo);
        System.out.println("Datos del Undecimo bucle: " + ArrayResulQuery.size()); // Verifica si hay datos
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i); // Usar la fila correspondiente creada en el primer bucle
                XSSFCell celdaDETESTOT = currentRow.createCell(12); // Columna Imputado Plantilla Carpeta

                celdaDETESTOT.setCellStyle(estiloCelda1); // Estilos y tipos de celda
                celdaDETESTOT.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m)); // Procesar datos
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETESTOT.setCellValue(txtD1); // Establecer valores

                i++; // Incrementar para la siguiente fila
            }
        } else {
            System.out.println("No hay datos para el Undecimo bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosDeterminacionEstatusConcluida(Entidad, Periodo);
        System.out.println("Datos del duodecimo bucle: " + ArrayResulQuery.size()); // Verifica si hay datos
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i); // Usar la fila correspondiente creada en el primer bucle
                XSSFCell celdaDETESCONC = currentRow.createCell(13); // Columna Imputado Plantilla Carpeta

                celdaDETESCONC.setCellStyle(estiloCelda1); // Estilos y tipos de celda
                celdaDETESCONC.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m)); // Procesar datos
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETESCONC.setCellValue(txtD1); // Establecer valores

                i++; // Incrementar para la siguiente fila
            }
        } else {
            System.out.println("No hay datos para el duodecimo bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosDeterminacionEstatusTramite(Entidad, Periodo);
        System.out.println("Datos del decimotercero bucle: " + ArrayResulQuery.size()); // Verifica si hay datos
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i); // Usar la fila correspondiente creada en el primer bucle
                XSSFCell celdaDETESTRAM = currentRow.createCell(14); // Columna Imputado Plantilla Carpeta

                celdaDETESTRAM.setCellStyle(estiloCelda1); // Estilos y tipos de celda
                celdaDETESTRAM.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m)); // Procesar datos
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETESTRAM.setCellValue(txtD1); // Establecer valores

                i++; // Incrementar para la siguiente fila
            }
        } else {
            System.out.println("No hay datos para el decimotercero bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosDeterminacionSentidoTotal(Entidad, Periodo);
        System.out.println("Datos del decimocuarto bucle: " + ArrayResulQuery.size()); // Verifica si hay datos
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i); // Usar la fila correspondiente creada en el primer bucle
                XSSFCell celdaDETSENTOT = currentRow.createCell(15); // Columna Imputado Plantilla Carpeta

                celdaDETSENTOT.setCellStyle(estiloCelda1); // Estilos y tipos de celda
                celdaDETSENTOT.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m)); // Procesar datos
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENTOT.setCellValue(txtD1); // Establecer valores

                i++; // Incrementar para la siguiente fila
            }
        } else {
            System.out.println("No hay datos para el decimocuarto bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosDeterminacionEAPTotal(Entidad, Periodo);
        System.out.println("Datos del decimoquinto bucle: " + ArrayResulQuery.size()); // Verifica si hay datos
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i); // Usar la fila correspondiente creada en el primer bucle
                XSSFCell celdaDETSENEJTOT = currentRow.createCell(16); // Columna Imputado Plantilla Carpeta

                celdaDETSENEJTOT.setCellStyle(estiloCelda1); // Estilos y tipos de celda
                celdaDETSENEJTOT.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m)); // Procesar datos
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTOT.setCellValue(txtD1); // Establecer valores

                i++; // Incrementar para la siguiente fila
            }
        } else {
            System.out.println("No hay datos para el decimoquinto bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosDeterminacionEAPConcluida(Entidad, Periodo);
        System.out.println("Datos del decimosexto bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(17);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores

                i++;
            }
        } else {
            System.out.println("No hay datos para el decimosexto bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosDeterminacionEAPTramite(Entidad, Periodo);
        System.out.println("Datos del decimoseptimo bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(18);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores

                i++;
            }
        } else {
            System.out.println("No hay datos para el decimoseptimo bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosDeterminacionNOEAPTotal(Entidad, Periodo);
        System.out.println("Datos del decimoctavo bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(19);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores

                i++;
            }
        } else {
            System.out.println("No hay datos para el decimoctavo bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosDeterminacionNOEAPConcluida(Entidad, Periodo);
        System.out.println("Datos del decimonoveno bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(20);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores

                i++;
            }
        } else {
            System.out.println("No hay datos para el decimonoveno bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosDeterminacionNOEAPTramite(Entidad, Periodo);
        System.out.println("Datos del vig√©simo bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(21);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores

                i++;
            }
        } else {
            System.out.println("No hay datos para el vig√©simo bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosDeterminacionATTOTAL(Entidad, Periodo);
        System.out.println("Datos del vig√©simo primero bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(22);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores

                i++;
            }
        } else {
            System.out.println("No hay datos para el vig√©simo primero bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosDeterminacionATConcluida(Entidad, Periodo);
        System.out.println("Datos del vig√©simo segundo bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(23);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores

                i++;
            }
        } else {
            System.out.println("No hay datos para el vig√©simo segundo bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosDeterminacionATTramite(Entidad, Periodo);
        System.out.println("Datos del vig√©simo tercero bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(24);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores

                i++;
            }
        } else {
            System.out.println("No hay datos para el vig√©simo tercero bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosDeterminacionAIEAPTotal(Entidad, Periodo);
        System.out.println("Datos del vig√©simo cuarto bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(25);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores

                i++;
            }
        } else {
            System.out.println("No hay datos para el vig√©simo cuarto bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosDeterminacionAIEAPConcluida(Entidad, Periodo);
        System.out.println("Datos del vig√©simo quinto bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(26);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores

                i++;
            }
        } else {
            System.out.println("No hay datos para el vig√©simo quinto bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosDeterminacionAIEAPTramite(Entidad, Periodo);
        System.out.println("Datos del vig√©simo sexto bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(27);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores

                i++;
            }
        } else {
            System.out.println("No hay datos para el vig√©simo sexto bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosDeterminacionAICCNCDTotal(Entidad, Periodo);
        System.out.println("Datos del vig√©simo septimo bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(28);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores

                i++;
            }
        } else {
            System.out.println("No hay datos para el vig√©simo septimo bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosDeterminacionAICCNCDConcluida(Entidad, Periodo);
        System.out.println("Datos del vig√©simo octavo bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(29);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores

                i++;
            }
        } else {
            System.out.println("No hay datos para el vig√©simo octavo bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosDeterminacionAICCNCDTramite(Entidad, Periodo);
        System.out.println("Datos del vig√©simo noveno bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(30);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores

                i++;
            }
        } else {
            System.out.println("No hay datos para el vig√©simo noveno bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosDeterminacionAINITotal(Entidad, Periodo);
        System.out.println("Datos del trig√©simo bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(31);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores

                i++;
            }
        } else {
            System.out.println("No hay datos para el trig√©simo bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosDeterminacionAINIConcluida(Entidad, Periodo);
        System.out.println("Datos del trig√©simo primero bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(32);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores

                i++;
            }
        } else {
            System.out.println("No hay datos para el trig√©simo primero bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosDeterminacionAINITramite(Entidad, Periodo);
        System.out.println("Datos del trig√©simo segundo bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(33);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores

                i++;
            }
        } else {
            System.out.println("No hay datos para el trig√©simo segundo bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosDeterminacionCODEAPTotal(Entidad, Periodo);
        System.out.println("Datos del trig√©simo tercero bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(34);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores

                i++;
            }
        } else {
            System.out.println("No hay datos para el trig√©simo tercero bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosDeterminacionCODEAPConcluida(Entidad, Periodo);
        System.out.println("Datos del trig√©simo cuarto bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(35);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores

                i++;
            }
        } else {
            System.out.println("No hay datos para el trig√©simo cuarto bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosDeterminacionCODEAPTramite(Entidad, Periodo);
        System.out.println("Datos del trig√©simo quinto bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(36);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores

                i++;
            }
        } else {
            System.out.println("No hay datos para el trig√©simo quinto bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosDeterminacionIncompetenciaTotal(Entidad, Periodo);
        System.out.println("Datos del trig√©simo sexto bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(37);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores

                i++;
            }
        } else {
            System.out.println("No hay datos para el trig√©simo sexto bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosDeterminacionIncompetenciaConcluida(Entidad, Periodo);
        System.out.println("Datos del trig√©simo septimo bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(38);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores

                i++;
            }
        } else {
            System.out.println("No hay datos para el trig√©simo septimo bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosDeterminacionIncompetenciaTramite(Entidad, Periodo);
        System.out.println("Datos del trig√©simo octavo bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(39);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores

                i++;
            }
        } else {
            System.out.println("No hay datos para el trig√©simo octavo bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosDeterminacionARAMPDEACTotal(Entidad, Periodo);
        System.out.println("Datos del trig√©simo noveno bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(40);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores

                i++;
            }
        } else {
            System.out.println("No hay datos para el trig√©simo noveno bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosDeterminacionARAMPDEACConcluida(Entidad, Periodo);
        System.out.println("Datos del cuadrag√©simo bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(41);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores

                i++;
            }
        } else {
            System.out.println("No hay datos para el cuadrag√©simo bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosDeterminacionARAMPDEACTramite(Entidad, Periodo);
        System.out.println("Datos del cuadrag√©simo primero bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(42);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores

                i++;
            }
        } else {
            System.out.println("No hay datos para el cuadrag√©simo primero bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosDeterminacionAcumulacionTotal(Entidad, Periodo);
        System.out.println("Datos del cuadrag√©simo segundo bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(43);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores

                i++;
            }
        } else {
            System.out.println("No hay datos para el cuadrag√©simo segundo bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosDeterminacionAcumulacionConcluida(Entidad, Periodo);
        System.out.println("Datos del cuadrag√©simo tercera bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(44);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores

                i++;
            }
        } else {
            System.out.println("No hay datos para el cuadrag√©simo tercera bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosDeterminacionAcumulacionTramite(Entidad, Periodo);
        System.out.println("Datos del cuadrag√©simo cuarta bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(45);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores

                i++;
            }
        } else {
            System.out.println("No hay datos para el cuadrag√©simo cuarta bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosDeterminacionOtroTotal(Entidad, Periodo);
        System.out.println("Datos del cuadrag√©simo quinta bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(46);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores

                i++;
            }
        } else {
            System.out.println("No hay datos para el cuadrag√©simo quinta bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosDeterminacionOtroConcluida(Entidad, Periodo);
        System.out.println("Datos del cuadrag√©simo sexta bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(47);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores

                i++;
            }
        } else {
            System.out.println("No hay datos para el cuadrag√©simo sexta bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosDeterminacionOtroTramite(Entidad, Periodo);
        System.out.println("Datos del cuadrag√©simo septima bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(48);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores

                i++;
            }
        } else {
            System.out.println("No hay datos para el cuadrag√©simo septima bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosDeterminacionNOITotal(Entidad, Periodo);
        System.out.println("Datos del cuadrag√©simo octavo bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(49);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores

                i++;
            }
        } else {
            System.out.println("No hay datos para el cuadrag√©simo octavo bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosDeterminacionNOIConcluida(Entidad, Periodo);
        System.out.println("Datos del cuadrag√©simo noveno bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(50);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores

                i++;
            }
        } else {
            System.out.println("No hay datos para el cuadrag√©simo noveno bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosDeterminacionNOITramite(Entidad, Periodo);
        System.out.println("Datos del quincuag√©simo bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(51);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores

                i++;
            }
        } else {
            System.out.println("No hay datos para el quincuag√©simo bucle");
        }

        // PLANTILLA PROCESO
        i = 4;
        ArrayResulQuery = CSQ.ConteosProcesos(Entidad, Periodo);
        System.out.println("Datos del quincuag√©simo segundo bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(52);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores
                progressBar.setValue(68); // Porcentaje de progreso

                i++;
            }
        } else {
            System.out.println("No hay datos para el quincuag√©simo segundo bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosCITienenProceso(Entidad, Periodo);
        System.out.println("Datos del quincuag√©simo segundo bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(53);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores

                i++;
            }
        } else {
            System.out.println("No hay datos para el quincuag√©simo segundo bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosAudienciaInicialSI(Entidad, Periodo);
        System.out.println("Datos del quincuag√©simo quinto bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(54);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores

                i++;
            }
        } else {
            System.out.println("No hay datos para el quincuag√©simo quinto bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosAudienciaInicialNO(Entidad, Periodo);
        System.out.println("Datos del quincuag√©simo sexto bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(55);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores

                i++;
            }
        } else {
            System.out.println("No hay datos para el quincuag√©simo sexto bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosAudienciaInicialNOIdentificado(Entidad, Periodo);
        System.out.println("Datos del quincuag√©simo septimo bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(56);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores

                i++;
            }
        } else {
            System.out.println("No hay datos para el quincuag√©simo septimo bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosAudienciaInicialSINReferencia(Entidad, Periodo);
        System.out.println("Datos del quincuag√©simo octavo bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(57);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores

                i++;
            }
        } else {
            System.out.println("No hay datos para el quincuag√©simo octavo bucle");
        }

        // INVESTIGACION COMPLEMENTARIA
        i = 4;
        ArrayResulQuery = CSQ.ConteosProcesosIC(Entidad, Periodo);
        System.out.println("Datos del quincuag√©simo noveno bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(58);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores
                progressBar.setValue(84); // Porcentaje de progreso

                i++;
            }
        } else {
            System.out.println("No hay datos para el quincuag√©simo noveno bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosProcesosSIFI(Entidad, Periodo);
        System.out.println("Datos del quincuag√©simo noveno bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(59);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores

                i++;
            }
        } else {
            System.out.println("No hay datos para el quincuag√©simo noveno bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosProcesosNOFI(Entidad, Periodo);
        System.out.println("Datos del quincuag√©simo noveno bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(60);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores

                i++;
            }
        } else {
            System.out.println("No hay datos para el quincuag√©simo noveno bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosProcesosNOIdentificadaFI(Entidad, Periodo);
        System.out.println("Datos del quincuag√©simo noveno bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(61);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores

                i++;
            }
        } else {
            System.out.println("No hay datos para el quincuag√©simo noveno bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosProcesosSINReferenciaFI(Entidad, Periodo);
        System.out.println("Datos del quincuag√©simo noveno bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(62);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores

                i++;
            }
        } else {
            System.out.println("No hay datos para el quincuag√©simo noveno bucle");
        }

        // RESOLUCION DE LA AUTO VINCULACION A PROCESO
        i = 4;
        ArrayResulQuery = CSQ.ConteosProcesosSIRAVP(Entidad, Periodo);
        System.out.println("Datos del quincuag√©simo noveno bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(63);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores

                i++;
            }
        } else {
            System.out.println("No hay datos para el quincuag√©simo noveno bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosProcesosNORAVP(Entidad, Periodo);
        System.out.println("Datos del quincuag√©simo noveno bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(64);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores

                i++;
            }
        } else {
            System.out.println("No hay datos para el quincuag√©simo noveno bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosProcesosNOIdentificadoRAVP(Entidad, Periodo);
        System.out.println("Datos del quincuag√©simo noveno bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(65);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores

                i++;
            }
        } else {
            System.out.println("No hay datos para el quincuag√©simo noveno bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosProcesosSINReferenciaRAVP(Entidad, Periodo);
        System.out.println("Datos del quincuag√©simo noveno bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(66);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores

                i++;
            }
        } else {
            System.out.println("No hay datos para el quincuag√©simo noveno bucle");
        }

        // FORMULACION DE LA ACUSACION
        i = 4;
        ArrayResulQuery = CSQ.ConteosProcesosSIFA(Entidad, Periodo);
        System.out.println("Datos del quincuag√©simo noveno bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(67);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores

                i++;
            }
        } else {
            System.out.println("No hay datos para el quincuag√©simo noveno bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosProcesosNOFA(Entidad, Periodo);
        System.out.println("Datos del quincuag√©simo noveno bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(68);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores

                i++;
            }
        } else {
            System.out.println("No hay datos para el quincuag√©simo noveno bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosProcesosNOIdentificadoFA(Entidad, Periodo);
        System.out.println("Datos del quincuag√©simo noveno bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(69);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores

                i++;
            }
        } else {
            System.out.println("No hay datos para el quincuag√©simo noveno bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosProcesosSINReferenciaFA(Entidad, Periodo);
        System.out.println("Datos del quincuag√©simo noveno bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(70);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores

                i++;
            }
        } else {
            System.out.println("No hay datos para el quincuag√©simo noveno bucle");
        }

        // ETAPA INTERMEDIA
        i = 4;
        ArrayResulQuery = CSQ.ConteosEtapaIntermediaProcesos(Entidad, Periodo);
        System.out.println("Datos del quincuag√©simo noveno bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(71);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores
                progressBar.setValue(99); // Porcentaje de progreso

                i++;
            }
        } else {
            System.out.println("No hay datos para el quincuag√©simo noveno bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosEtapaSIAAJO(Entidad, Periodo);
        System.out.println("Datos del quincuag√©simo noveno bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(72);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores

                i++;
            }
        } else {
            System.out.println("No hay datos para el quincuag√©simo noveno bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosEtapaNOAAJO(Entidad, Periodo);
        System.out.println("Datos del quincuag√©simo noveno bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(73);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores

                i++;
            }
        } else {
            System.out.println("No hay datos para el quincuag√©simo noveno bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosEtapaNOIdentificadoAAJO(Entidad, Periodo);
        System.out.println("Datos del quincuag√©simo noveno bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(74);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores

                i++;
            }
        } else {
            System.out.println("No hay datos para el quincuag√©simo noveno bucle");
        }

        i = 4;
        ArrayResulQuery = CSQ.ConteosEtapaSINReferenciaAAJO(Entidad, Periodo);
        System.out.println("Datos del quincuag√©simo noveno bucle: " + ArrayResulQuery.size());
        if (ArrayResulQuery.size() > 0) {
            for (int m = 0; m < ArrayResulQuery.size(); m++) {
                XSSFRow currentRow = hojaNC.getRow(i);
                XSSFCell celdaDETSENEJTTRA = currentRow.createCell(75);

                celdaDETSENEJTTRA.setCellStyle(estiloCelda1);
                celdaDETSENEJTTRA.setCellType(CellType.STRING);

                String txtD1 = Arrays.toString(ArrayResulQuery.get(m));
                txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");

                celdaDETSENEJTTRA.setCellValue(txtD1); // Establecer valores

                i++;
            }
        } else {
            System.out.println("No hay datos para el quincuag√©simo noveno bucle");
        }

//ENCABEZADO
// Celda "Entidad"
        XSSFCell celda01 = row00.createCell(1); // Columna 1
        celda01.setCellStyle(estiloCeldaConteos);
        celda01.setCellType(CellType.STRING);
        celda01.setCellValue(new XSSFRichTextString("Entidad"));
        CellRangeAddress rangoEntidad = new CellRangeAddress(0, 3, 1, 1); // Fusionar B1:B4
        hojaNC.addMergedRegion(rangoEntidad);
        RegionUtil.setBorderTop(BorderStyle.THIN, rangoEntidad, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, rangoEntidad, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, rangoEntidad, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, rangoEntidad, hojaNC);

// Celda "Aspectos generales"
        XSSFCell celda02 = row00.createCell(2); // Columna 2
        celda02.setCellStyle(estiloCeldaConteos);
        celda02.setCellType(CellType.STRING);
        celda02.setCellValue(new XSSFRichTextString("Aspectos generales"));
        CellRangeAddress rangoAspectos = new CellRangeAddress(0, 0, 2, 8); // Fusionar C1:I1
        hojaNC.addMergedRegion(rangoAspectos);
        RegionUtil.setBorderTop(BorderStyle.THIN, rangoAspectos, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, rangoAspectos, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, rangoAspectos, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, rangoAspectos, hojaNC);

// Crear una nueva fila para "Carpetas de investigaci√≥n"
        XSSFCell celda03 = row01.createCell(2); // Columna 2
        celda03.setCellStyle(estiloCeldaConteos);
        celda03.setCellType(CellType.STRING);
        celda03.setCellValue(new XSSFRichTextString("Carpetas de investigaci√≥n"));
        CellRangeAddress rangoCarpetas = new CellRangeAddress(1, 3, 2, 2); // Fusionar C2:C4
        hojaNC.addMergedRegion(rangoCarpetas);
        RegionUtil.setBorderTop(BorderStyle.THIN, rangoCarpetas, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, rangoCarpetas, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, rangoCarpetas, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, rangoCarpetas, hojaNC);

        XSSFCell celda04 = row01.createCell(3); // Columna 3
        celda04.setCellStyle(estiloCeldaConteos);
        celda04.setCellType(CellType.STRING);
        celda04.setCellValue(new XSSFRichTextString("Imputados Plantilla carpeta"));
        CellRangeAddress Imputados_plantillaC = new CellRangeAddress(1, 3, 3, 3); // Fusionar D2:D4
        hojaNC.addMergedRegion(Imputados_plantillaC);
        RegionUtil.setBorderTop(BorderStyle.THIN, Imputados_plantillaC, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, Imputados_plantillaC, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, Imputados_plantillaC, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, Imputados_plantillaC, hojaNC);

        XSSFCell celda05 = row01.createCell(4); // Columna 4
        celda05.setCellStyle(estiloCeldaConteos);
        celda05.setCellType(CellType.STRING);
        celda05.setCellValue(new XSSFRichTextString("Imputados Plantilla imputado"));
        CellRangeAddress Imputados_plantillaI = new CellRangeAddress(1, 3, 4, 4); // Fusionar E2:E4
        hojaNC.addMergedRegion(Imputados_plantillaI);
        RegionUtil.setBorderTop(BorderStyle.THIN, Imputados_plantillaI, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, Imputados_plantillaI, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, Imputados_plantillaI, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, Imputados_plantillaI, hojaNC);

        XSSFCell celda06 = row01.createCell(5); // Columna 5
        celda06.setCellStyle(estiloCeldaConteos);
        celda06.setCellType(CellType.STRING);
        celda06.setCellValue(new XSSFRichTextString("Delitos Plantilla carpeta"));
        CellRangeAddress Delitos_plantillaC = new CellRangeAddress(1, 3, 5, 5); // Fusionar F2:F4
        hojaNC.addMergedRegion(Delitos_plantillaC);
        RegionUtil.setBorderTop(BorderStyle.THIN, Delitos_plantillaC, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, Delitos_plantillaC, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, Delitos_plantillaC, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, Delitos_plantillaC, hojaNC);

        XSSFCell celda07 = row01.createCell(6); // Columna 6
        celda07.setCellStyle(estiloCeldaConteos);
        celda07.setCellType(CellType.STRING);
        celda07.setCellValue(new XSSFRichTextString("Delitos Plantilla Delitos"));
        CellRangeAddress Delitos_plantillaD = new CellRangeAddress(1, 3, 6, 6); // Fusionar G2:G4
        hojaNC.addMergedRegion(Delitos_plantillaD);
        RegionUtil.setBorderTop(BorderStyle.THIN, Delitos_plantillaD, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, Delitos_plantillaD, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, Delitos_plantillaD, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, Delitos_plantillaD, hojaNC);

        XSSFCell celda08 = row01.createCell(7); // Columna 7
        celda08.setCellStyle(estiloCeldaConteos);
        celda08.setCellType(CellType.STRING);
        celda08.setCellValue(new XSSFRichTextString("V√≠ctimas Plantilla carpeta"));
        CellRangeAddress Victimas_plantillaC = new CellRangeAddress(1, 3, 7, 7); // Fusionar h2:h4
        hojaNC.addMergedRegion(Victimas_plantillaC);
        RegionUtil.setBorderTop(BorderStyle.THIN, Victimas_plantillaC, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, Victimas_plantillaC, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, Victimas_plantillaC, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, Victimas_plantillaC, hojaNC);

        XSSFCell celda09 = row01.createCell(8); // Columna 7
        celda09.setCellStyle(estiloCeldaConteos);
        celda09.setCellType(CellType.STRING);
        celda09.setCellValue(new XSSFRichTextString("V√≠ctimas Plantilla Victimas"));
        CellRangeAddress Victimas_plantillaV = new CellRangeAddress(1, 3, 8, 8); // Fusionar h2:h4
        hojaNC.addMergedRegion(Victimas_plantillaV);
        RegionUtil.setBorderTop(BorderStyle.THIN, Victimas_plantillaV, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, Victimas_plantillaV, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, Victimas_plantillaV, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, Victimas_plantillaV, hojaNC);

        XSSFCell celda10 = row00.createCell(9); // Columna 7
        celda10.setCellStyle(estiloCeldaConteos);
        celda10.setCellType(CellType.STRING);
        celda10.setCellValue(new XSSFRichTextString("Etapa carpetas de investigaci√≥n"));
        CellRangeAddress EtapaInvestigacion = new CellRangeAddress(0, 0, 9, 10); // Fusionar J1:K1
        hojaNC.addMergedRegion(EtapaInvestigacion);
        RegionUtil.setBorderTop(BorderStyle.THIN, EtapaInvestigacion, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, EtapaInvestigacion, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, EtapaInvestigacion, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, EtapaInvestigacion, hojaNC);

        XSSFCell celda11 = row01.createCell(9); // Columna 7
        celda11.setCellStyle(estiloCeldaConteos);
        celda11.setCellType(CellType.STRING);
        celda11.setCellValue(new XSSFRichTextString("Plantilla carpeta de investigaci√≥n"));
        CellRangeAddress Plantillaci = new CellRangeAddress(1, 2, 9, 10); // Fusionar J1:K1
        hojaNC.addMergedRegion(Plantillaci);
        RegionUtil.setBorderTop(BorderStyle.THIN, Plantillaci, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, Plantillaci, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, Plantillaci, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, Plantillaci, hojaNC);

        XSSFCell celda12 = row03.createCell(9); // Columna 7
        celda12.setCellStyle(estiloCeldaConteos);
        celda12.setCellType(CellType.STRING);
        celda12.setCellValue(new XSSFRichTextString("Etapa de investigaci√≥n inicial"));
        /*CellRangeAddress Etapa = new CellRangeAddress(3, 3, 9, 9); // Fusionar J1:K1
        hojaNC.addMergedRegion(Etapa);
        RegionUtil.setBorderTop(BorderStyle.THIN, Etapa, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, Etapa, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, Etapa, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, Etapa, hojaNC);*/

        XSSFCell celda13 = row03.createCell(10); // Columna 7
        celda13.setCellStyle(estiloCeldaConteos);
        celda13.setCellType(CellType.STRING);
        celda13.setCellValue(new XSSFRichTextString("No identificada"));
        /*CellRangeAddress NI = new CellRangeAddress(3, 3, 10, 10); // Fusionar J1:K1
        hojaNC.addMergedRegion(NI);
        RegionUtil.setBorderTop(BorderStyle.THIN, NI, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, NI, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, NI, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, NI, hojaNC);*/

        XSSFCell celda14 = row00.createCell(11); // Columna 7
        celda14.setCellStyle(estiloCeldaConteos);
        celda14.setCellType(CellType.STRING);
        celda14.setCellValue(new XSSFRichTextString("Determinaciones"));
        CellRangeAddress DET = new CellRangeAddress(0, 0, 11, 51); // Fusionar J1:K1
        hojaNC.addMergedRegion(DET);
        RegionUtil.setBorderTop(BorderStyle.THIN, DET, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, DET, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, DET, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, DET, hojaNC);

        XSSFCell celda15 = row01.createCell(11); // Columna 7
        celda15.setCellStyle(estiloCeldaConteos);
        celda15.setCellType(CellType.STRING);
        celda15.setCellValue(new XSSFRichTextString("Plantilla determinaci√≥n"));
        CellRangeAddress PLANDET = new CellRangeAddress(1, 1, 11, 51); // Fusionar J1:K1
        hojaNC.addMergedRegion(PLANDET);
        RegionUtil.setBorderTop(BorderStyle.THIN, PLANDET, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, PLANDET, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, PLANDET, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, PLANDET, hojaNC);

        XSSFCell celda16 = row02.createCell(11); // Columna 7
        celda16.setCellStyle(estiloCeldaConteos);
        celda16.setCellType(CellType.STRING);
        celda16.setCellValue(new XSSFRichTextString("Total determinaciones"));
        CellRangeAddress TDET = new CellRangeAddress(2, 3, 11, 11); // Fusionar J1:K1
        hojaNC.addMergedRegion(TDET);
        RegionUtil.setBorderTop(BorderStyle.THIN, TDET, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, TDET, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, TDET, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, TDET, hojaNC);

        XSSFCell celda17 = row02.createCell(12); // Columna 7
        celda17.setCellStyle(estiloCeldaConteos);
        celda17.setCellType(CellType.STRING);
        celda17.setCellValue(new XSSFRichTextString("Estatus"));
        CellRangeAddress EST = new CellRangeAddress(2, 2, 12, 14); // Fusionar J1:K1
        hojaNC.addMergedRegion(EST);
        RegionUtil.setBorderTop(BorderStyle.THIN, EST, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, EST, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, EST, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, EST, hojaNC);

        XSSFCell celda18 = row03.createCell(12); // Columna 7
        celda18.setCellStyle(estiloCeldaConteos);
        celda18.setCellType(CellType.STRING);
        celda18.setCellValue(new XSSFRichTextString("Total"));
        /*CellRangeAddress TOT1 = new CellRangeAddress(3, 3, 12, 12); // Fusionar J1:K1
        hojaNC.addMergedRegion(TOT1);
        RegionUtil.setBorderTop(BorderStyle.THIN, TOT1, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, TOT1, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, TOT1, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, TOT1, hojaNC);*/

        XSSFCell celda19 = row03.createCell(13); // Columna 7
        celda19.setCellStyle(estiloCeldaConteos);
        celda19.setCellType(CellType.STRING);
        celda19.setCellValue(new XSSFRichTextString("Concluida"));
        /*CellRangeAddress CONC1 = new CellRangeAddress(3, 3, 13, 13); // Fusionar J1:K1
        hojaNC.addMergedRegion(CONC1);
        RegionUtil.setBorderTop(BorderStyle.THIN, CONC1, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, CONC1, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, CONC1, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, CONC1, hojaNC);*/

        XSSFCell celda20 = row03.createCell(14); // Columna 7
        celda20.setCellStyle(estiloCeldaConteos);
        celda20.setCellType(CellType.STRING);
        celda20.setCellValue(new XSSFRichTextString("Tramite"));
        /* CellRangeAddress TRAM1 = new CellRangeAddress(3, 3, 14, 14); // Fusionar J1:K1
        hojaNC.addMergedRegion(TRAM1);
        RegionUtil.setBorderTop(BorderStyle.THIN, TRAM1, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, TRAM1, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, TRAM1, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, TRAM1, hojaNC);*/

        XSSFCell celda21 = row02.createCell(15); // Columna 7
        celda21.setCellStyle(estiloCeldaConteos);
        celda21.setCellType(CellType.STRING);
        celda21.setCellValue(new XSSFRichTextString("Total"));
        CellRangeAddress TDET1 = new CellRangeAddress(2, 3, 15, 15); // Fusionar J1:K1
        hojaNC.addMergedRegion(TDET1);
        RegionUtil.setBorderTop(BorderStyle.THIN, TDET1, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, TDET1, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, TDET1, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, TDET1, hojaNC);

        XSSFCell celda22 = row02.createCell(16); // Columna 7
        celda22.setCellStyle(estiloCeldaConteos);
        celda22.setCellType(CellType.STRING);
        celda22.setCellValue(new XSSFRichTextString("Ejercicio de la acci√≥n penal"));
        CellRangeAddress EST1 = new CellRangeAddress(2, 2, 16, 18); // Fusionar J1:K1
        hojaNC.addMergedRegion(EST1);
        RegionUtil.setBorderTop(BorderStyle.THIN, EST1, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, EST1, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, EST1, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, EST1, hojaNC);

        XSSFCell celda23 = row03.createCell(16); // Columna 7
        celda23.setCellStyle(estiloCeldaConteos);
        celda23.setCellType(CellType.STRING);
        celda23.setCellValue(new XSSFRichTextString("Total"));
        /*CellRangeAddress TOT1 = new CellRangeAddress(3, 3, 12, 12); // Fusionar J1:K1
        hojaNC.addMergedRegion(TOT1);
        RegionUtil.setBorderTop(BorderStyle.THIN, TOT1, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, TOT1, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, TOT1, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, TOT1, hojaNC);*/

        XSSFCell celda24 = row03.createCell(17); // Columna 7
        celda24.setCellStyle(estiloCeldaConteos);
        celda24.setCellType(CellType.STRING);
        celda24.setCellValue(new XSSFRichTextString("Concluida"));
        /*CellRangeAddress CONC1 = new CellRangeAddress(3, 3, 13, 13); // Fusionar J1:K1
        hojaNC.addMergedRegion(CONC1);
        RegionUtil.setBorderTop(BorderStyle.THIN, CONC1, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, CONC1, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, CONC1, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, CONC1, hojaNC);*/

        XSSFCell celda25 = row03.createCell(18); // Columna 7
        celda25.setCellStyle(estiloCeldaConteos);
        celda25.setCellType(CellType.STRING);
        celda25.setCellValue(new XSSFRichTextString("Tramite"));
        /* CellRangeAddress TRAM1 = new CellRangeAddress(3, 3, 14, 14); // Fusionar J1:K1
        hojaNC.addMergedRegion(TRAM1);
        RegionUtil.setBorderTop(BorderStyle.THIN, TRAM1, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, TRAM1, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, TRAM1, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, TRAM1, hojaNC);*/

        XSSFCell celda26 = row02.createCell(19); // Columna 7
        celda26.setCellStyle(estiloCeldaConteos);
        celda26.setCellType(CellType.STRING);
        celda26.setCellValue(new XSSFRichTextString("No ejercicio de la acci√≥n penal por la actualizaci√≥n de alguna causal de sobreseimiento"));
        CellRangeAddress EST2 = new CellRangeAddress(2, 2, 19, 21); // Fusionar J1:K1
        hojaNC.addMergedRegion(EST2);
        RegionUtil.setBorderTop(BorderStyle.THIN, EST2, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, EST2, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, EST2, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, EST2, hojaNC);

        XSSFCell celda27 = row03.createCell(19); // Columna 7
        celda27.setCellStyle(estiloCeldaConteos);
        celda27.setCellType(CellType.STRING);
        celda27.setCellValue(new XSSFRichTextString("Total"));
        /*CellRangeAddress TOT1 = new CellRangeAddress(3, 3, 12, 12); // Fusionar J1:K1
        hojaNC.addMergedRegion(TOT1);
        RegionUtil.setBorderTop(BorderStyle.THIN, TOT1, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, TOT1, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, TOT1, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, TOT1, hojaNC);*/

        XSSFCell celda28 = row03.createCell(20); // Columna 7
        celda28.setCellStyle(estiloCeldaConteos);
        celda28.setCellType(CellType.STRING);
        celda28.setCellValue(new XSSFRichTextString("Concluida"));
        /*CellRangeAddress CONC1 = new CellRangeAddress(3, 3, 13, 13); // Fusionar J1:K1
        hojaNC.addMergedRegion(CONC1);
        RegionUtil.setBorderTop(BorderStyle.THIN, CONC1, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, CONC1, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, CONC1, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, CONC1, hojaNC);*/

        XSSFCell celda29 = row03.createCell(21); // Columna 7
        celda29.setCellStyle(estiloCeldaConteos);
        celda29.setCellType(CellType.STRING);
        celda29.setCellValue(new XSSFRichTextString("Tramite"));
        /* CellRangeAddress TRAM1 = new CellRangeAddress(3, 3, 14, 14); // Fusionar J1:K1
        hojaNC.addMergedRegion(TRAM1);
        RegionUtil.setBorderTop(BorderStyle.THIN, TRAM1, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, TRAM1, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, TRAM1, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, TRAM1, hojaNC);*/

        XSSFCell celda30 = row02.createCell(22); // Columna 7
        celda30.setCellStyle(estiloCeldaConteos);
        celda30.setCellType(CellType.STRING);
        celda30.setCellValue(new XSSFRichTextString("Archivo temporal"));
        CellRangeAddress EST3 = new CellRangeAddress(2, 2, 22, 24); // Fusionar J1:K1
        hojaNC.addMergedRegion(EST3);
        RegionUtil.setBorderTop(BorderStyle.THIN, EST3, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, EST3, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, EST3, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, EST3, hojaNC);

        XSSFCell celda31 = row03.createCell(22); // Columna 7
        celda31.setCellStyle(estiloCeldaConteos);
        celda31.setCellType(CellType.STRING);
        celda31.setCellValue(new XSSFRichTextString("Total"));
        /*CellRangeAddress TOT1 = new CellRangeAddress(3, 3, 12, 12); // Fusionar J1:K1
        hojaNC.addMergedRegion(TOT1);
        RegionUtil.setBorderTop(BorderStyle.THIN, TOT1, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, TOT1, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, TOT1, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, TOT1, hojaNC);*/

        XSSFCell celda32 = row03.createCell(23); // Columna 7
        celda32.setCellStyle(estiloCeldaConteos);
        celda32.setCellType(CellType.STRING);
        celda32.setCellValue(new XSSFRichTextString("Concluida"));
        /*CellRangeAddress CONC1 = new CellRangeAddress(3, 3, 13, 13); // Fusionar J1:K1
        hojaNC.addMergedRegion(CONC1);
        RegionUtil.setBorderTop(BorderStyle.THIN, CONC1, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, CONC1, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, CONC1, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, CONC1, hojaNC);*/

        XSSFCell celda33 = row03.createCell(24); // Columna 7
        celda33.setCellStyle(estiloCeldaConteos);
        celda33.setCellType(CellType.STRING);
        celda33.setCellValue(new XSSFRichTextString("Tramite"));
        /* CellRangeAddress TRAM1 = new CellRangeAddress(3, 3, 14, 14); // Fusionar J1:K1
        hojaNC.addMergedRegion(TRAM1);
        RegionUtil.setBorderTop(BorderStyle.THIN, TRAM1, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, TRAM1, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, TRAM1, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, TRAM1, hojaNC);*/

        XSSFCell celda34 = row02.createCell(25); // Columna 7
        celda34.setCellStyle(estiloCeldaConteos);
        celda34.setCellType(CellType.STRING);
        celda34.setCellValue(new XSSFRichTextString("Abstenerse de investigar cuando se encuentre extinguida la acci√≥n penal o la responsabilidad penal de la persona imputada"));
        CellRangeAddress EST4 = new CellRangeAddress(2, 2, 25, 27); // Fusionar J1:K1
        hojaNC.addMergedRegion(EST4);
        RegionUtil.setBorderTop(BorderStyle.THIN, EST4, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, EST4, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, EST4, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, EST4, hojaNC);

        XSSFCell celda35 = row03.createCell(25); // Columna 7
        celda35.setCellStyle(estiloCeldaConteos);
        celda35.setCellType(CellType.STRING);
        celda35.setCellValue(new XSSFRichTextString("Total"));
        /*CellRangeAddress TOT1 = new CellRangeAddress(3, 3, 12, 12); // Fusionar J1:K1
        hojaNC.addMergedRegion(TOT1);
        RegionUtil.setBorderTop(BorderStyle.THIN, TOT1, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, TOT1, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, TOT1, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, TOT1, hojaNC);*/

        XSSFCell celda36 = row03.createCell(26); // Columna 7
        celda36.setCellStyle(estiloCeldaConteos);
        celda36.setCellType(CellType.STRING);
        celda36.setCellValue(new XSSFRichTextString("Concluida"));
        /*CellRangeAddress CONC1 = new CellRangeAddress(3, 3, 13, 13); // Fusionar J1:K1
        hojaNC.addMergedRegion(CONC1);
        RegionUtil.setBorderTop(BorderStyle.THIN, CONC1, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, CONC1, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, CONC1, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, CONC1, hojaNC);*/

        XSSFCell celda37 = row03.createCell(27); // Columna 7
        celda37.setCellStyle(estiloCeldaConteos);
        celda37.setCellType(CellType.STRING);
        celda37.setCellValue(new XSSFRichTextString("Tramite"));
        /* CellRangeAddress TRAM1 = new CellRangeAddress(3, 3, 14, 14); // Fusionar J1:K1
        hojaNC.addMergedRegion(TRAM1);
        RegionUtil.setBorderTop(BorderStyle.THIN, TRAM1, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, TRAM1, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, TRAM1, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, TRAM1, hojaNC);*/

        XSSFCell celda38 = row02.createCell(28); // Columna 7
        celda38.setCellStyle(estiloCeldaConteos);
        celda38.setCellType(CellType.STRING);
        celda38.setCellValue(new XSSFRichTextString("Abstenerse de investigar cuando las conductas no constituyan delito"));
        CellRangeAddress EST5 = new CellRangeAddress(2, 2, 28, 30); // Fusionar J1:K1
        hojaNC.addMergedRegion(EST5);
        RegionUtil.setBorderTop(BorderStyle.THIN, EST5, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, EST5, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, EST5, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, EST5, hojaNC);

        XSSFCell celda39 = row03.createCell(28);// Columna 7
        celda39.setCellStyle(estiloCeldaConteos);
        celda39.setCellType(CellType.STRING);
        celda39.setCellValue(new XSSFRichTextString("Total"));
        /*CellRangeAddress TOT1 = new CellRangeAddress(3, 3, 12, 12); // Fusionar J1:K1
        hojaNC.addMergedRegion(TOT1);
        RegionUtil.setBorderTop(BorderStyle.THIN, TOT1, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, TOT1, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, TOT1, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, TOT1, hojaNC);*/

        XSSFCell celda40 = row03.createCell(29); // Columna 7
        celda40.setCellStyle(estiloCeldaConteos);
        celda40.setCellType(CellType.STRING);
        celda40.setCellValue(new XSSFRichTextString("Concluida"));
        /*CellRangeAddress CONC1 = new CellRangeAddress(3, 3, 13, 13); // Fusionar J1:K1
        hojaNC.addMergedRegion(CONC1);
        RegionUtil.setBorderTop(BorderStyle.THIN, CONC1, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, CONC1, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, CONC1, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, CONC1, hojaNC);*/

        XSSFCell celda41 = row03.createCell(30); // Columna 7
        celda41.setCellStyle(estiloCeldaConteos);
        celda41.setCellType(CellType.STRING);
        celda41.setCellValue(new XSSFRichTextString("Tramite"));
        /* CellRangeAddress TRAM1 = new CellRangeAddress(3, 3, 14, 14); // Fusionar J1:K1
        hojaNC.addMergedRegion(TRAM1);
        RegionUtil.setBorderTop(BorderStyle.THIN, TRAM1, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, TRAM1, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, TRAM1, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, TRAM1, hojaNC);*/

        XSSFCell celda42 = row02.createCell(31); // Columna 7
        celda42.setCellStyle(estiloCeldaConteos);
        celda42.setCellType(CellType.STRING);
        celda42.setCellValue(new XSSFRichTextString("Abstenerse de investigar no identificado"));
        CellRangeAddress EST6 = new CellRangeAddress(2, 2, 31, 33);// Fusionar J1:K1
        hojaNC.addMergedRegion(EST6);
        RegionUtil.setBorderTop(BorderStyle.THIN, EST6, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, EST6, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, EST6, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, EST6, hojaNC);

        XSSFCell celda43 = row03.createCell(31); // Columna 7
        celda43.setCellStyle(estiloCeldaConteos);
        celda43.setCellType(CellType.STRING);
        celda43.setCellValue(new XSSFRichTextString("Total"));
        /*CellRangeAddress TOT1 = new CellRangeAddress(3, 3, 12, 12); // Fusionar J1:K1
        hojaNC.addMergedRegion(TOT1);
        RegionUtil.setBorderTop(BorderStyle.THIN, TOT1, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, TOT1, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, TOT1, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, TOT1, hojaNC);*/

        XSSFCell celda44 = row03.createCell(32); // Columna 7
        celda44.setCellStyle(estiloCeldaConteos);
        celda44.setCellType(CellType.STRING);
        celda44.setCellValue(new XSSFRichTextString("Concluida"));
        /*CellRangeAddress CONC1 = new CellRangeAddress(3, 3, 13, 13); // Fusionar J1:K1
        hojaNC.addMergedRegion(CONC1);
        RegionUtil.setBorderTop(BorderStyle.THIN, CONC1, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, CONC1, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, CONC1, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, CONC1, hojaNC);*/

        XSSFCell celda45 = row03.createCell(33); // Columna 7
        celda45.setCellStyle(estiloCeldaConteos);
        celda45.setCellType(CellType.STRING);
        celda45.setCellValue(new XSSFRichTextString("Tramite"));
        /* CellRangeAddress TRAM1 = new CellRangeAddress(3, 3, 14, 14); // Fusionar J1:K1
        hojaNC.addMergedRegion(TRAM1);
        RegionUtil.setBorderTop(BorderStyle.THIN, TRAM1, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, TRAM1, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, TRAM1, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, TRAM1, hojaNC);*/

        XSSFCell celda46 = row02.createCell(34); // Columna 7
        celda46.setCellStyle(estiloCeldaConteos);
        celda46.setCellType(CellType.STRING);
        celda46.setCellValue(new XSSFRichTextString("Criterios de oportunidad en los que se decret√≥ la extinci√≥n de la acci√≥n penal"));
        CellRangeAddress EST7 = new CellRangeAddress(2, 2, 34, 36); // Fusionar J1:K1
        hojaNC.addMergedRegion(EST7);
        RegionUtil.setBorderTop(BorderStyle.THIN, EST7, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, EST7, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, EST7, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, EST7, hojaNC);

        XSSFCell celda47 = row03.createCell(34); // Columna 7
        celda47.setCellStyle(estiloCeldaConteos);
        celda47.setCellType(CellType.STRING);
        celda47.setCellValue(new XSSFRichTextString("Total"));
        /*CellRangeAddress TOT1 = new CellRangeAddress(3, 3, 12, 12); // Fusionar J1:K1
        hojaNC.addMergedRegion(TOT1);
        RegionUtil.setBorderTop(BorderStyle.THIN, TOT1, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, TOT1, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, TOT1, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, TOT1, hojaNC);*/

        XSSFCell celda48 = row03.createCell(35); // Columna 7
        celda48.setCellStyle(estiloCeldaConteos);
        celda48.setCellType(CellType.STRING);
        celda48.setCellValue(new XSSFRichTextString("Concluida"));
        /*CellRangeAddress CONC1 = new CellRangeAddress(3, 3, 13, 13); // Fusionar J1:K1
        hojaNC.addMergedRegion(CONC1);
        RegionUtil.setBorderTop(BorderStyle.THIN, CONC1, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, CONC1, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, CONC1, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, CONC1, hojaNC);*/

        XSSFCell celda49 = row03.createCell(36); // Columna 7
        celda49.setCellStyle(estiloCeldaConteos);
        celda49.setCellType(CellType.STRING);
        celda49.setCellValue(new XSSFRichTextString("Tramite"));
        /* CellRangeAddress TRAM1 = new CellRangeAddress(3, 3, 14, 14); // Fusionar J1:K1
        hojaNC.addMergedRegion(TRAM1);
        RegionUtil.setBorderTop(BorderStyle.THIN, TRAM1, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, TRAM1, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, TRAM1, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, TRAM1, hojaNC);*/

        XSSFCell celda50 = row02.createCell(37); // Columna 7
        celda50.setCellStyle(estiloCeldaConteos);
        celda50.setCellType(CellType.STRING);
        celda50.setCellValue(new XSSFRichTextString("Incompetencia"));
        CellRangeAddress EST8 = new CellRangeAddress(2, 2, 37, 39); // Fusionar J1:K1
        hojaNC.addMergedRegion(EST8);
        RegionUtil.setBorderTop(BorderStyle.THIN, EST8, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, EST8, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, EST8, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, EST8, hojaNC);

        XSSFCell celda51 = row03.createCell(37); // Columna 7
        celda51.setCellStyle(estiloCeldaConteos);
        celda51.setCellType(CellType.STRING);
        celda51.setCellValue(new XSSFRichTextString("Total"));
        /*CellRangeAddress TOT1 = new CellRangeAddress(3, 3, 12, 12); // Fusionar J1:K1
        hojaNC.addMergedRegion(TOT1);
        RegionUtil.setBorderTop(BorderStyle.THIN, TOT1, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, TOT1, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, TOT1, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, TOT1, hojaNC);*/

        XSSFCell celda52 = row03.createCell(38); // Columna 7
        celda52.setCellStyle(estiloCeldaConteos);
        celda52.setCellType(CellType.STRING);
        celda52.setCellValue(new XSSFRichTextString("Concluida"));
        /*CellRangeAddress CONC1 = new CellRangeAddress(3, 3, 13, 13); // Fusionar J1:K1
        hojaNC.addMergedRegion(CONC1);
        RegionUtil.setBorderTop(BorderStyle.THIN, CONC1, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, CONC1, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, CONC1, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, CONC1, hojaNC);*/

        XSSFCell celda53 = row03.createCell(39); // Columna 7
        celda53.setCellStyle(estiloCeldaConteos);
        celda53.setCellType(CellType.STRING);
        celda53.setCellValue(new XSSFRichTextString("Tramite"));
        /* CellRangeAddress TRAM1 = new CellRangeAddress(3, 3, 14, 14); // Fusionar J1:K1
        hojaNC.addMergedRegion(TRAM1);
        RegionUtil.setBorderTop(BorderStyle.THIN, TRAM1, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, TRAM1, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, TRAM1, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, TRAM1, hojaNC);*/

        XSSFCell celda54 = row02.createCell(40); // Columna 7
        celda54.setCellStyle(estiloCeldaConteos);
        celda54.setCellType(CellType.STRING);
        celda54.setCellValue(new XSSFRichTextString("Acuerdos reparatorios aprobados por el Ministerio P√∫blico en los que se decret√≥ la extinci√≥n de la acci√≥n penal"));
        CellRangeAddress EST9 = new CellRangeAddress(2, 2, 40, 42); // Fusionar J1:K1
        hojaNC.addMergedRegion(EST9);
        RegionUtil.setBorderTop(BorderStyle.THIN, EST9, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, EST9, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, EST9, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, EST9, hojaNC);

        XSSFCell celda55 = row03.createCell(40); // Columna 7
        celda55.setCellStyle(estiloCeldaConteos);
        celda55.setCellType(CellType.STRING);
        celda55.setCellValue(new XSSFRichTextString("Total"));
        /*CellRangeAddress TOT1 = new CellRangeAddress(3, 3, 12, 12); // Fusionar J1:K1
        hojaNC.addMergedRegion(TOT1);
        RegionUtil.setBorderTop(BorderStyle.THIN, TOT1, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, TOT1, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, TOT1, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, TOT1, hojaNC);*/

        XSSFCell celda56 = row03.createCell(41); // Columna 7
        celda56.setCellStyle(estiloCeldaConteos);
        celda56.setCellType(CellType.STRING);
        celda56.setCellValue(new XSSFRichTextString("Concluida"));
        /*CellRangeAddress CONC1 = new CellRangeAddress(3, 3, 13, 13); // Fusionar J1:K1
        hojaNC.addMergedRegion(CONC1);
        RegionUtil.setBorderTop(BorderStyle.THIN, CONC1, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, CONC1, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, CONC1, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, CONC1, hojaNC);*/

        XSSFCell celda57 = row03.createCell(42); // Columna 7
        celda57.setCellStyle(estiloCeldaConteos);
        celda57.setCellType(CellType.STRING);
        celda57.setCellValue(new XSSFRichTextString("Tramite"));
        /* CellRangeAddress TRAM1 = new CellRangeAddress(3, 3, 14, 14); // Fusionar J1:K1
        hojaNC.addMergedRegion(TRAM1);
        RegionUtil.setBorderTop(BorderStyle.THIN, TRAM1, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, TRAM1, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, TRAM1, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, TRAM1, hojaNC);*/

        XSSFCell celda58 = row02.createCell(43); // Columna 7
        celda58.setCellStyle(estiloCeldaConteos);
        celda58.setCellType(CellType.STRING);
        celda58.setCellValue(new XSSFRichTextString("Acumulaci√≥n"));
        CellRangeAddress EST10 = new CellRangeAddress(2, 2, 43, 45); // Fusionar J1:K1
        hojaNC.addMergedRegion(EST10);
        RegionUtil.setBorderTop(BorderStyle.THIN, EST10, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, EST10, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, EST10, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, EST10, hojaNC);

        XSSFCell celda59 = row03.createCell(43); // Columna 7
        celda59.setCellStyle(estiloCeldaConteos);
        celda59.setCellType(CellType.STRING);
        celda59.setCellValue(new XSSFRichTextString("Total"));
        /*CellRangeAddress TOT1 = new CellRangeAddress(3, 3, 12, 12); // Fusionar J1:K1
        hojaNC.addMergedRegion(TOT1);
        RegionUtil.setBorderTop(BorderStyle.THIN, TOT1, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, TOT1, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, TOT1, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, TOT1, hojaNC);*/

        XSSFCell celda60 = row03.createCell(44); // Columna 7
        celda60.setCellStyle(estiloCeldaConteos);
        celda60.setCellType(CellType.STRING);
        celda60.setCellValue(new XSSFRichTextString("Concluida"));
        /*CellRangeAddress CONC1 = new CellRangeAddress(3, 3, 13, 13); // Fusionar J1:K1
        hojaNC.addMergedRegion(CONC1);
        RegionUtil.setBorderTop(BorderStyle.THIN, CONC1, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, CONC1, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, CONC1, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, CONC1, hojaNC);*/

        XSSFCell celda61 = row03.createCell(45); // Columna 7
        celda61.setCellStyle(estiloCeldaConteos);
        celda61.setCellType(CellType.STRING);
        celda61.setCellValue(new XSSFRichTextString("Tramite"));
        /* CellRangeAddress TRAM1 = new CellRangeAddress(3, 3, 14, 14); // Fusionar J1:K1
        hojaNC.addMergedRegion(TRAM1);
        RegionUtil.setBorderTop(BorderStyle.THIN, TRAM1, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, TRAM1, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, TRAM1, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, TRAM1, hojaNC);*/

        XSSFCell celda62 = row02.createCell(46); // Columna 7
        celda62.setCellStyle(estiloCeldaConteos);
        celda62.setCellType(CellType.STRING);
        celda62.setCellValue(new XSSFRichTextString("Otro"));
        CellRangeAddress EST11 = new CellRangeAddress(2, 2, 46, 48); // Fusionar J1:K1
        hojaNC.addMergedRegion(EST11);
        RegionUtil.setBorderTop(BorderStyle.THIN, EST11, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, EST11, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, EST11, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, EST11, hojaNC);

        XSSFCell celda63 = row03.createCell(46); // Columna 7
        celda63.setCellStyle(estiloCeldaConteos);
        celda63.setCellType(CellType.STRING);
        celda63.setCellValue(new XSSFRichTextString("Total"));
        /*CellRangeAddress TOT1 = new CellRangeAddress(3, 3, 12, 12); // Fusionar J1:K1
        hojaNC.addMergedRegion(TOT1);
        RegionUtil.setBorderTop(BorderStyle.THIN, TOT1, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, TOT1, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, TOT1, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, TOT1, hojaNC);*/

        XSSFCell celda64 = row03.createCell(47); // Columna 7
        celda64.setCellStyle(estiloCeldaConteos);
        celda64.setCellType(CellType.STRING);
        celda64.setCellValue(new XSSFRichTextString("Concluida"));
        /*CellRangeAddress CONC1 = new CellRangeAddress(3, 3, 13, 13); // Fusionar J1:K1
        hojaNC.addMergedRegion(CONC1);
        RegionUtil.setBorderTop(BorderStyle.THIN, CONC1, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, CONC1, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, CONC1, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, CONC1, hojaNC);*/

        XSSFCell celda65 = row03.createCell(48); // Columna 7
        celda65.setCellStyle(estiloCeldaConteos);
        celda65.setCellType(CellType.STRING);
        celda65.setCellValue(new XSSFRichTextString("Tramite"));
        /* CellRangeAddress TRAM1 = new CellRangeAddress(3, 3, 14, 14); // Fusionar J1:K1
        hojaNC.addMergedRegion(TRAM1);
        RegionUtil.setBorderTop(BorderStyle.THIN, TRAM1, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, TRAM1, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, TRAM1, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, TRAM1, hojaNC);*/

        XSSFCell celda66 = row02.createCell(49); // Columna 7
        celda66.setCellStyle(estiloCeldaConteos);
        celda66.setCellType(CellType.STRING);
        celda66.setCellValue(new XSSFRichTextString("No identificado"));
        CellRangeAddress EST12 = new CellRangeAddress(2, 2, 49, 51); // Fusionar J1:K1
        hojaNC.addMergedRegion(EST12);
        RegionUtil.setBorderTop(BorderStyle.THIN, EST12, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, EST12, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, EST12, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, EST12, hojaNC);

        XSSFCell celda67 = row03.createCell(49); // Columna 7
        celda67.setCellStyle(estiloCeldaConteos);
        celda67.setCellType(CellType.STRING);
        celda67.setCellValue(new XSSFRichTextString("Total"));
        /*CellRangeAddress TOT1 = new CellRangeAddress(3, 3, 12, 12); // Fusionar J1:K1
        hojaNC.addMergedRegion(TOT1);
        RegionUtil.setBorderTop(BorderStyle.THIN, TOT1, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, TOT1, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, TOT1, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, TOT1, hojaNC);*/

        XSSFCell celda68 = row03.createCell(50); // Columna 7
        celda68.setCellStyle(estiloCeldaConteos);
        celda68.setCellType(CellType.STRING);
        celda68.setCellValue(new XSSFRichTextString("Concluida"));
        /*CellRangeAddress CONC1 = new CellRangeAddress(3, 3, 13, 13); // Fusionar J1:K1
        hojaNC.addMergedRegion(CONC1);
        RegionUtil.setBorderTop(BorderStyle.THIN, CONC1, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, CONC1, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, CONC1, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, CONC1, hojaNC);*/

        XSSFCell celda69 = row03.createCell(51); // Columna 7
        celda69.setCellStyle(estiloCeldaConteos);
        celda69.setCellType(CellType.STRING);
        celda69.setCellValue(new XSSFRichTextString("Tramite"));
        /* CellRangeAddress TRAM1 = new CellRangeAddress(3, 3, 14, 14); // Fusionar J1:K1
        hojaNC.addMergedRegion(TRAM1);
        RegionUtil.setBorderTop(BorderStyle.THIN, TRAM1, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, TRAM1, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, TRAM1, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, TRAM1, hojaNC);*/

        XSSFCell celda70 = row00.createCell(52); // Columna 7
        celda70.setCellStyle(estiloCeldaConteos);
        celda70.setCellType(CellType.STRING);
        celda70.setCellValue(new XSSFRichTextString("Procesos"));
        CellRangeAddress Pro = new CellRangeAddress(0, 0, 52, 75); // Fusionar J1:K1
        hojaNC.addMergedRegion(Pro);
        RegionUtil.setBorderTop(BorderStyle.THIN, Pro, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, Pro, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, Pro, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, Pro, hojaNC);

        XSSFCell celda71 = row01.createCell(52); // Columna 7
        celda71.setCellStyle(estiloCeldaConteos);
        celda71.setCellType(CellType.STRING);
        celda71.setCellValue(new XSSFRichTextString("Plantilla procesos"));
        CellRangeAddress PlantPro = new CellRangeAddress(1, 1, 52, 57); // Fusionar J1:K1
        hojaNC.addMergedRegion(PlantPro);
        RegionUtil.setBorderTop(BorderStyle.THIN, PlantPro, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, PlantPro, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, PlantPro, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, PlantPro, hojaNC);

        XSSFCell celda72 = row01.createCell(58); // Columna 7
        celda72.setCellStyle(estiloCeldaConteos);
        celda72.setCellType(CellType.STRING);
        celda72.setCellValue(new XSSFRichTextString("Plantilla Investigaci√≥n complementaria"));
        CellRangeAddress PlantIC = new CellRangeAddress(1, 1, 58, 70); // Fusionar J1:K1
        hojaNC.addMergedRegion(PlantIC);
        RegionUtil.setBorderTop(BorderStyle.THIN, PlantIC, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, PlantIC, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, PlantIC, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, PlantIC, hojaNC);

        XSSFCell celda73 = row01.createCell(71); // Columna 7
        celda73.setCellStyle(estiloCeldaConteos);
        celda73.setCellType(CellType.STRING);
        celda73.setCellValue(new XSSFRichTextString("Plantilla Etapa Intermedia"));
        CellRangeAddress PlantEI = new CellRangeAddress(1, 1, 71, 75); // Fusionar J1:K1
        hojaNC.addMergedRegion(PlantEI);
        RegionUtil.setBorderTop(BorderStyle.THIN, PlantEI, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, PlantEI, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, PlantEI, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, PlantEI, hojaNC);

        XSSFCell celda74 = row02.createCell(52); // Columna 7
        celda74.setCellStyle(estiloCeldaConteos);
        celda74.setCellType(CellType.STRING);
        celda74.setCellValue(new XSSFRichTextString("Procesos"));
        CellRangeAddress Procesos = new CellRangeAddress(2, 3, 52, 52); // Fusionar J1:K1
        hojaNC.addMergedRegion(Procesos);
        RegionUtil.setBorderTop(BorderStyle.THIN, Procesos, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, Procesos, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, Procesos, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, Procesos, hojaNC);

        XSSFCell celda75 = row02.createCell(53); // Columna 7
        celda75.setCellStyle(estiloCeldaConteos);
        celda75.setCellType(CellType.STRING);
        celda75.setCellValue(new XSSFRichTextString("Carpetas que tienen un proceso"));
        CellRangeAddress CUP = new CellRangeAddress(2, 3, 53, 53); // Fusionar J1:K1
        hojaNC.addMergedRegion(CUP);
        RegionUtil.setBorderTop(BorderStyle.THIN, CUP, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, CUP, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, CUP, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, CUP, hojaNC);

        XSSFCell celda76 = row02.createCell(54); // Columna 7
        celda76.setCellStyle(estiloCeldaConteos);
        celda76.setCellType(CellType.STRING);
        celda76.setCellValue(new XSSFRichTextString("Audiencia inicial"));
        CellRangeAddress AI = new CellRangeAddress(2, 2, 54, 57); // Fusionar J1:K1
        hojaNC.addMergedRegion(AI);
        RegionUtil.setBorderTop(BorderStyle.THIN, AI, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, AI, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, AI, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, AI, hojaNC);

        XSSFCell celda77 = row03.createCell(54); // Columna 7
        celda77.setCellStyle(estiloCeldaConteos);
        celda77.setCellType(CellType.STRING);
        celda77.setCellValue(new XSSFRichTextString("¬øHubo celebraci√≥n de audiencia inicial? S√≠"));
        /* CellRangeAddress HAI= new CellRangeAddress(2, 2, 54, 56); // Fusionar J1:K1
        hojaNC.addMergedRegion(HAI);
        RegionUtil.setBorderTop(BorderStyle.THIN, HAI, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, HAI, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, HAI, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, HAI, hojaNC);*/

        XSSFCell celda78 = row03.createCell(55); // Columna 7
        celda78.setCellStyle(estiloCeldaConteos);
        celda78.setCellType(CellType.STRING);
        celda78.setCellValue(new XSSFRichTextString("¬øHubo celebraci√≥n de audiencia inicial? No"));
        /* CellRangeAddress HAI= new CellRangeAddress(2, 2, 54, 56); // Fusionar J1:K1
        hojaNC.addMergedRegion(HAI);
        RegionUtil.setBorderTop(BorderStyle.THIN, HAI, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, HAI, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, HAI, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, HAI, hojaNC);*/

        XSSFCell celda79 = row03.createCell(56); // Columna 7
        celda79.setCellStyle(estiloCeldaConteos);
        celda79.setCellType(CellType.STRING);
        celda79.setCellValue(new XSSFRichTextString("Audiencia inicial- No identificado"));
        /* CellRangeAddress HAI= new CellRangeAddress(2, 2, 54, 56); // Fusionar J1:K1
        hojaNC.addMergedRegion(HAI);
        RegionUtil.setBorderTop(BorderStyle.THIN, HAI, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, HAI, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, HAI, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, HAI, hojaNC);*/

        XSSFCell celdaSR1 = row03.createCell(57); // Columna 7
        celdaSR1.setCellStyle(estiloCeldaConteos);
        celdaSR1.setCellType(CellType.STRING);
        celdaSR1.setCellValue(new XSSFRichTextString("Audiencia inicial- Sin Referencia"));
        /* CellRangeAddress HAI= new CellRangeAddress(2, 2, 54, 56); // Fusionar J1:K1
        hojaNC.addMergedRegion(HAI);
        RegionUtil.setBorderTop(BorderStyle.THIN, HAI, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, HAI, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, HAI, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, HAI, hojaNC);*/

        XSSFCell celda80 = row02.createCell(58); // Columna 7
        celda80.setCellStyle(estiloCeldaConteos);
        celda80.setCellType(CellType.STRING);
        celda80.setCellValue(new XSSFRichTextString("Procesos en investigaci√≥n complementaria"));
        CellRangeAddress ProcIC = new CellRangeAddress(2, 3, 58, 58); // Fusionar J1:K1
        hojaNC.addMergedRegion(ProcIC);
        RegionUtil.setBorderTop(BorderStyle.THIN, ProcIC, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, ProcIC, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, ProcIC, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, ProcIC, hojaNC);

        XSSFCell celda81 = row02.createCell(59); // Columna 7
        celda81.setCellStyle(estiloCeldaConteos);
        celda81.setCellType(CellType.STRING);
        celda81.setCellValue(new XSSFRichTextString("Formulaci√≥n de la imputaci√≥n"));
        CellRangeAddress FI = new CellRangeAddress(2, 2, 59, 62); // Fusionar J1:K1
        hojaNC.addMergedRegion(FI);
        RegionUtil.setBorderTop(BorderStyle.THIN, FI, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, FI, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, FI, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, FI, hojaNC);

        XSSFCell celda82 = row03.createCell(59); // Columna 7
        celda82.setCellStyle(estiloCeldaConteos);
        celda82.setCellType(CellType.STRING);
        celda82.setCellValue(new XSSFRichTextString("Cantidad de procesos en donde se formul√≥ imputaci√≥n"));
        /*CellRangeAddress FI= new CellRangeAddress(2, 2, 58, 60); // Fusionar J1:K1
        hojaNC.addMergedRegion(FI);
        RegionUtil.setBorderTop(BorderStyle.THIN, FI, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, FI, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, FI, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, FI, hojaNC);*/

        XSSFCell celda83 = row03.createCell(60); // Columna 7
        celda83.setCellStyle(estiloCeldaConteos);
        celda83.setCellType(CellType.STRING);
        celda83.setCellValue(new XSSFRichTextString("Cantidad de procesos en donde no se formul√≥ imputaci√≥n"));
        /*CellRangeAddress FI= new CellRangeAddress(2, 2, 58, 60); // Fusionar J1:K1
        hojaNC.addMergedRegion(FI);
        RegionUtil.setBorderTop(BorderStyle.THIN, FI, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, FI, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, FI, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, FI, hojaNC);*/

        XSSFCell celda84 = row03.createCell(61); // Columna 7
        celda84.setCellStyle(estiloCeldaConteos);
        celda84.setCellType(CellType.STRING);
        celda84.setCellValue(new XSSFRichTextString("Cantidad de procesos en donde se formul√≥ imputaci√≥n - No identificado"));
        /*CellRangeAddress FI= new CellRangeAddress(2, 2, 58, 60); // Fusionar J1:K1
        hojaNC.addMergedRegion(FI);
        RegionUtil.setBorderTop(BorderStyle.THIN, FI, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, FI, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, FI, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, FI, hojaNC);*/

        XSSFCell celdaSR2 = row03.createCell(62); // Columna 7
        celdaSR2.setCellStyle(estiloCeldaConteos);
        celdaSR2.setCellType(CellType.STRING);
        celdaSR2.setCellValue(new XSSFRichTextString("Cantidad de procesos en donde se formul√≥ imputaci√≥n - Sin Referencia"));
        /*CellRangeAddress FI= new CellRangeAddress(2, 2, 58, 60); // Fusionar J1:K1
        hojaNC.addMergedRegion(FI);
        RegionUtil.setBorderTop(BorderStyle.THIN, FI, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, FI, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, FI, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, FI, hojaNC);*/

        XSSFCell celda85 = row02.createCell(63); // Columna 7
        celda85.setCellStyle(estiloCeldaConteos);
        celda85.setCellType(CellType.STRING);
        celda85.setCellValue(new XSSFRichTextString("Resoluci√≥n del auto de vinculaci√≥n a proceso "));
        CellRangeAddress RVP = new CellRangeAddress(2, 2, 63, 66); // Fusionar J1:K1
        hojaNC.addMergedRegion(RVP);
        RegionUtil.setBorderTop(BorderStyle.THIN, RVP, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, RVP, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, RVP, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, RVP, hojaNC);

        XSSFCell celda86 = row03.createCell(63); // Columna 7
        celda86.setCellStyle(estiloCeldaConteos);
        celda86.setCellType(CellType.STRING);
        celda86.setCellValue(new XSSFRichTextString("Cantidad de procesos en donde se vincul√≥ a proceso"));
        /*CellRangeAddress FI= new CellRangeAddress(2, 2, 58, 60); // Fusionar J1:K1
        hojaNC.addMergedRegion(FI);
        RegionUtil.setBorderTop(BorderStyle.THIN, FI, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, FI, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, FI, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, FI, hojaNC);*/

        XSSFCell celda87 = row03.createCell(64); // Columna 7
        celda87.setCellStyle(estiloCeldaConteos);
        celda87.setCellType(CellType.STRING);
        celda87.setCellValue(new XSSFRichTextString("Cantidad de procesos en donde no se vincul√≥ a proceso"));
        /*CellRangeAddress FI= new CellRangeAddress(2, 2, 58, 60); // Fusionar J1:K1
        hojaNC.addMergedRegion(FI);
        RegionUtil.setBorderTop(BorderStyle.THIN, FI, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, FI, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, FI, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, FI, hojaNC);*/

        XSSFCell celda88 = row03.createCell(65); // Columna 7
        celda88.setCellStyle(estiloCeldaConteos);
        celda88.setCellType(CellType.STRING);
        celda88.setCellValue(new XSSFRichTextString("Resoluci√≥n del auto de vinculaci√≥n a proceso - No identificado"));
        /*CellRangeAddress FI= new CellRangeAddress(2, 2, 58, 60); // Fusionar J1:K1
        hojaNC.addMergedRegion(FI);
        RegionUtil.setBorderTop(BorderStyle.THIN, FI, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, FI, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, FI, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, FI, hojaNC);*/

        XSSFCell celdaSR3 = row03.createCell(66); // Columna 7
        celdaSR3.setCellStyle(estiloCeldaConteos);
        celdaSR3.setCellType(CellType.STRING);
        celdaSR3.setCellValue(new XSSFRichTextString("Resoluci√≥n del auto de vinculaci√≥n a proceso - Sin Referencia"));
        /*CellRangeAddress FI= new CellRangeAddress(2, 2, 58, 60); // Fusionar J1:K1
        hojaNC.addMergedRegion(FI);
        RegionUtil.setBorderTop(BorderStyle.THIN, FI, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, FI, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, FI, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, FI, hojaNC);*/

        XSSFCell celda89 = row02.createCell(67); // Columna 7
        celda89.setCellStyle(estiloCeldaConteos);
        celda89.setCellType(CellType.STRING);
        celda89.setCellValue(new XSSFRichTextString("Formulaci√≥n de la acusaci√≥n"));
        CellRangeAddress FA = new CellRangeAddress(2, 2, 67, 70); // Fusionar J1:K1
        hojaNC.addMergedRegion(FA);
        RegionUtil.setBorderTop(BorderStyle.THIN, FA, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, FA, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, FA, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, FA, hojaNC);

        XSSFCell celda90 = row03.createCell(67); // Columna 7
        celda90.setCellStyle(estiloCeldaConteos);
        celda90.setCellType(CellType.STRING);
        celda90.setCellValue(new XSSFRichTextString("Cantidad de procesos en donde se formul√≥ acusaci√≥n"));
        /*CellRangeAddress FI= new CellRangeAddress(2, 2, 58, 60); // Fusionar J1:K1
        hojaNC.addMergedRegion(FI);
        RegionUtil.setBorderTop(BorderStyle.THIN, FI, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, FI, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, FI, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, FI, hojaNC);*/

        XSSFCell celda91 = row03.createCell(68); // Columna 7
        celda91.setCellStyle(estiloCeldaConteos);
        celda91.setCellType(CellType.STRING);
        celda91.setCellValue(new XSSFRichTextString("Cantidad de procesos en donde no se formul√≥ acusaci√≥n"));
        /*CellRangeAddress FI= new CellRangeAddress(2, 2, 58, 60); // Fusionar J1:K1
        hojaNC.addMergedRegion(FI);
        RegionUtil.setBorderTop(BorderStyle.THIN, FI, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, FI, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, FI, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, FI, hojaNC);*/

        XSSFCell celda92 = row03.createCell(69); // Columna 7
        celda92.setCellStyle(estiloCeldaConteos);
        celda92.setCellType(CellType.STRING);
        celda92.setCellValue(new XSSFRichTextString("Formulaci√≥n de la acusaci√≥n- No identificado"));
        /*CellRangeAddress FI= new CellRangeAddress(2, 2, 58, 60); // Fusionar J1:K1
        hojaNC.addMergedRegion(FI);
        RegionUtil.setBorderTop(BorderStyle.THIN, FI, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, FI, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, FI, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, FI, hojaNC);*/

        XSSFCell celdaSR4 = row03.createCell(70); // Columna 7
        celdaSR4.setCellStyle(estiloCeldaConteos);
        celdaSR4.setCellType(CellType.STRING);
        celdaSR4.setCellValue(new XSSFRichTextString("Formulaci√≥n de la acusaci√≥n- Sin Referencia"));
        /*CellRangeAddress FI= new CellRangeAddress(2, 2, 58, 60); // Fusionar J1:K1
        hojaNC.addMergedRegion(FI);
        RegionUtil.setBorderTop(BorderStyle.THIN, FI, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, FI, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, FI, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, FI, hojaNC);*/

        XSSFCell celda93 = row02.createCell(71); // Columna 7
        celda93.setCellStyle(estiloCeldaConteos);
        celda93.setCellType(CellType.STRING);
        celda93.setCellValue(new XSSFRichTextString("Etapa intermedia Procesos"));
        CellRangeAddress EIP = new CellRangeAddress(2, 3, 71, 71); // Fusionar J1:K1
        hojaNC.addMergedRegion(EIP);
        RegionUtil.setBorderTop(BorderStyle.THIN, EIP, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, EIP, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, EIP, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, EIP, hojaNC);

        XSSFCell celda94 = row02.createCell(72); // Columna 7
        celda94.setCellStyle(estiloCeldaConteos);
        celda94.setCellType(CellType.STRING);
        celda94.setCellValue(new XSSFRichTextString("Auto de apertura a juicio oral"));
        CellRangeAddress APJO = new CellRangeAddress(2, 2, 72, 75); // Fusionar J1:K1
        hojaNC.addMergedRegion(APJO);
        RegionUtil.setBorderTop(BorderStyle.THIN, APJO, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, APJO, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, APJO, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, APJO, hojaNC);

        XSSFCell celda95 = row03.createCell(72); // Columna 7
        celda95.setCellStyle(estiloCeldaConteos);
        celda95.setCellType(CellType.STRING);
        celda95.setCellValue(new XSSFRichTextString("Cantidad de procesos donde se dict√≥ auto de apertura a juicio oral"));
        /*CellRangeAddress FI= new CellRangeAddress(2, 2, 58, 60); // Fusionar J1:K1
        hojaNC.addMergedRegion(FI);
        RegionUtil.setBorderTop(BorderStyle.THIN, FI, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, FI, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, FI, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, FI, hojaNC);*/

        XSSFCell celda96 = row03.createCell(73); // Columna 7
        celda96.setCellStyle(estiloCeldaConteos);
        celda96.setCellType(CellType.STRING);
        celda96.setCellValue(new XSSFRichTextString("Cantidad de procesos donde no se dict√≥ auto de apertura a juicio oral"));
        /*CellRangeAddress FI= new CellRangeAddress(2, 2, 58, 60); // Fusionar J1:K1
        hojaNC.addMergedRegion(FI);
        RegionUtil.setBorderTop(BorderStyle.THIN, FI, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, FI, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, FI, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, FI, hojaNC);*/

        XSSFCell celda97 = row03.createCell(74); // Columna 7
        celda97.setCellStyle(estiloCeldaConteos);
        celda97.setCellType(CellType.STRING);
        celda97.setCellValue(new XSSFRichTextString("Auto de apertura a juicio oral - No identificado"));
        /*CellRangeAddress FI= new CellRangeAddress(2, 2, 58, 60); // Fusionar J1:K1
        hojaNC.addMergedRegion(FI);
        RegionUtil.setBorderTop(BorderStyle.THIN, FI, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, FI, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, FI, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, FI, hojaNC);*/

        XSSFCell celdaSR5 = row03.createCell(75); // Columna 7
        celdaSR5.setCellStyle(estiloCeldaConteos);
        celdaSR5.setCellType(CellType.STRING);
        celdaSR5.setCellValue(new XSSFRichTextString("Auto de apertura a juicio oral - Sin Referencia"));
        /*CellRangeAddress FI= new CellRangeAddress(2, 2, 58, 60); // Fusionar J1:K1
        hojaNC.addMergedRegion(FI);
        RegionUtil.setBorderTop(BorderStyle.THIN, FI, hojaNC);
        RegionUtil.setBorderBottom(BorderStyle.THIN, FI, hojaNC);
        RegionUtil.setBorderLeft(BorderStyle.THIN, FI, hojaNC);
        RegionUtil.setBorderRight(BorderStyle.THIN, FI, hojaNC);*/

    }

    // NOTICIA CRIMINAL 
    public void Despliega_NoticiaCriminal(XSSFWorkbook libro, XSSFSheet hojaNC, XSSFCellStyle estiloCelda0, XSSFCellStyle estiloCelda1, XSSFCellStyle estiloCeldabordes0, JProgressBar progressBar, String Entidad, String Periodo) throws SQLException {

        String Texto = "";
        int conEnc = 1, conDat = 2, coni = 1; // hace el conteo de las filas que se agregan por cada ID 
        Border border = BorderFactory.createTitledBorder("Cargando...Noticia Criminal"); // crea el titulo de la ventana emergente
        progressBar.setBorder(border);
        progressBar.setValue(7); // porcentaje que se muestra en la ventana para saber el progreso

        XSSFRow row00 = hojaNC.createRow(0); // Fila
        XSSFCell celda00 = row00.createCell(0); // Columna
        celda00.setCellStyle(estiloCelda0);
        celda00.setCellType(CellType.STRING);
        String titulo00 = "Noticia Criminal ";
        XSSFRichTextString texto00 = new XSSFRichTextString(titulo00);
        hojaNC.addMergedRegion(new CellRangeAddress(0, 0, 0, 3));
        celda00.setCellValue(texto00);
        row00.setHeight((short) 600);
        VNoticiaCriminal NC = new VNoticiaCriminal();

        ArrayResult = NC.RelacionMunicipio(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaNC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "UBICACIONID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaNC.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "  ReglaNegocio Adicional: La relaci√≥n entre los campos  CatEntidadFederativaID (Entidad) y CATMUNICIPIOID (Municipio) de la plantilla Noticia Criminal, no coinciden con la relaci√≥n de los campos CATENTIDADFEDERATIVAID y CATMUNICIPIODEMARCACIONTERRITORIALID del cat√°logo SENAP_MUNICIPIODEMARCACIONTERRITOR";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDD3.setCellStyle(estiloCeldabordes0);
            celdaDD3.setCellType(CellType.STRING);
            String txtDD3 = "";
            XSSFRichTextString textoDD3 = new XSSFRichTextString(txtDD3);
            celdaDD3.setCellValue(textoDD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = NC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NC.CATFISCALIA122024(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaNC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "NOTICIACRIMINALID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaNC.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio Adicional Favor de verificar variable CATFISCALIAID-IdentificadorFiscalia en su codigo diferente de 1 a 33 ya que la variable es de prioridad 1";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDD3.setCellStyle(estiloCeldabordes0);
            celdaDD3.setCellType(CellType.STRING);
            String txtDD3 = "";
            XSSFRichTextString textoDD3 = new XSSFRichTextString(txtDD3);
            celdaDD3.setCellValue(textoDD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = NC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        ArrayResult = NC.CATMEDCONOCHECHOSID122024(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaNC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "NOTICIACRIMINALID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaNC.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio Adicional Favor de verificar variable CATMEDCONOCHECHOSID-Medio de conocimiento de los hechos en su codigo diferente de 1 a 8 ya que la variable es de prioridad 1";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDD3.setCellStyle(estiloCeldabordes0);
            celdaDD3.setCellType(CellType.STRING);
            String txtDD3 = "";
            XSSFRichTextString textoDD3 = new XSSFRichTextString(txtDD3);
            celdaDD3.setCellValue(textoDD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = NC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        ArrayResult = NC.NOMBREFISREGIOESPECIALIZADA122024(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaNC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "NOTICIACRIMINALID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaNC.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio Adicional Favor de verificar variable NOMBREFISREGIOESPECIALIZADA-Nombre de la fiscal√≠a regional o especializada ya que la variable es de prioridad 1 y no puede ser null";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDD3.setCellStyle(estiloCeldabordes0);
            celdaDD3.setCellType(CellType.STRING);
            String txtDD3 = "";
            XSSFRichTextString textoDD3 = new XSSFRichTextString(txtDD3);
            celdaDD3.setCellValue(textoDD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = NC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        ArrayResult = NC.NOMBREAGEMINISTERIOPUBLICO122024(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaNC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "NOTICIACRIMINALID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaNC.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio Adicional Favor de verificar variable NOMBREAGEMINISTERIOPUBLICO-Nombre y n√∫mero de agencia del ministerio p√∫blico ya que la variable es de prioridad 1 y no puede ser null";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDD3.setCellStyle(estiloCeldabordes0);
            celdaDD3.setCellType(CellType.STRING);
            String txtDD3 = "";
            XSSFRichTextString textoDD3 = new XSSFRichTextString(txtDD3);
            celdaDD3.setCellValue(textoDD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = NC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        ArrayResult = NC.FECHAPRESDENUNQUERELLA(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaNC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "NOTICIACRIMINALID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaNC.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio Adicional Favor de verificar variable FECHAPRESDENUNQUERELLA-Fecha de presentaci√≥n de la denuncia o querella  ya que la variable es de prioridad 1 y no puede venir null";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDD3.setCellStyle(estiloCeldabordes0);
            celdaDD3.setCellType(CellType.STRING);
            String txtDD3 = "";
            XSSFRichTextString textoDD3 = new XSSFRichTextString(txtDD3);
            celdaDD3.setCellValue(textoDD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = NC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        ArrayResult = NC.HORAREPREDENUNQUERELLA122024(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaNC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "NOTICIACRIMINALID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaNC.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio Adicional Favor de verificar variable HORAREPREDENUNQUERELLA-Hora de presentaci√≥n de la denuncia o querella  ya que la variable es de prioridad 1 y no puede venir null";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDD3.setCellStyle(estiloCeldabordes0);
            celdaDD3.setCellType(CellType.STRING);
            String txtDD3 = "";
            XSSFRichTextString textoDD3 = new XSSFRichTextString(txtDD3);
            celdaDD3.setCellValue(textoDD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = NC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        ArrayResult = NC.CATAUTORDENUNQUERELLAID122024(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaNC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "NOTICIACRIMINALID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaNC.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio Adicional Favor de verificar variable HORAREPREDENUNQUERELLA-Hora de presentaci√≥n de la denuncia o querella  ya que la variable es de prioridad 1 y debe contener informaci√≥n (no se permiten valores null / 0)";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDD3.setCellStyle(estiloCeldabordes0);
            celdaDD3.setCellType(CellType.STRING);
            String txtDD3 = "";
            XSSFRichTextString textoDD3 = new XSSFRichTextString(txtDD3);
            celdaDD3.setCellValue(textoDD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = NC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        ArrayResult = NC.INICIOCARPETAINVESTIGACION122024(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaNC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "NOTICIACRIMINALID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaNC.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio Adicional favor de verificar variable INICIOCARPETAINVESTIGACION-Inicio carpeta de investigacion? ya que existe desglose en plantilla CarpetaInvestigacion ";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDD3.setCellStyle(estiloCeldabordes0);
            celdaDD3.setCellType(CellType.STRING);
            String txtDD3 = "";
            XSSFRichTextString textoDD3 = new XSSFRichTextString(txtDD3);
            celdaDD3.setCellValue(textoDD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = NC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NC.FECHAPRESDENUNQUERELLAMayor(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaNC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "NOTICIACRIMINALID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaNC.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio GENERAL. El campo Fecha de presentaci√≥n de la denuncia o querella (columna U) no puede ser mayor a la Fecha Actual.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDD3.setCellStyle(estiloCeldabordes0);
            celdaDD3.setCellType(CellType.STRING);
            String txtDD3 = "";
            XSSFRichTextString textoDD3 = new XSSFRichTextString(txtDD3);
            celdaDD3.setCellValue(textoDD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = NC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        /*ArrayResult = NC.BRINDOALGUNTIPOATENCION(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaNC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "NOTICIACRIMINALID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaNC.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Los campos Tipo de atenci√≥n (columna Y), Fecha de inicio de la atenci√≥n (columna AA), Fecha de conclusi√≥n de la atenci√≥n (columna AB) y Sentido de la conclusi√≥n de la atenci√≥n (columna AC) de la tabla Atenciones no podr√°n estar vac√≠as, si el campo ‚ÄúEn caso de no abrir carpeta de investigaci√≥n, ¬øSe brind√≥ alg√∫n tipo de atenci√≥n?‚Äù (columna X) es requisitado con la opci√≥n ‚ÄúSi‚Äù (1). ";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDD3.setCellStyle(estiloCeldabordes0);
            celdaDD3.setCellType(CellType.STRING);
            String txtDD3 = "";
            XSSFRichTextString textoDD3 = new XSSFRichTextString(txtDD3);
            celdaDD3.setCellValue(textoDD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = NC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NC.BRINDOALGUNTIPOATENCION1(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaNC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "NOTICIACRIMINALID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaNC.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Los campos Tipo de atenci√≥n (columna Y), Fecha de inicio de la atenci√≥n (columna AA), Fecha de conclusi√≥n de la atenci√≥n (columna AB) y Sentido de la conclusi√≥n de la atenci√≥n (columna AC) de la tabla Atenciones, deben estar vac√≠as debido al campo ‚ÄúEn caso de no abrir carpeta de investigaci√≥n, ¬øSe brind√≥ alg√∫n tipo de atenci√≥n?‚Äù (columna X) es diferente de la opci√≥n ‚ÄúSi‚Äù (1). ";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = "";
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = NC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NC.FECHCONCLUATE(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaNC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "NOTICIACRIMINALID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaNC.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo Fecha de conclusi√≥n de la atenci√≥n FECHCONCLUATE (TR_SENAP_ATENCIONES) deber√° ser mayor al campo Fecha de inicio de la atenci√≥n FECHAINICIOATENCION (TR_SENAP_ATENCIONES).";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDD3.setCellStyle(estiloCeldabordes0);
            celdaDD3.setCellType(CellType.STRING);
            String txtDD3 = "";
            XSSFRichTextString textoDD3 = new XSSFRichTextString(txtDD3);
            celdaDD3.setCellValue(textoDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = NC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NC.CATSENTCONCLUATEID(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaNC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "NOTICIACRIMINALID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaNC.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Si el campo Sentido de la conclusi√≥n de la atenci√≥n es requisitado con la opci√≥n Apertura de carpeta de investigaci√≥n (1) se deber√° continuar con el registro de la siguiente plantilla Carpeta de investigaci√≥n.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDD3.setCellStyle(estiloCeldabordes0);
            celdaDD3.setCellType(CellType.STRING);
            String txtDD3 = "";
            XSSFRichTextString textoDD3 = new XSSFRichTextString(txtDD3);
            celdaDD3.setCellValue(textoDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = NC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NC.CATSENTCONCLUATEID_DIFERENTE(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaNC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "NOTICIACRIMINALID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaNC.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Si el campo Sentido de la conclusi√≥n de la atenci√≥n es diferente de la opci√≥n Apertura de carpeta de investigaci√≥n (1) no debe existir registro en la plantilla Carpeta de investigaci√≥n.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDD3.setCellStyle(estiloCeldabordes0);
            celdaDD3.setCellType(CellType.STRING);
            String txtDD3 = "";
            XSSFRichTextString textoDD3 = new XSSFRichTextString(txtDD3);
            celdaDD3.setCellValue(textoDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = NC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NC.CATSENTCONCLUATEID_NOIDEN(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaNC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "NOTICIACRIMINALID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaNC.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Si el campo Sentido de la conclusi√≥n de la atenci√≥n se selecciona la opci√≥n Conclusi√≥n (2), Vista a otra autoridad por incompetencia (3) u Otro (4) se dar√° por concluido el registro y no se permitir√° el llenado de ninguna otra plantilla.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDD3.setCellStyle(estiloCeldabordes0);
            celdaDD3.setCellType(CellType.STRING);
            String txtDD3 = "";
            XSSFRichTextString textoDD3 = new XSSFRichTextString(txtDD3);
            celdaDD3.setCellValue(textoDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = NC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NC.CATSENTCONCLUATEID_IDENT(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaNC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "NOTICIACRIMINALID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaNC.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Si el campo Sentido de la conclusi√≥n de la atenci√≥n se selecciona la opci√≥n No identificado (9) se dar√° por concluido el registro y no se permitir√° el llenado de ninguna otra plantilla.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDD3.setCellStyle(estiloCeldabordes0);
            celdaDD3.setCellType(CellType.STRING);
            String txtDD3 = "";
            XSSFRichTextString textoDD3 = new XSSFRichTextString(txtDD3);
            celdaDD3.setCellValue(textoDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = NC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }*/
        ArrayResult = NC.INICIOCARPETAINVESTIGACION_NOTNULL(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaNC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "NOTICIACRIMINALID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaNC.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "La variable INICIOCARPETAINVESTIGACION es obligatoria, por lo tanto debe tener un dato v√°lido (1.S√≠ o 2.No)";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDD3.setCellStyle(estiloCeldabordes0);
            celdaDD3.setCellType(CellType.STRING);
            String txtDD3 = "";
            XSSFRichTextString textoDD3 = new XSSFRichTextString(txtDD3);
            celdaDD3.setCellValue(textoDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = NC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NC.INICIOCARPETAINVESTIGACION_IS1(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaNC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "NOTICIACRIMINALID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaNC.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "La variable INICIOCARPETAINVESTIGACION deber√≠a ser S√≠(1) ya que la variable CARPETAID tiene un ID v√°lido.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDD3.setCellStyle(estiloCeldabordes0);
            celdaDD3.setCellType(CellType.STRING);
            String txtDD3 = "";
            XSSFRichTextString textoDD3 = new XSSFRichTextString(txtDD3);
            celdaDD3.setCellValue(textoDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = NC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = NC.DESGLOSE_CARPETA(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaNC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "NOTICIACRIMINALID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaNC.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Se indic√≥ que existe una carpeta de investigaci√≥n para la noticia criminal ( Es decir  la variable INICIOCARPETAINVESTIGACION= 1.S√≠), sin embargo no se encontr√≥ el desglose en la tabla SENAP_CARPETAINVESTIGACION";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDD3.setCellStyle(estiloCeldabordes0);
            celdaDD3.setCellType(CellType.STRING);
            String txtDD3 = "";
            XSSFRichTextString textoDD3 = new XSSFRichTextString(txtDD3);
            celdaDD3.setCellValue(textoDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = NC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
    }

    // ATENCIONES
    public void Despliega_Atenciones(XSSFWorkbook libro, XSSFSheet hojaATN, XSSFCellStyle estiloCelda0, XSSFCellStyle estiloCelda1, XSSFCellStyle estiloCeldabordes0, JProgressBar progressBar, String Entidad, String Periodo) throws SQLException {

        String Texto = "";
        int conEnc = 1, conDat = 2, coni = 1; // hace el conteo de las filas que se agregan por cada ID 
        Border border = BorderFactory.createTitledBorder("Cargando...Atenciones"); // crea el titulo de la ventana emergente
        progressBar.setBorder(border);
        progressBar.setValue(14); // porcentaje que se muestra en la ventana para saber el progreso

        XSSFRow row00 = hojaATN.createRow(0); // Fila
        XSSFCell celda00 = row00.createCell(0); // Columna
        celda00.setCellStyle(estiloCelda0);
        celda00.setCellType(CellType.STRING);
        String titulo00 = "Atenciones ";
        XSSFRichTextString texto00 = new XSSFRichTextString(titulo00);
        hojaATN.addMergedRegion(new CellRangeAddress(0, 0, 0, 2));
        celda00.setCellValue(texto00);
        row00.setHeight((short) 600);
        VAtenciones ATN = new VAtenciones();

        /*ArrayResult = ATN.FECHAINICIOATENCION(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaATN.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "ATENCIONID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaATN.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo Fecha de inicio de la atenci√≥n (columna AA) no debe ser mayor al campo Fecha de conclusi√≥n de la atenci√≥n (columna AB).";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = ATN.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = ATN.FECHAINICIOATENCIONMayor(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaATN.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "ATENCIONID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaATN.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo Fecha de inicio de la atenci√≥n (columna AA) no debe ser mayor a la Fecha Actual.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = ATN.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = ATN.FECHCONCLUATEMayor(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaATN.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "ATENCIONID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaATN.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo Fecha de conclusi√≥n de la atenci√≥n (columna AB) no debe ser mayor a la Fecha Actual.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = ATN.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }*/
    }

    // CARPETA DE INVESTIGACION
    // modificada
    public void Despliega_CarpetaInvestigacion(XSSFWorkbook libro, XSSFSheet hojaCI, XSSFCellStyle estiloCelda0, XSSFCellStyle estiloCelda1, XSSFCellStyle estiloCeldabordes0, JProgressBar progressBar, String Entidad, String Periodo) throws SQLException {

        String Texto = "";
        int conEnc = 1, conDat = 2, coni = 1;
        Border border = BorderFactory.createTitledBorder("Cargando...Carpeta de Investigacion");
        progressBar.setBorder(border);
        progressBar.setValue(21);

        XSSFRow row00 = hojaCI.createRow(0); // Fila
        XSSFCell celda00 = row00.createCell(0); // Columna
        celda00.setCellStyle(estiloCelda0);
        celda00.setCellType(CellType.STRING);
        String titulo00 = "Carpeta de Investigaci√≥n";
        XSSFRichTextString texto00 = new XSSFRichTextString(titulo00);
        hojaCI.addMergedRegion(new CellRangeAddress(0, 0, 0, 2));
        celda00.setCellValue(texto00);
        row00.setHeight((short) 600);
        VCarpetaInvetigacion CI = new VCarpetaInvetigacion();

        ArrayResult = CI.RelacionMunicipio(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaCI.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "UBICACIONID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaCI.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio Adicional: La relaci√≥n entre los campos  CatEntidadFederativaID (Entidad) y CATMUNICIPIOID (Municipio) de la plantilla Carpeta Investigaci√≥n, no coinciden con la relaci√≥n de los campos CATENTIDADFEDERATIVAID y CATMUNICIPIODEMARCACIONTERRITORIALID del cat√°logo SENAP_MUNICIPIODEMARCACIONTERRITOR";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = CI.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = CI.CATFISCALIAID122024(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaCI.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "CARPETAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaCI.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio Adicional Favor de verificar variable CATFISCALIAID-IdentificadorFiscalia en su codigo diferente de 1 a 33 ya que la variable es de prioridad 1";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = CI.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        ArrayResult = CI.NOMBREFISREGIOESPECIALIZADA122024(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaCI.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "CARPETAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaCI.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio Adicional Favor de verificar variable NOMBREFISREGIOESPECIALIZADA-Nombre de la fiscal√≠a regional o especializada ya que la variable es de prioridad 1 y no puede ser null ";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = CI.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        ArrayResult = CI.NOMBREAGEMINISTERIOPUBLICO122024(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaCI.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "CARPETAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaCI.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio Adicional Favor de verificar variable NOMBREAGEMINISTERIOPUBLICO-Nombre y n√∫mero de agencia del ministerio p√∫blico ya que la variable es de prioridad 1 y no puede ser null ";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = CI.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        ArrayResult = CI.CATMEDCONOCHECHOSID122024(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaCI.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "CARPETAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaCI.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio Adicional Favor de verificar variable CATMEDCONOCHECHOSID-Medio de conocimiento de los hechos en su codigo diferente de 1 a 8 ya que la variable es de prioridad 1 ";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = CI.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        ArrayResult = CI.FECHACARINVE122024(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaCI.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "CARPETAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaCI.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio Adicional Favor de verificar variable FECHACARINVE-Fecha de apertura de la carpeta de investigaci√≥n  ya que la variable es de prioridad 1 y no puede venir null ";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = CI.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        ArrayResult = CI.HORAPECARINVE122024(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaCI.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "CARPETAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaCI.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio Adicional Favor de verificar variable HORAPECARINVE-Hora en la que el ministerio p√∫blico abri√≥ carpeta de investigaci√≥n  ya que la variable es de prioridad 1 y no puede venir null";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = CI.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        ArrayResult = CI.CATHECHOCIID122024(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaCI.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "CARPETAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaCI.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio Adicional Favor de verificar variable CATHECHOCIID-Tipo de hecho por el que se abri√≥ la carpeta de investigaci√≥n en su codigo diferente de 1 a 3 ya que la variable es de prioridad 1";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = CI.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        ArrayResult = CI.CATETAPAPROCESALID122024(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaCI.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "CARPETAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaCI.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio Adicional Favor de verificar variable CATETAPAPROCESALID-Etapa procesal en que se encuentra la carpeta de investigaci√≥n en su codigo diferente de 1 a 5 ya que la variable es de prioridad 1";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = CI.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = CI.FECHACARINVEMayor(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaCI.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "CARPETAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaCI.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio GENERAL. La Fecha de presentaci√≥n de la denuncia o querella (columna U) no puede ser mayor a la Fecha Actual.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = CI.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = CI.NOTICIACRIMINALID(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaCI.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "CARPETAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaCI.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio 2.1. El campo NoticiaCriminalID (columna B) no existe en la plantilla Noticia Criminal";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = CI.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = CI.CATTIPOATENCIONID(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaCI.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "CARPETAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaCI.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio 2.10. Tipo de atenci√≥n CATTIPOATENCIONID (TR_SENAP_ATENCIONES), Fecha de inicio de la atenci√≥n FECHAINICIOATENCION (TR_SENAP_ATENCIONES), Fecha de conclusi√≥n de la atenci√≥n FECHCONCLUATE (TR_SENAP_ATENCIONES) y Sentido de la conclusi√≥n de la atenci√≥n CATSENTCONCLUATEID (TR_SENAP_ATENCIONES) no podr√°n estar vac√≠as si el campo ‚ÄúEn caso de no abrir carpeta de investigaci√≥n, ¬øSe brind√≥ alg√∫n tipo de atenci√≥n?‚Äù BRINDOALGUNTIPOATENCION es requisitado con la opci√≥n";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = CI.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = CI.FECHAINICIOATENCION(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaCI.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "CARPETAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaCI.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio 2.10. Tipo de atenci√≥n CATTIPOATENCIONID (TR_SENAP_ATENCIONES), Fecha de inicio de la atenci√≥n FECHAINICIOATENCION (TR_SENAP_ATENCIONES), Fecha de conclusi√≥n de la atenci√≥n FECHCONCLUATE (TR_SENAP_ATENCIONES) y Sentido de la conclusi√≥n de la atenci√≥n CATSENTCONCLUATEID (TR_SENAP_ATENCIONES) no podr√°n traer valor si el campo ‚ÄúEn caso de no abrir carpeta de investigaci√≥n, ¬øSe brind√≥ alg√∫n tipo de atenci√≥n?‚Äù BRINDOALGUNTIPOATENCION es la opci√≥n ‚ÄúNo‚Äù";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = CI.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = CI.CARPETAINVE(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaCI.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "CARPETAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaCI.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio 2.11. El valor que contenga el campo N√∫mero de la carpeta de investigaci√≥n (columna V), deber√° ser √∫nico e irrepetible en una misma Fiscal√≠a, tanto en la plantilla Carpeta de investigaci√≥n o bien en la tabla correspondiente de la BD de producci√≥n.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = CI.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = CI.A√ëOCARPETAINVE(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaCI.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "CARPETAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaCI.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio 2.9. El campo A√±o de carpeta de investigaci√≥n (columna W) no debe ser mayor al A√±o Actual.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = CI.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = CI.FECAPECARINVE(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaCI.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "CARPETAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaCI.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio 2.2. La Fecha de apertura de la carpeta de investigaci√≥n (columna Y) debe ser mayor o igual a la Fecha de presentaci√≥n de la denuncia o querella (columna U)  de la plantilla Noticia Criminal, en caso de existir.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = CI.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = CI.FECHAPECARINVEIgual(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaCI.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "CARPETAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaCI.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio 2.3. En caso de que la Fecha de apertura de la carpeta de investigaci√≥n FECHAPECARINVE sea igual a la Fecha de la presentaci√≥n de la denuncia o querella FECHAPRESDENUNQUERELLA (TR_SENAP_NOTICIACRIMINAL), en caso de existir, la Hora de la apertura de la carpeta  HORAPECARINVE deber√° ser mayor a la hora de la denuncia o querella HORAREPREDENUNQUERELLA de la plantilla de noticia criminal (TR_SENAP_NOTICIACRIMINAL).";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = CI.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        /*
        ArrayResult = CI.TIPOHECHOABREIOCI(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaCI.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "CARPETAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaCI.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaAdicional 2.20. Si el campo ¬øTipo de hecho por el que se abri√≥ la carpeta de investigaci√≥n? se seleccion√≥ una opci√≥n diferente a "Hecho no constitutivo de delito‚Äù (2), no deber√° haber registros en la plantilla Delitos.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = CI.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }*/

 /*ArrayResult = CI.ACTOS(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaCI.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "CARPETAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaCI.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Debe existir registro en la plantilla Actos de Investigaci√≥n, debido que en el campo ¬øSe realizaron actos de investigaci√≥n? (columna AA) se respondi√≥ con un ‚ÄúS√≠‚Äù (1).";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = CI.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }*/

 /*ArrayResult = CI.NSACTOS(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaCI.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "CARPETAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaCI.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "No debe existir registro en la plantilla Actos de Investigaci√≥n, debido que en el campo ¬øSe realizaron actos de investigaci√≥n? (columna AA) se respondi√≥ con una opci√≥n diferente a ‚ÄúS√≠‚Äù (1).";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = CI.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }*/
        ArrayResult = CI.DELITOS(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaCI.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "CARPETAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaCI.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio 2.5. La cantidad de delitos registrados en la plantilla Delitos no coincide con la cantidad que se ingres√≥ en la plantilla Carpeta de Investigaci√≥n.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = CI.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = CI.VICTIMAS(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaCI.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "CARPETAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaCI.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio 2.6. La cantidad de v√≠ctimas registrados en la tabla V√≠ctimas no coincide con la cantidad que se ingres√≥ en la plantilla Carpeta de investigaci√≥n.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = CI.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = CI.IMPUTADOS(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaCI.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "CARPETAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaCI.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio 2.11. La cantidad de imputados registrados en la tabla Imputado no coincide con la cantidad que se ingres√≥ en la plantilla Carpeta de investigaci√≥n.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = CI.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        /*ArrayResult = CI.NCDELITOS(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaCI.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "CARPETAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaCI.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo Cantidad de personas imputadas (columna AD) de la tabla Imputado no coincide con la cantidad de registros de la plantilla Carpeta de investigaci√≥n.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = CI.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }*/

 /*ArrayResult = CI.DCDELITOS(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaCI.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "CARPETAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaCI.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Si el campo ¬øTipo de hecho por el que se abri√≥ la carpeta de investigaci√≥n? se seleccion√≥ una opci√≥n diferente a \"Hecho no constitutivo de delito‚Äù (2), no deber√° haber registros en la plantilla Delitos.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = CI.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }*/

 /*ArrayResult = CI.ACTOSINVESTIGACION(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaCI.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "CARPETAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaCI.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Debe existir registros en la plantilla Actos de Investigaci√≥n ya que el campo ¬øSe realizaron aseguramientos? (columna AF) se requisito la opci√≥n ‚ÄúS√≠‚Äù (1).";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = CI.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }*/

 /*ArrayResult = CI.NCACTOSINVESTIGACION(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaCI.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "CARPETAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaCI.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "No debe existir registros en la plantilla Actos de Investigaci√≥n ya que el campo ¬øSe realizaron aseguramientos? (columna AF) es diferente de la opci√≥n ‚ÄúS√≠‚Äù (1).";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = CI.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }*/
    }

    //DELITOS
    public void Despliega_Delitos(XSSFWorkbook libro, XSSFSheet hojaDel, XSSFCellStyle estiloCelda0, XSSFCellStyle estiloCelda1, XSSFCellStyle estiloCeldabordes0, JProgressBar progressBar, String Entidad, String Periodo) throws SQLException {

        String Texto = "";
        int conEnc = 1, conDat = 2, coni = 1;
        Border border = BorderFactory.createTitledBorder("Cargando...Delitos");
        progressBar.setBorder(border);
        progressBar.setValue(28);

        XSSFRow row00 = hojaDel.createRow(0); // Fila
        XSSFCell celda00 = row00.createCell(0); // Columna
        celda00.setCellStyle(estiloCelda0);
        celda00.setCellType(CellType.STRING);
        String titulo00 = "Delitos ";
        XSSFRichTextString texto00 = new XSSFRichTextString(titulo00);
        hojaDel.addMergedRegion(new CellRangeAddress(0, 0, 0, 2));
        celda00.setCellValue(texto00);
        row00.setHeight((short) 600);
        VDelitos DEL = new VDelitos();

        ArrayResult = DEL.RelacionMunicipio(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaDel.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "UBICACIONID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaDel.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio Adicional: La relaci√≥n entre los campos  CatEntidadFederativaID (Entidad) y CATMUNICIPIOID (Municipio) de la plantilla Delitos, no coinciden con la relaci√≥n de los campos CATENTIDADFEDERATIVAID y CATMUNICIPIODEMARCACIONTERRITORIALID del cat√°logo SENAP_MUNICIPIODEMARCACIONTERRITOR";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = DEL.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = DEL.normativo_LGMDFP(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaDel.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "DELITOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 2500) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaDel.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Regla adicional. Se√±alamiento normativo con siglas LGMDFP, lgpysdms, LGAMVLV y lgpsedmtp deben ser de tipo fuero Federal (2).";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = DEL.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        ArrayResult = DEL.normativo_LGMDFP_dif(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaDel.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "DELITOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaDel.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Senalamiento normativo con siglas diferentes a LGMDFP, lgpysdms, LGAMVLV y lgpsedmtp deben ser de tipo fuero Com√∫n (1).";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = DEL.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        ArrayResult = DEL.DELITONOENCO122024(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaDel.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "DELITOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaDel.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio Adicional variable SENALAMIENTONORMATIVO- se√±alamiento Normativo(art√≠culo, fracci√≥n, p√°rrafo, inciso, etc.) no coincide con el mapeo del catalogo de Delitos Norma tecnica INEGI";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = DEL.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = DEL.DELITONE122024(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaDel.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "DELITOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaDel.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Regla Adicional Favor de especificar mas a detalle variable SENALAMIENTONORMATIVO- Se√±alamiento normativo (art√≠culo, fracci√≥n, p√°rrafo, inciso, etc.) o en su caso articulo,fraccion,parrafo,inciso no se encuentra dentro del mapeo de Delitos norma tecnica INEGI.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = DEL.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = DEL.DELITOLEYPENAL122024(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaDel.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "DELITOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaDel.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio Adicional Favor de asignar un Delito valido en variable DELITOLEYPENAL -Delito de acuerdo con la ley penal ya que el valor es igual a 0.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = DEL.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        ArrayResult = DEL.FECHAOCURRENCIA122024(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaDel.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "DELITOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaDel.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio Adicional Favor de verificar variable FECHAOCURRENCIA-Fecha de ocurrencia (exacta/aproximada/continua)  ya que la variable es de prioridad 1 y no puede venir null";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = DEL.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        ArrayResult = DEL.CATGRADOCONSUMACIONID122024(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaDel.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "DELITOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaDel.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio Adicional Favor de verificar variable CATGRADOCONSUMACIONID-Grado de consumaci√≥n  ya que la variable es de prioridad 1 y no puede venir 0 Sin referencia";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = DEL.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        ArrayResult = DEL.CATCALIFICACIONDELITOID122024(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaDel.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "DELITOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaDel.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio Adicional Favor de verificar variable CATCALIFICACIONDELITOID-Calificaci√≥n del delito  ya que la variable es de prioridad 1 y no puede venir 0 Sin referencia O 4 Sin Dato";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = DEL.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        ArrayResult = DEL.CATFORMAACCIONID122024(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaDel.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "DELITOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaDel.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio Adicional Favor de verificar variable CATFORMAACCIONID-Forma de acci√≥n  ya que la variable es de prioridad 1 y no puede venir 0 Sin referencia";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = DEL.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        ArrayResult = DEL.CATINSTRUMENTOSCOMISIONID122024(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaDel.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "DELITOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaDel.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Regla Adicional Favor de verificar variable CATINSTRUMENTOSCOMISIONID-Instrumentos para la comisi√≥n la variable es de prioridad 1 y no puede venir 0 Sin referencia";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = DEL.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        ArrayResult = DEL.DLP122024(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaDel.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "DELITOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaDel.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Regla Adicional Favor de verificar el Variable Delito de acuerdo con la ley penal DELITOLEYPENAL debido a que no puede venir nulo.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = DEL.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        ArrayResult = DEL.SENALAMIENTONORMATIVO122024(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaDel.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "DELITOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaDel.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Regla Adicional Favor de verificar el campo Se√±alamiento normativo (art√≠culo, fracci√≥n, p√°rrafo, inciso, etc.) SENALAMIENTONORMATIVO debido a que no puede venir nulo.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = DEL.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        ArrayResult = DEL.CATFUEROID122024(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaDel.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "DELITOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaDel.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Regla Adicional Favor de verificar el campo Fuero CATFUEROID debido a que solo se puede seleccionar la opci√≥n 'Com√∫n' (1) y 'Federal' (2).";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = DEL.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        ArrayResult = DEL.CLASIFICACIONDELITO122024(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaDel.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "DELITOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaDel.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Regla Adicional Favor de verificar el campo Calificaci√≥n del delito	CATCALIFICACIONDELITOID debido a que no se puede seleccionar una opcion diferente a 'Grave' (1), 'No grave' (2), 'No identificado' (3).";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = DEL.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        ArrayResult = DEL.CATFORMACOMISIONID122024(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaDel.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "DELITOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaDel.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Regla Adicional Favor de verificar el campo Forma de comisi√≥n	CATFORMACOMISIONID debido a que no debe seleccionar una opcion diferente a 'Doloso' (1), 'Culposo' (2) o 'No identificado' (9).";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = DEL.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        ArrayResult = DEL.FechaOcurrMayor(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaDel.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "DELITOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaDel.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio GENERAL. La FECHAOCURRENCIA(Fecha de ocurrencia (exacta/aproximada/continua)) no debe ser mayor a la Fecha actual.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = DEL.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        /*ArrayResult = DEL.FechaReclasificacionMayor(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaDel.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "DELITOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaDel.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "La FECHARECLASIFICACION(Fecha de la reclasificaci√≥n)  no debe ser mayor a la Fecha actual.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = DEL.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }*/
        ArrayResult = DEL.FechaOcurr_Presenta(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaDel.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "DELITOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaDel.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio 4.1. El valor del campo Fecha de ocurrencia (exacta/aproximada/continua) (columna G) deber√° ser menor o igual al campo Fecha de presentaci√≥n de la denuncia o querella (columna U) de la plantilla Noticia criminal.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = DEL.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = DEL.FechaOcurr_Apertura(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaDel.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "DELITOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaDel.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio 4.1. Si no existe noticia criminal, entonces el campo Fecha de ocurrencia (exacta/aproximada/continua) (columna G) deber√° ser menor o igual al campo Fecha de apertura de la carpeta de investigaci√≥n (campo X) de la plantilla Carpeta de investigaci√≥n.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = DEL.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        /*ArrayResult = DEL.HoraOcurr_Presenta(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaDel.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "DELITOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaDel.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El valor del campo Hora de ocurrencia (exacta/aproximada/continua) (columna H) deber√° ser menor o igual al campo Hora de presentaci√≥n de la denuncia o querella (columna V) de la plantilla Noticia Criminal.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = DEL.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }*/

 /*ArrayResult = DEL.HoraOcurr_Apertura(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaDel.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "DELITOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaDel.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "En el caso de no existir noticia criminal para la carpeta de investigaci√≥n en cuesti√≥n, el campo Hora de ocurrencia del delito (columna H) deber√° ser menor o igual al campo Hora de apertura de la carpeta de investigaci√≥n (columna Y) de la plantilla Carpeta de investigaci√≥n.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = DEL.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = DEL.HuboReclasificacion_si(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaDel.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "DELITOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaDel.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "En caso de que el campo ¬øHubo reclasificaci√≥n del delito? (columna AC) sea requisitado con la opci√≥n ‚ÄúSi‚Äù, el campo Momento en el que se llev√≥ a cabo la reclasificaci√≥n (columna AD), Fecha de la reclasificaci√≥n (columna AE) y DelitoID_Reclasificado (columna AF) no podr√°n estar vac√≠as.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = DEL.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = DEL.HuboReclasificacion_Fecha(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaDel.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "DELITOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaDel.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo Fecha de la reclasificaci√≥n (columna AE) deber√° ser mayor al campo Fecha de ocurrencia (exacta/aproximada/continua) del delito que fue reclasificado (columna G).";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = DEL.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = DEL.HuboReclasificacion_DelitoReclas(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaDel.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "DELITOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojaDel.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Si el campo ¬øHubo reclasificaci√≥n del delito? (columna AC) es requisitado con la opci√≥n ‚ÄúSi‚Äù, entonces el campo DelitoID_Reclasificado (columna AF) deber√° existir en alg√∫n regl√≥n de la misma plantilla.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = DEL.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }*/
    }

    // VICTIMAS
    public void Despliega_Victimas(XSSFWorkbook libro, XSSFSheet hojavic, XSSFCellStyle estiloCelda0, XSSFCellStyle estiloCelda1, XSSFCellStyle estiloCeldabordes0, JProgressBar progressBar, String Entidad, String Periodo) throws SQLException {

        String Texto = "";
        int conEnc = 1, conDat = 2, coni = 1;
        Border border = BorderFactory.createTitledBorder("Cargando...Victimas");
        progressBar.setBorder(border);
        progressBar.setValue(34);

        XSSFRow row00 = hojavic.createRow(0); // Fila
        XSSFCell celda00 = row00.createCell(0); // Columna
        celda00.setCellStyle(estiloCelda0);
        celda00.setCellType(CellType.STRING);
        String titulo00 = "Victimas";
        XSSFRichTextString texto00 = new XSSFRichTextString(titulo00);
        hojavic.addMergedRegion(new CellRangeAddress(0, 0, 0, 2));
        celda00.setCellValue(texto00);
        row00.setHeight((short) 600);
        VVictimas VIC = new VVictimas();

        ArrayResult = VIC.EDADMENOR1(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojavic.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "VICTIMAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {

                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;

                }
            } else {
                Texto = "General";

            }

            XSSFRow filaEE2 = hojavic.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio Adicional EDADMOMENTOSUCEDIERONHECHOS-(Edad al momento que sucedieron los hechos) No debe ser Menor a -1";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = VIC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;

        }

        ArrayResult = VIC.EDADHECHOS(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojavic.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "VICTIMAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {

                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;

                }
            } else {
                Texto = "General";

            }

            XSSFRow filaEE2 = hojavic.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio Adicional favor de verificar EDADMOMENTOSUCEDIERONHECHOS-Edad al momento que sucedieron los hechos ya que es mayor a 106 a√±os";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = VIC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;

        }

        ArrayResult = VIC.RelacionMunicipio(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojavic.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "VICTIMAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 2500) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojavic.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio Adicional: La relaci√≥n entre los campos  CatEntidadFederativaID (Entidad) y CATMUNICIPIOID (Municipio) de la plantilla Victimas, no coinciden con la relaci√≥n de los campos CATENTIDADFEDERATIVAID y CATMUNICIPIODEMARCACIONTERRITORIALID del cat√°logo SENAP_MUNICIPIODEMARCACIONTERRITOR";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = VIC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = VIC.RelacionMunicipioNacimiento(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojavic.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "VICTIMAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojavic.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio Adicional: La relaci√≥n entre los campos  CatEntidadFederativa(Entidad DE NACIMIENTO) y CATMUNICIPIOID (Municipio DE NACIMIENTO) de la plantilla Victimas, no coinciden con la relaci√≥n de los campos CATENTIDADFEDERATIVAID y CATMUNICIPIODEMARCACIONTERRITORIALID del cat√°logo SENAP_MUNICIPIODEMARCACIONTERRITOR";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = VIC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }


        /*ArrayResult = VIC.CATTIPOVICTIMAID(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojavic.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "VICTIMAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojavic.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Si en el campo Tipo de v√≠ctima (columna F), es requisitado con el valor ‚ÄúPersona moral del sector p√∫blico, Persona moral del sector privado o Persona moral no identificado‚Äù, se deber√° permitir √∫nicamente el registro de los campos ¬øCont√≥ con asesor jur√≠dico? (columna AY) y Tipo de asesor jur√≠dico (columna AZ) no podran venir vacios.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = VIC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = VIC.CATTIPOVICTIMAID1(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojavic.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "VICTIMAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojavic.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Si el campo Tipo de v√≠ctima corresponde a Persona f√≠sica (1), deber√° estar inscrita informaci√≥n en todos los campos de esta plantilla.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = VIC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = VIC.HABLALENGUAEXTRANJERA(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojavic.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "VICTIMAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojavic.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Si el campo ¬øHabla lengua extranjera? (columna AG) es requisitado con la opci√≥n ‚ÄúSi‚Äù, el campo Tipo de lengua extranjera (columna AH) no debera de venir vacia.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = VIC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = VIC.CATTIPLEGEXT(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojavic.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "VICTIMAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojavic.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Si el campo ¬øHabla lengua extranjera? (columna AG) es diferente de la opci√≥n ‚ÄúSi‚Äù, el campo Tipo de lengua extranjera (columna AH) no debera de venir con valor.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = VIC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = VIC.CATTIPOLENGUAINDIGENAID(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojavic.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "VICTIMAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojavic.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Si el campo ¬øHabla lengua ind√≠gena? (columna AI) es requisitado con la opci√≥n ‚ÄúSi‚Äù, el campo Tipo de lengua ind√≠gena (columna AJ) no debera venir vacio.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = VIC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = VIC.CATTIPOLENGUAINDIGENAID1(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojavic.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "VICTIMAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojavic.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Si el campo ¬øHabla lengua ind√≠gena? (columna AI) es diferente de la opci√≥n ‚ÄúSi‚Äù, el campo Tipo de lengua ind√≠gena (columna AJ) no debera venir con valor.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = VIC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = VIC.PRESENTADISCAPACIDAD(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojavic.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "VICTIMAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojavic.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Si el campo ¬øPresenta alg√∫n tipo de discapacidad? (columna AL) es requisitado con la opci√≥n ‚ÄúSi‚Äù, los campos Condici√≥n de discapacidad (columna AM) y ¬øUtiliz√≥ int√©rprete y/o medio tecnol√≥gico por discapacidad? (columna AN) no pueden venir vacios.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = VIC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = VIC.CATTIPODISCAPACIDADID(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojavic.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "VICTIMAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojavic.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Si el campo ¬øPresenta alg√∫n tipo de discapacidad? (columna AL) es diferente de la opci√≥n ‚ÄúSi‚Äù, los campos Condici√≥n de discapacidad (columna AM) y ¬øUtiliz√≥ int√©rprete y/o medio tecnol√≥gico por discapacidad? (columna AN) no pueden venir con valor.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = VIC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = VIC.PERPOPIND(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojavic.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "VICTIMAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojavic.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Si el campo ¬øPertenece a alguna poblaci√≥n ind√≠gena? (columna AO) es requisitado con la opci√≥n ‚ÄúSi‚Äù, el campo Poblaci√≥n ind√≠gena a la que pertenece (columna AP) no puede venir vacio.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = VIC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = VIC.CATTIPPOPIND(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojavic.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "VICTIMAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojavic.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Si el campo ¬øPertenece a alguna poblaci√≥n ind√≠gena? (columna AO) es diferente de la opci√≥n ‚ÄúSi‚Äù, el campo Poblaci√≥n ind√≠gena a la que pertenece (columna AP) no puede venir con valor.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = VIC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = VIC.PERPOBLGBTTTI(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojavic.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "VICTIMAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojavic.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Si el campo ¬øPertenece a alguna poblaci√≥n LGBTTTI? (columna AQ) es requisitado con la opci√≥n ‚ÄúSi‚Äù, el campo Poblaci√≥n LGBTTTI a la que pertenece (columna AR) no podra venir vacio.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = VIC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = VIC.CATTIPOLGBTTTIID(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojavic.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "VICTIMAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojavic.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Si el campo ¬øPertenece a alguna poblaci√≥n LGBTTTI? (columna AQ) es diferente de  la opci√≥n ‚ÄúSi‚Äù, el campo Poblaci√≥n LGBTTTI a la que pertenece (columna AR) no puede traer valor.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = VIC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = VIC.CONTOASESORJURIDICO(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojavic.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "VICTIMAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojavic.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Si el campo ¬øCont√≥ con asesor jur√≠dico?  (columna AY) es requisitado con la opci√≥n ‚ÄúSi‚Äù, el campo Tipo de asesor jur√≠dico (columna AZ) no podra venir vacio.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = VIC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = VIC.CATTIPOASESORJURIDICOID(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojavic.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "VICTIMAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojavic.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Si el campo ¬øCont√≥ con asesor jur√≠dico?  (columna AY) es diferente de la opci√≥n ‚ÄúSi‚Äù, el campo Tipo de asesor jur√≠dico (columna AZ) no podra venir con valor.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = VIC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }*/
        ArrayResult = VIC.TIPOVICTIMAnotnull(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojavic.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "VICTIMAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojavic.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Regla Adicional -- Favor de verificar el campo Tipo de v√≠ctima CATTIPOVICTIMAID debido a que no se puede seleccionar una opci√≥n diferente a 'Persona f√≠sica'(1), 'Persona moral del sector p√∫blico' (2), 'Persona moral del sector privado' (3), 'Persona moral no identificado' (4), 'Otro' (5) y 'No identificado' (6).";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = VIC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = VIC.TIPOVICTIMA122024(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojavic.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "VICTIMAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojavic.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Regla Adicional -- Favor de verificar el campo Fecha de nacimiento FECHANACIMIENTO debido que a que no puede venir nulo. ";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = VIC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = VIC.Edad122024(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojavic.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "VICTIMAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojavic.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Regla Adicional -- Favor de verificar el campo Edad al momento que sucedieron los hechos	EDADMOMSUCHEC debido que a que no puede venir nulo.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = VIC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = VIC.Sexo122024(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojavic.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "VICTIMAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojavic.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Regla Adicional -- Favor de verificar el campo Sexo CATSEXOID debido a que no se puede seleccionar una opci√≥n diferente a 'Hombre' (1), 'Mujer' (2) y 'No identificado' (3).";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = VIC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = VIC.CATSITUACIONCONYUGALID122024(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojavic.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "VICTIMAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojavic.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Regla Adicional -- Favor de verificar el campo Situaci√≥n conyugal	CATSITUACIONCONYUGALID debido a que no se puede seleccionar una opci√≥n diferente a 'Casado(a)' (1), 'Uni√≥n Libre' (2), 'Divorciado(a)' (3), 'Separado(a)' (4), 'Soltero(a)' (5), 'Concubinato' (6), 'Sociedad de convivencia' (7), 'Viudo(a)' (8), 'Otro' (9) y 'No identificado' (10).";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = VIC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = VIC.Nacionalida122024(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojavic.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "VICTIMAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojavic.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Regla Adicional -- Favor de verificar el campo Nacionalidad	CATNACIONALIDADID debido a que no se puede venir nulo.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = VIC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        ArrayResult = VIC.CATNIVELESCOLARIDADID122024(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojavic.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "VICTIMAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojavic.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Regla Adicional -- Favor de verificar el campo Nivel de escolaridad	CATNIVELESCOLARIDADID debido a que no se puede seleccionar una opci√≥n diferente a 'Ninguno' (1), 'Preescolar o primaria' (2), 'Secundaria' (3), 'Preparatoria' (4), 'Carrera t√©cnica o comercial' (5), 'Licenciatura' (6), 'Maestr√≠a' (7), 'Doctorado' (8) y 'No identificado' (9).";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = VIC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        ArrayResult = VIC.FECHANACIMIENTOMayor(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojavic.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "VICTIMAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojavic.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio GENERAL. La FECHANACIMIENTO (Fecha de nacimiento) no debe ser mayor a la fecha Actual.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = VIC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = VIC.FECHANACIMIENTEDADOMayor(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojavic.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "VICTIMAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojavic.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio 6.3. Favor de verificar la FECHANACIMIENTO (Fecha de nacimiento) ya que es mayor a 109 a√±os de Edad.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = VIC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = VIC.EDADMOMSUCHEC(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojavic.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "VICTIMAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;
                }
            } else {
                Texto = "General";
            }

            XSSFRow filaEE2 = hojavic.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio 6.3. El campo Edad al momento que sucedieron los hechos (columna I), deber√° ser menor o igual a la edad calculada a partir del campo Fecha de nacimiento (columna H), con respecto a la fecha actual.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = VIC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

    }

    // IMPUTADO
    public void Despliega_Imputado(XSSFWorkbook libro, XSSFSheet hojaIMP, XSSFCellStyle estiloCelda0, XSSFCellStyle estiloCelda1, XSSFCellStyle estiloCeldabordes0, JProgressBar progressBar, String Entidad, String Periodo) throws SQLException {

        String Texto = "";
        int conEnc = 1, conDat = 2, coni = 1;
        Border border = BorderFactory.createTitledBorder("Cargando...Imputado");
        progressBar.setBorder(border);
        progressBar.setValue(40);

        XSSFRow row00 = hojaIMP.createRow(0); // Fila
        XSSFCell celda00 = row00.createCell(0); // Columna
        celda00.setCellStyle(estiloCelda0);
        celda00.setCellType(CellType.STRING);
        String titulo00 = "Imputado";
        XSSFRichTextString texto00 = new XSSFRichTextString(titulo00);
        hojaIMP.addMergedRegion(new CellRangeAddress(0, 0, 0, 2));
        celda00.setCellValue(texto00);
        row00.setHeight((short) 600);
        VImputado IMP = new VImputado();

        ArrayResult = IMP.EDADMENOR1(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIMP.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "IMPUTADOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {

                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;

                }
            } else {
                Texto = "General";

            }

            XSSFRow filaEE2 = hojaIMP.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio Adicional EDADMOMENTOSUCEDIERONHECHOS-(Edad al momento que sucedieron los hechos) No debe ser Menor a -1";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IMP.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;

        }

        ArrayResult = IMP.EDADNOTNULL(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIMP.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "IMPUTADOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {

                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;

                }
            } else {
                Texto = "General";

            }

            XSSFRow filaEE2 = hojaIMP.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaAdicional 7.3. Favor de verificar el campo  Edad al momento que sucedieron los hechos (columna K) EDADMOMENTOSUCEDIERONHECHOS debido que no pueden registrar con valor cero o nulo.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IMP.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;

        }

        ArrayResult = IMP.EDADHECHOS(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIMP.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "IMPUTADOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {

                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;

                }
            } else {
                Texto = "General";

            }

            XSSFRow filaEE2 = hojaIMP.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio Adicional favor de verificar EDADMOMENTOSUCEDIERONHECHOS-Edad al momento que sucedieron los hechos ya que es mayor a 106 a√±os";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IMP.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;

        }

        ArrayResult = IMP.RelacionMunicipioOcurrencia(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIMP.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "UBICACIONID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {

                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;

                }
            } else {
                Texto = "General";

            }

            XSSFRow filaEE2 = hojaIMP.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio Adicional: La relaci√≥n entre los campos  CatEntidadFederativa(Entidad OCURRENCIA DEL DELITO) y CATMUNICIPIOID (Municipio OCURRENCIA DEL DELITO) de la plantilla Imputado, no coinciden con la relaci√≥n de los campos CATENTIDADFEDERATIVAID y CATMUNICIPIODEMARCACIONTERRITORIALID del cat√°logo SENAP_MUNICIPIODEMARCACIONTERRITOR";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IMP.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;

        }

        ArrayResult = IMP.RelacionMunicipioDomicilio(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIMP.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "UBICACIONID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {

                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;

                }
            } else {
                Texto = "General";

            }

            XSSFRow filaEE2 = hojaIMP.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio Adicional: La relaci√≥n entre los campos  CatEntidadFederativa(Entidad DOMICILIO) y CATMUNICIPIOID (Municipio DOMICILIO) de la plantilla Imputado, no coinciden con la relaci√≥n de los campos CATENTIDADFEDERATIVAID y CATMUNICIPIODEMARCACIONTERRITORIALID del cat√°logo SENAP_MUNICIPIODEMARCACIONTERRITOR";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IMP.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;

        }

        ArrayResult = IMP.RelacionMunicipioNacimiento(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIMP.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "IMPUTADOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {

                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;

                }
            } else {
                Texto = "General";

            }

            XSSFRow filaEE2 = hojaIMP.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio Adicional: La relaci√≥n entre los campos  CatEntidadFederativa(Entidad DE NACIMIENTO) y CATMUNICIPIOID (Municipio DE NACIMIENTO) de la plantilla Imputado, no coinciden con la relaci√≥n de los campos CATENTIDADFEDERATIVAID y CATMUNICIPIODEMARCACIONTERRITORIALID del cat√°logo SENAP_MUNICIPIODEMARCACIONTERRITOR";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IMP.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;

        }

        ////////////////////////////////////////////////////////
        /*ArrayResult = IMP.TipoPerImputada_PerFisica(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIMP.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "IMPUTADOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);
            
            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {

                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;

                }
            } else {
                Texto = "General";

            }

            XSSFRow filaEE2 = hojaIMP.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Si en el campo Tipo de persona imputada (columna G), es seleccionada la opci√≥n ‚ÄúPersona f√≠sica‚Äù, deber√° estar inscrita informaci√≥n en todos los campos de esta plantilla, con excepci√≥n del campo, Tipo de persona moral (columna H)";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IMP.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;

        }

        ArrayResult = IMP.NoTipoPerImputada_PerFisica(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIMP.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "IMPUTADOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);
            
            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {

                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;

                }
            } else {
                Texto = "General";

            }

            XSSFRow filaEE2 = hojaIMP.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Si en el campo Tipo de persona imputada (columna G), es seleccionadaa la opci√≥n ‚ÄúPersona f√≠sica‚Äù, deber√° estar inscrita informaci√≥n en todos los campos de esta plantilla, Tipo de persona moral (columna H) debe de estar vac√≠o";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IMP.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;

        }

        ArrayResult = IMP.TipoPerImputada_PerMoral(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIMP.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "IMPUTADOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);
            
            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {

                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;

                }
            } else {
                Texto = "General";

            }

            XSSFRow filaEE2 = hojaIMP.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Si en el campo Tipo de persona imputada (columna G), es seleccionada la opci√≥n ‚ÄúPersona moral‚Äù, se deber√° permitir el registro s√≥lo de los campos Tipo de persona moral (columna H), ¬øCont√≥ con persona defensora? (columna BE  ) y Tipo de persona defensora (columna BF)  ";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IMP.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;

        }*/
        ArrayResult = IMP.EdadHechos(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIMP.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "IMPUTADOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {

                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;

                }
            } else {
                Texto = "General";

            }

            XSSFRow filaEE2 = hojaIMP.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio 7.3. El campo Edad al momento que sucedieron los hechos (columna K) deber√° ser menor o igual a la edad calculada a partir del campo Fecha de nacimiento (columna J) con respecto a la fecha actual";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IMP.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;

        }

        /*ArrayResult = IMP.HablaLenguaExtranjera(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIMP.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "IMPUTADOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);
            
            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {

                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;

                }
            } else {
                Texto = "General";

            }

            XSSFRow filaEE2 = hojaIMP.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Si en el campo ¬øHabla lengua extranjera? (columna AI) es seleccionada la opci√≥n ‚ÄúS√≠‚Äù, el campo Tipo de lengua extranjera (columna AJ) no debe de estar vac√≠o";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IMP.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;

        }

        ArrayResult = IMP.NoHablaLenguaExtranjera(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIMP.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "IMPUTADOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);
            
            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {

                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;

                }
            } else {
                Texto = "General";

            }

            XSSFRow filaEE2 = hojaIMP.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Si el campo ¬øHabla lengua extranjera? (columna AI) es diferente de la opci√≥n ‚ÄúS√≠‚Äù, el campo Tipo de lengua extranjera (columna AJ) no debe de contener informaci√≥n";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IMP.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;

        }

        ArrayResult = IMP.HablaLenguaIndigena(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIMP.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "IMPUTADOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);
            
            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {

                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;

                }
            } else {
                Texto = "General";

            }

            XSSFRow filaEE2 = hojaIMP.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Si en el campo ¬øHabla lengua ind√≠gena? (columna AK) es selecconada la opci√≥n ‚ÄúS√≠‚Äù, el campo Tipo de lengua ind√≠gena (columna AL) no puede venir vacio";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IMP.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;

        }

        ArrayResult = IMP.NoHablaLenguaIndigena(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIMP.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "IMPUTADOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);
            
            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {

                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;

                }
            } else {
                Texto = "General";

            }

            XSSFRow filaEE2 = hojaIMP.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Si en el campo ¬øHabla lengua ind√≠gena? (columna AK) es selecconada la opci√≥n ‚ÄúS√≠‚Äù, el campo Tipo de lengua ind√≠gena (columna AL) no deber√° venir con valor";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IMP.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;

        }

        ArrayResult = IMP.PresentaDiscapacidad(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIMP.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "IMPUTADOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);
            
            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {

                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;

                }
            } else {
                Texto = "General";

            }

            XSSFRow filaEE2 = hojaIMP.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Si en el campo ¬øPresenta alguna condici√≥n de discapacidad? (columna AN) es selecconada la opci√≥n ‚ÄúS√≠‚Äù,  los campos Condici√≥n de discapacidad (columna AO) y ¬øUtiliz√≥ int√©rprete y/o medio tecnol√≥gico por discapacidad? (columna AP) no pueden estar vac√≠os.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IMP.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;

        }

        ArrayResult = IMP.NoPresentaDiscapacidad(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIMP.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "IMPUTADOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);
            
            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {

                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;

                }
            } else {
                Texto = "General";

            }

            XSSFRow filaEE2 = hojaIMP.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Si el campo ¬øPresenta alguna condici√≥n de discapacidad? (columna AN) es diferente a la opci√≥n ‚ÄúS√ç‚Äù,  los campos Condici√≥n de discapacidad (columna AO) y ¬øUtiliz√≥ int√©rprete y/o medio tecnol√≥gico por discapacidad? (columna AP) no deber√°n contener informaci√≥n";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IMP.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;

        }

        ArrayResult = IMP.PerteneceIndigena(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIMP.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "IMPUTADOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);
            
            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {

                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;

                }
            } else {
                Texto = "General";

            }

            XSSFRow filaEE2 = hojaIMP.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Si en el campo ¬øPertenece a alguna poblaci√≥n ind√≠gena? (columna AQ) es seleccionada la opci√≥n ‚ÄúS√≠‚Äù, el campo Poblaci√≥n ind√≠gena a la que pertenece (columna AR) no puede estar vac√≠o";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IMP.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;

        }

        ArrayResult = IMP.NoPerteneceIndigena(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIMP.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "IMPUTADOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);
            
            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {

                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;

                }
            } else {
                Texto = "General";

            }

            XSSFRow filaEE2 = hojaIMP.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Si el campo ¬øPertenece a alguna poblaci√≥n ind√≠gena? (columna AQ) es diferente a la opci√≥n ‚ÄúS√ç‚Äù, el campo Poblaci√≥n ind√≠gena a la que pertenece (columna AR) no puede contener informaci√≥n";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IMP.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;

        }

        ArrayResult = IMP.PerteneceLGBTTTI(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIMP.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "IMPUTADOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);
            
            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {

                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;

                }
            } else {
                Texto = "General";

            }

            XSSFRow filaEE2 = hojaIMP.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Si en el campo ¬øPertenece a alguna poblaci√≥n ind√≠gena? (columna AQ) es seleccionada la opci√≥n ‚ÄúS√≠‚Äù, el campo Poblaci√≥n ind√≠gena a la que pertenece (columna AR) no puede estar vac√≠o";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IMP.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;

        }

        ArrayResult = IMP.NoPerteneceLGBTTTI(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIMP.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "IMPUTADOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);
            
            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {

                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;

                }
            } else {
                Texto = "General";

            }

            XSSFRow filaEE2 = hojaIMP.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Si el campo ¬øPertenece a alguna poblaci√≥n ind√≠gena? (columna AQ) es diferente a la opci√≥n ‚ÄúS√ç‚Äù, el campo Poblaci√≥n ind√≠gena a la que pertenece (columna AR) no puede contener informaci√≥n";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IMP.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;

        }

        ArrayResult = IMP.PerteneceGrupoDelictivo(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIMP.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "IMPUTADOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);
            
            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {

                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;

                }
            } else {
                Texto = "General";

            }

            XSSFRow filaEE2 = hojaIMP.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Si en el campo ¬øEl imputado manifest√≥ pertenecer a un probable grupo delictivo? (columna AZ) es seleccionada la opci√≥n ‚ÄúS√≠‚Äù, el campo Nombre del grupo al que pertenece (columna BA) no puede estar vac√≠o";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IMP.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;

        }

        ArrayResult = IMP.NoPerteneceGrupoDelictivo(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIMP.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "IMPUTADOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);
            
            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {

                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;

                }
            } else {
                Texto = "General";

            }

            XSSFRow filaEE2 = hojaIMP.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Si el campo ¬øEl imputado manifest√≥ pertenecer a un probable grupo delictivo? (columna AZ) es diferente de la opci√≥n ‚ÄúSi‚Äù, el campo Nombre del grupo al que pertenece (columna BA) no puede contener informaci√≥n";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IMP.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;

        }

        ArrayResult = IMP.ContoDefensor(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIMP.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "IMPUTADOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);
            
            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {

                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;

                }
            } else {
                Texto = "General";

            }

            XSSFRow filaEE2 = hojaIMP.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Si en el campo ¬øCont√≥ con persona defensora? (columna BE)  es seleccionada la opci√≥n ‚ÄúS√≠‚Äù, el campo Tipo de defensor (columna BF) no puede estar vac√≠o";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IMP.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;

        }

        ArrayResult = IMP.NoContoDefensor(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIMP.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "IMPUTADOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);
            
            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {

                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;

                }
            } else {
                Texto = "General";

            }

            XSSFRow filaEE2 = hojaIMP.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Si el campo ¬øCont√≥ con persona defensora? (columna BE) es diferente de la opci√≥n ‚ÄúS√≠‚Äù, el campo Tipo de defensor (columna BF) no puede contener informaci√≥n";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IMP.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;

        }

        ArrayResult = IMP.FechaDetencion(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIMP.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "IMPUTADOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);
            
            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {

                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;

                }
            } else {
                Texto = "General";

            }

            XSSFRow filaEE2 = hojaIMP.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Para los asuntos con detenido (Fecha). Si el campo Forma de inicio de la carpeta de investigaci√≥n (columna Z) de la plantilla Carpeta de investigaci√≥n tiene el valor ‚ÄúCon detenido‚Äù y la Fecha de la detenci√≥n (columna BH) de la plantilla Imputado-Delito tiene un valor v√°lido, entonces esta deber√° ser menor o igual a la Fecha de apertura de la carpeta de investigaci√≥n (columna X) de la plantilla Carpeta de investigaci√≥n";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IMP.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;

        }

        ArrayResult = IMP.HoraDetencion(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIMP.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "IMPUTADOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);
            
            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {

                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;

                }
            } else {
                Texto = "General";

            }

            XSSFRow filaEE2 = hojaIMP.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Si el campo Forma de inicio de la carpeta de investigaci√≥n (columna Z) de la plantilla Carpeta de investigaci√≥n tiene el valor ‚ÄúCon detenido‚Äù y la Hora de detenci√≥n (columna BI) de la plantilla Imputado-Delito tiene un valor v√°lido, entonces esta deber√° ser menor a la Hora de apertura de la carpeta (columna Y) de la plantilla Carpeta de investigaci√≥n en el entendido de que la Fecha de detenci√≥n (columna BH) sea igual a la Fecha de apertura de la carpeta de investigaci√≥n (columna X) de la plantilla Carpeta de investigaci√≥n";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IMP.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;

        }*/
        ArrayResult = IMP.FechaAudienciaControlDetencion(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIMP.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "IMPUTADOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {

                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;

                }
            } else {
                Texto = "General";

            }

            XSSFRow filaEE2 = hojaIMP.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio GENERAL. La Fecha de audiencia de control de la detenci√≥n (columna BY) deber√° ser mayor o igual a la Fecha de apertura de la carpeta de investigaci√≥n (columna X) de la plantilla Carpeta de investigaci√≥n";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IMP.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;

        }

        /*ArrayResult = IMP.FECHANACIMIENTOMayor(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIMP.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "IMPUTADOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);
            
            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {

                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;

                }
            } else {
                Texto = "General";

            }

            XSSFRow filaEE2 = hojaIMP.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "La FECHANACIMIENTO (Fecha de nacimiento) no debe ser mayor a la fecha Actual ";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IMP.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;

        }*/
        ArrayResult = IMP.FECHANACIMIENTEDADOMayor(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIMP.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "IMPUTADOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {

                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;

                }
            } else {
                Texto = "General";

            }

            XSSFRow filaEE2 = hojaIMP.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaAdicional GENERAL. Favor de verificar la FECHANACIMIENTO (Fecha de nacimiento) ya que es mayor a 109 a√±os de Edad";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IMP.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;

        }
        ArrayResult = IMP.Fechadenacimiento122024(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIMP.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "IMPUTADOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {

                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;

                }
            } else {
                Texto = "General";

            }

            XSSFRow filaEE2 = hojaIMP.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = " Regla Adicional -- Favor de verificar el campo Fecha de nacimiento	FECHANACIMIENTO debido que a que no puede venir nulo.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IMP.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;

        }

        ArrayResult = IMP.Edadnotnull(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIMP.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "IMPUTADOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {

                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;

                }
            } else {
                Texto = "General";

            }

            XSSFRow filaEE2 = hojaIMP.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = " Regla Adicional -- Favor de verificar el campo Edad al momento que sucedieron los hechos	EDADMOMENTOSUCEDIERONHECHOS debido que a que no puede venir nulo.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IMP.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;

        }

        ArrayResult = IMP.Edad122024(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIMP.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "IMPUTADOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {

                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;

                }
            } else {
                Texto = "General";

            }

            XSSFRow filaEE2 = hojaIMP.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = " Regla Adicional -- Favor de verificar el campo Sexo	CATSEXOID debido a que no se puede seleccionar una opci√≥n diferente a 'Hombre' (1), 'Mujer' (2) y 'No identificado' (3).";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IMP.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;

        }

        ArrayResult = IMP.CATSITUACIONCONYUGALID122024(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIMP.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "IMPUTADOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {

                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;

                }
            } else {
                Texto = "General";

            }

            XSSFRow filaEE2 = hojaIMP.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Regla Adicional -- Favor de verificar el campo Situaci√≥n conyugal	CATSITUACIONCONYUGALID debido a que no se puede seleccionar una opci√≥n diferente a 'Casado(a)' (1), 'Uni√≥n Libre' (2), 'Divorciado(a)' (3), 'Separado(a) '(4), 'Soltero(a)' (5), 'Concubinato' (6), 'Sociedad de convivencia' (7), 'Viudo(a)' (8), 'Otro' (9) y 'No identificado' (10).";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IMP.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;

        }

        ArrayResult = IMP.CATNACIONALIDADID122024(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIMP.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "IMPUTADOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {

                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;

                }
            } else {
                Texto = "General";

            }

            XSSFRow filaEE2 = hojaIMP.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Regla Adicional -- Favor de verificar el campo Nacionalidad CATNACIONALIDADID debido a que no se puede venir nulo";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IMP.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;

        }

        ArrayResult = IMP.escolaridad122024(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIMP.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "IMPUTADOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {

                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;

                }
            } else {
                Texto = "General";

            }

            XSSFRow filaEE2 = hojaIMP.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Regla Adicional -- Favor de verificar el campo Nivel de escolaridad	CATNIVELESCOLARIDADID debido a que no se puede seleccionar una opci√≥n diferente a 'Ninguno' (1), 'Preescolar o primaria' (2), 'Secundaria' (3), 'Preparatoria' (4), 'Carrera t√©cnica o comercial' (5), 'Licenciatura' (6), 'Maestr√≠a' (7), 'Doctorado' (8) y 'No identificado' (9).";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IMP.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;

        }

        ArrayResult = IMP.ANTECEDENTESPENALES122024(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIMP.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "IMPUTADOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {

                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;

                }
            } else {
                Texto = "General";

            }

            XSSFRow filaEE2 = hojaIMP.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Regla Adicional -- Favor de verificar el campo Antecedentes penales	ANTECEDENTESPENALES debido a que no se puede seleccionar una opci√≥n diferente a 'Si' (1), 'No' (2) y 'No identificado' (3).";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IMP.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;

        }

        ArrayResult = IMP.CATTIPOPERSONAIMPUTADAID122024(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIMP.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "IMPUTADOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(1);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(2);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(3);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {

                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    Texto = Texto + " , " + parts1;

                }
            } else {
                Texto = "General";

            }

            XSSFRow filaEE2 = hojaIMP.createRow(conDat);
            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(1);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Regla Adicional -- Favor de verificar el campo Tipo de persona imputada	CATTIPOPERSONAIMPUTADAID debido a que no se puede seleccionar una opci√≥n diferente a 'Persona f√≠sica' (1), 'Persona moral' (2) y 'No identificado' (3).";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(2);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(3);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(4);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IMP.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;

        }
        ////////////////////////////////////////////////////////
    }

    // DETERMINACION
    public void Despliega_Determinacion(XSSFWorkbook libro, XSSFSheet hojaDET, XSSFCellStyle estiloCelda0, XSSFCellStyle estiloCelda1, XSSFCellStyle estiloCeldabordes0, JProgressBar progressBar, String Entidad, String Periodo) throws SQLException {

        String Texto = "", Texto2 = "";
        int conEnc = 1, conDat = 2, coni = 1;
        Border border = BorderFactory.createTitledBorder("Cargando...Determinaci√≥n");
        progressBar.setBorder(border);
        progressBar.setValue(46);

        XSSFRow row00 = hojaDET.createRow(0); // Fila
        XSSFCell celda00 = row00.createCell(0); // Columna
        celda00.setCellStyle(estiloCelda0);
        celda00.setCellType(CellType.STRING);
        String titulo00 = "Determinaci√≥n";
        XSSFRichTextString texto00 = new XSSFRichTextString(titulo00);
        hojaDET.addMergedRegion(new CellRangeAddress(0, 0, 0, 3));
        celda00.setCellValue(texto00);
        row00.setHeight((short) 600);
        VDeterminacion DET = new VDeterminacion();

        /*ArrayResult = DET.FECHADETERMINACIONMayor(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaDET.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "DETERMINACIONID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaDET.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "La FECHADETERMINACION (Fecha de la determinaci√≥n ) No debe de ser mayor a la fecha actual.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = DET.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }*/
        ArrayResult = DET.sentidodeter_accionpenal(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaDET.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "DETERMINACIONID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaDET.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaAdicional 9.2.1.7. Si el sentido de la determinaci√≥n es requisitado con la opci√≥n 'Ejercicio de la acci√≥n penal' se deber√° permitir el registro del campo 'Fecha de la determinaci√≥n' (columna H) y se continuar√° con el registros de la plantilla Proceso.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = DET.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = DET.ESTATUSCARPETA(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaDET.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "DETERMINACIONID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaDET.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaAdicional 9.2.5. Si el campo Estatus de la carpeta de investigaci√≥n   (columna D), es requisitado con la opci√≥n ‚ÄúNo identificado‚Äù, entonces en el campo Sentido de la determinaci√≥n (columna E) √∫nicamente deber√° contar con el valor ‚ÄúNo identificado.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = DET.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = DET.ESTATUSCARPETADET(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaDET.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "DETERMINACIONID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaDET.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaAdicional 9.2.6. Si  el campo Estatus de la carpeta de investigaci√≥n‚Äù (columna D), corresponde a ‚ÄúTr√°mite‚Äù, entonces las determinaciones v√°lidas en el campo Sentido de determinaci√≥n (columna E) a las cuales podr√° ser actualizada son: ‚ÄúEjercicio de la Acci√≥n Penal‚Äù, ‚ÄúArchivo temporal‚Äù, ‚ÄúOtro‚Äù y ‚ÄúNo identificado‚Äù; este √∫ltimo para el caso de las carpetas de investigaci√≥n que al inicio de su apertura a√∫n no cuenten con un sentido de determinaci√≥n.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = DET.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = DET.ESTATUS_SENTIDO_DETERMINACION(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaDET.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "DETERMINACIONID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaDET.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaAdicional 1.1.1. El campo Estatus de la carpeta de investigaci√≥n (columna C) es requisitado con el valor ‚ÄúConcluida‚Äù (1) entonces en el campo Sentido de la determinaci√≥n (columna D) solo se pueden seleccionar las opciones ‚ÄúNo ejercicio de la acci√≥n penal por la actualizaci√≥n de alguna causal de sobreseimiento‚Äù; ‚ÄúAbstenerse de investigar cuando se encuentre extinguida la acci√≥n penal o la responsabilidad penal de la persona imputada‚Äù; ‚ÄúAbstenerse de investigar cuando las conductas no constituyan delito‚Äù; ‚ÄúAbstenerse de investigar no identificado‚Äù; ‚ÄúCriterios de oportunidad en los que se decret√≥ la extinci√≥n de la acci√≥n penal‚Äù, ‚ÄúIncompetencia‚Äù, ‚ÄúAcuerdos reparatorios aprobados por el Ministerio P√∫blico en los que se decret√≥ la extinci√≥n de la acci√≥n penal‚Äù y ‚ÄúAcumulaci√≥n‚Äù.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = DET.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = DET.CONCLUIDO(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaDET.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "DETERMINACIONID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaDET.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio 1.1. Si el campo Estatus de la carpeta de investigaci√≥n (columna D) es requisitado con el valor ‚ÄúConcluida‚Äù, en el campo Sentido de la determinaci√≥n (columna E), podr√°n registrarse √∫nicamente las opciones: ‚ÄúNo ejercicio de la acci√≥n penal por la actualizaci√≥n de alguna causal de sobreseimiento‚Äù; ‚ÄúAbstenerse de investigar cuando se encuentre extinguida la acci√≥n penal o la responsabilidad penal de la persona imputada‚Äù; ‚ÄúAbstenerse de investigar cuando las conductas no constituyan delito‚Äù; ‚ÄúAbstenerse de investigar no identificado‚Äù; ‚ÄúCriterios de oportunidad en los que se decret√≥ la extinci√≥n de la acci√≥n penal‚Äù, ‚ÄúIncompetencia‚Äù, ‚ÄúAcuerdos reparatorios aprobados por el Ministerio P√∫blico en los que se decret√≥ la extinci√≥n de la acci√≥n penal‚Äù y ‚ÄúAcumulaci√≥n‚Äù.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = DET.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = DET.PROCESOCONCLUSION(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaDET.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "DETERMINACIONID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaDET.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio 1.2. Si el campo Estatus de la carpeta de investigaci√≥n (columna D) es requisitado con la opci√≥n ‚ÄúEn proceso de conclusi√≥n (tr√°mite)‚Äù, el campo Sentido de la determinaci√≥n (columna E) podr√° registrar las opciones ‚ÄúEjercicio de la acci√≥n penal‚Äù; ‚ÄúArchivo temporal‚Äù u ‚ÄúOtro‚Äù.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = DET.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        /*        ArrayResult = DET.MASCEXISTE(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaDET.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "DETERMINACIONID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaDET.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Si en el campo Estatus de la carpeta de investigaci√≥n (columna D) se especifica la opci√≥n ‚ÄúConcluida‚Äù, se deber√° corroborar la existencia de informaci√≥n en la plantilla MASC.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = DET.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }*/

 /*ArrayResult = DET.CONCLUIDA(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaDET.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "DETERMINACIONID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaDET.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Si en el campo Estatus de la carpeta de investigaci√≥n (columna D) se especifica la opci√≥n ‚ÄúConcluida‚Äù, se deber√° corroborar la existencia de informaci√≥n en la plantilla sobreseimiento.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = DET.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }*/
        ArrayResult = DET.SENTIDODETERMINACION(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaDET.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "DETERMINACIONID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaDET.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio 9.2. Para el campo Sentido de la determinaci√≥n (columna E) si este campo es llenado, la Fecha de la determinaci√≥n (columna H) no puede venir vacia.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = DET.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = DET.SENTIDODACUERDOS(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaDET.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "DETERMINACIONID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaDET.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaAdicional 9.2.1.1. Si el sentido de la determinaci√≥n es requisitado con la opci√≥n ‚ÄúAcuerdos reparatorios aprobados por el Ministerio P√∫blico en los que se decret√≥ la extinci√≥n de la acci√≥n penal‚Äù  los campos En caso de acuerdos reparatorios, ¬øtipo de acuerdos reparatorios? (columna F)  y Fecha de la determinaci√≥n (columna H) no pueden venir vacios.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = DET.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = DET.SENTIDOARCHIVO(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaDET.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "DETERMINACIONID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaDET.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaAdicional 9.2.1.2. Si el sentido de la determinaci√≥n es requisitado con la opci√≥n ‚ÄúAcuerdos reparatorios aprobados por el Ministerio P√∫blico en los que se decret√≥ la extinci√≥n de la acci√≥n penal‚Äù  los campos En caso de acuerdos reparatorios, ¬øtipo de acuerdos reparatorios? (columna F)  y Fecha de la determinaci√≥n (columna H) no pueden venir vac√≠os.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = DET.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = DET.SENTIDOEJERCICIOAP(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaDET.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "DETERMINACIONID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaDET.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaAdicional 9.2.1.3. Si el sentido de la determinaci√≥n es requisitado con la opci√≥n  Ejercicio de la acci√≥n penal el campo Fecha de la determinaci√≥n (columna H) no puede venir vac√≠o.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = DET.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = DET.FECHADETERMINACION(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaDET.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "DETERMINACIONID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaDET.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaAdicional 9.2.1.4. Si el sentido de la determinaci√≥n es requisitado con las opciones \"No ejercicio de la acci√≥n penal por la actualizaci√≥n de alguna causal de sobreseimiento\", \"Abstenerse de investigar cuando se encuentre extinguida la acci√≥n penal o la responsabilidad penal de la persona imputada\" ‚ÄúAbstenerse de investigar cuando las conductas no constituyan delito‚Äù, ‚ÄúAbstenerse de investigar no identificado‚Äù, ‚Äú Criterios de oportunidad en los que se decret√≥ la extinci√≥n de la acci√≥n penal‚Äù, ‚ÄúIncompetencia‚Äù, ‚ÄúAcumulaci√≥n‚Äù u ‚ÄúOtro‚Äù, √∫nicamente se deber√° permitir el registro del campo Fecha de la determinaci√≥n (columna H) y se requisitar√° la plantilla Sobreseimiento.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = DET.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = DET.SOBRESEIMIENTO(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaDET.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "DETERMINACIONID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaDET.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaAdicional 9.2.1.5. S√≠ es requisitada la plantilla \"Sobreseimiento\", el campo Sentido de la determinaci√≥n debe ser requisitado con las opciones: \"No ejercicio de la acci√≥n penal por la actualizaci√≥n de alguna causal de sobreseimiento\", \"Abstenerse de investigar cuando se encuentre extinguida la acci√≥n penal o la responsabilidad penal de la persona imputada\", \"Abstenerse de investigar cuando las conductas no constituyan delito‚Äù, ‚ÄúAbstenerse de investigar no identificado‚Äù, ‚Äú Criterios de oportunidad en los que se decret√≥ la extinci√≥n de la acci√≥n penal‚Äù, ‚ÄúIncompetencia‚Äù, ‚ÄúAcumulaci√≥n‚Äù u ‚ÄúOtro‚Äù.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = DET.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = DET.SENTDETNO(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaDET.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "DETERMINACIONID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaDET.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaAdicional 9.2.1.6. Si el sentido de la determinaci√≥n es diferente a la opci√≥n \"Ejercicio de la acci√≥n penal\" no debe registrar en el campo \"Fecha de la determinaci√≥n\" (columna H) y no debe existir registros en la plantilla Proceso";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = DET.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = DET.REactivacion(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaDET.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "DETERMINACIONID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaDET.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio 9.2.2. Si el Sentido de la determinaci√≥n (columna E) se ingres√≥ con la opci√≥n de ‚ÄúReactivaci√≥n‚Äù (columna G), su estatus subsecuente solo podr√° ser: ‚ÄúEjercicio de la Acci√≥n Penal‚Äù, ‚ÄúNo ejercicio de la acci√≥n penal‚Äù, ‚ÄúArchivo Temporal‚Äù, ‚ÄúAbstenerse de investigar cuando se encuentre extinguida la acci√≥n penal o la responsabilidad penal de la persona imputada‚Äù, ‚ÄúAbstenerse de investigar cuando las conductas no constituyan alg√∫n delito‚Äù, ‚ÄúAbstenerse de investigar no identificado‚Äù, ‚ÄúCriterio de oportunidad en los que se decret√≥ la extinci√≥n de la acci√≥n penal‚Äù, ‚ÄúIncompetencia‚Äù, ‚ÄúAcuerdos reparatorios aprobados por el Ministerio P√∫blico en los que se decret√≥ la extinci√≥n de la acci√≥n penal‚Äù, ‚ÄúAcumulaci√≥n‚Äù, ‚ÄúOtro‚Äù.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = DET.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = DET.ETAPAPROCESAL(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaDET.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "DETERMINACIONID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaDET.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio 3. Si el valor del campo Etapa procesal en que se encuentra la carpeta de investigaci√≥n (columna AG) de la plantilla Carpeta de investigaci√≥n es ‚ÄúEtapa de investigaci√≥n complementaria‚Äù y el campo Sentido de la determinaci√≥n (columna E) deber√° ser requisitado con una de las siguientes opciones: ‚ÄúEjercicio de la acci√≥n penal‚Äù; ‚ÄúCriterios de oportunidad en los que se decret√≥ la extinci√≥n de la acci√≥n penal‚Äù; ‚ÄúIncompetencia‚Äù; ‚ÄúAcuerdos reparatorios aprobados por el Ministerio P√∫blico en los que se decret√≥ la extinci√≥n de la acci√≥n penal‚Äù; o ‚ÄúNo identificado‚Äù.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = DET.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = DET.SENTIDODETERMINACION122024(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaDET.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "DETERMINACIONID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaDET.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Regla Adicional -- Favor de verificar el campo Sentido de la determinaci√≥n	CATSENDETID no puede venir nulo.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = DET.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        ArrayResult = DET.CATTIPOPERSONAIMPUTADAID122024(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaDET.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "DETERMINACIONID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaDET.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Regla Adicional -- Favor de verificar el campo Estatus de la carpeta de investigaci√≥n CATESTATUSCARPETAID no puede seleccionar una opci√≥n diferente a 'Concluida' (1),'En proceso de conclusi√≥n (tr√°mite)' (2) y 'No identificado' (3).";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = DET.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = DET.FECHADETERMINACION122024(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaDET.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "DETERMINACIONID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaDET.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Regla Adicional -- Favor de verificar el campo Fecha de la determinaci√≥n (aplica tambi√©n para fecha de reactivaci√≥n en caso de archivo temporal y criterio de oportunidad)	FECHADETERMINACION debido a que no puede venir nulo.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = DET.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

    }

    // PROCESO
    public void Despliega_Proceso(XSSFWorkbook libro, XSSFSheet hojaPROC, XSSFCellStyle estiloCelda0, XSSFCellStyle estiloCelda1, XSSFCellStyle estiloCeldabordes0, JProgressBar progressBar, String Entidad, String Periodo) throws SQLException {

        String Texto = "", Texto2 = "";
        int conEnc = 1, conDat = 2, coni = 1;
        Border border = BorderFactory.createTitledBorder("Cargando...Proceso");
        progressBar.setBorder(border);
        progressBar.setValue(52);

        XSSFRow row00 = hojaPROC.createRow(0); // Fila
        XSSFCell celda00 = row00.createCell(0); // Columna
        celda00.setCellStyle(estiloCelda0);
        celda00.setCellType(CellType.STRING);
        String titulo00 = "Proceso";
        XSSFRichTextString texto00 = new XSSFRichTextString(titulo00);
        hojaPROC.addMergedRegion(new CellRangeAddress(0, 0, 0, 3));
        celda00.setCellValue(texto00);
        row00.setHeight((short) 600);
        VProceso PROC = new VProceso();

        /*ArrayResult = PROC.FECHAINICIOMayor(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaPROC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "PROCESOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaPROC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "La FECHAINICIO (Fecha de ingreso de la causa penal) no debe de ser mayor a la Fecha actual";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = PROC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }*/

 /*ArrayResult = PROC.FECHAAUDIENCIAINICIALMayor(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaPROC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "PROCESOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaPROC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "La FECHAAUDIENCIAINICIAL (Fecha de la audiencia inicial) no debe de ser mayor a la Fecha actual.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = PROC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }*/

 /*ArrayResult = PROC.FECHAULTIMOESTATUSPROCESOMayor(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaPROC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "PROCESOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaPROC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "La FECHAULTIMOESTATUSPROCESO (Fecha ultimo estatus proceso) no debe de ser mayor a la Fecha actual.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = PROC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }*/

 /*ArrayResult = PROC.CATETAPAPROCESALID(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaPROC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "PROCESOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaPROC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo Etapa procesal en la que se encuentra el imputado (columna E) es requisitado con la opcion ‚ÄúEtapa de investigaci√≥n inicial‚Äù (1) entonces la plantilla Determinaci√≥n debe ser requisitado.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = PROC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = PROC.CATETAPAPROCESALID1(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaPROC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "PROCESOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaPROC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo Etapa procesal en la que se encuentra el imputado (columna E) es requisitado con la opcion ‚ÄúEtapa de investigaci√≥n inicial‚Äù (1) entonces la plantillas Investigaci√≥n complementaria, Medidas cautelares, Etapa intermedia, Suspensi√≥n condicional, Sobreseimiento y Sentencia deben ser requisitadas.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = PROC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = PROC.CATESTATUSCARPETAID(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaPROC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "PROCESOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaPROC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo Etapa procesal en la que se encuentra el imputado (columna E) es ‚ÄúEtapa de investigaci√≥n inicial‚Äù (1), entonces los campos Estatus de la carpeta de investigaci√≥n (columna D) y Sentido de la determinaci√≥n (columna E) de la plantilla Determinaci√≥n deber√°n ser requisitados.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = PROC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = PROC.CATETAPAPROCESALID2(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaPROC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "PROCESOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaPROC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo Etapa procesal en la que se encuentra el imputado (columna E) es requisitado con la opci√≥n ‚ÄúEtapa de investigaci√≥n complementaria‚Äù (2) entonces la plantillas Determinaci√≥n, Mandamientos judiciales e Investigaci√≥n complementaria deben ser requisitadas.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = PROC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = PROC.CATETAPAPROCESALID3(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaPROC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "PROCESOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaPROC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo Etapa procesal en la que se encuentra el imputado (columna E) corresponde a la opci√≥n ‚ÄúEtapa intermedia‚Äù (3), entonces las plantillas Determinaci√≥n, Proceso, Mandamientos judiciales, Investigaci√≥n complementaria y Etapa intermedia deben ser requisitadas. ";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = PROC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = PROC.ACUSACION(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaPROC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "PROCESOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaPROC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo Etapa procesal en la que se encuentra el imputado (columna E) es requisitado con la opci√≥n ‚ÄúEtapa intermedia‚Äù (3), entonces el campo ¬øSe formul√≥ acusaci√≥n? (columna K) de la plantilla Investigaci√≥n complementaria debe ser requisitada la opci√≥n 'Si' (1).";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = PROC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = PROC.DICTAUTAPERJUICIO(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaPROC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "PROCESOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaPROC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo Etapa procesal en la que se encuentra el imputado (columna E), corresponde a la opci√≥n ‚ÄúEtapa de juicio‚Äù (4), entonces el campo ¬øSe dict√≥ auto de apertura a juicio oral? (columna K) debe ser requisitado la opci√≥n ‚ÄúS√≠‚Äù (1) de la plantilla Etapa Intermedia.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = PROC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = PROC.CATETAPAPROCESALID4(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaPROC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "PROCESOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaPROC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo Etapa procesal en la que se encuentra el imputado (columna E), corresponde a la opci√≥n ‚ÄúEtapa de juicio‚Äù (4), entonces las plantillas  Determinaci√≥n, Mandamientos judiciales e Investigaci√≥n complementaria deben ser requisitadas.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = PROC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = PROC.CATSENDETID(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaPROC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "PROCESOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaPROC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo Etapa procesal en la que se encuentra el imputado (columna E), corresponde a la opci√≥n ‚ÄúEtapa de juicio‚Äù (4), entonces el campo Sentido de la determinaci√≥n (columna E) de la plantilla Determinaci√≥n deber√° ser requisitado con una de las siguientes opciones ‚ÄúEjercicio de la acci√≥n penal‚Äù (1) o ‚ÄúNo identificado‚Äù (99).";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = PROC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = PROC.CATESTATUSCARPETAID1(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaPROC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "PROCESOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaPROC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo Etapa procesal en la que se encuentra el imputado (columna E), corresponde a la opci√≥n ‚ÄúEtapa de juicio‚Äù (4) y el campo Estatus de la carpeta de investigaci√≥n (columna D) de la plantilla Determinaci√≥n tiene el valor ‚ÄúConcluida‚Äù (1), no debe existir informaci√≥n en las plantillas Suspensi√≥n condicional (cumplimentada), MASC y Sobreseimiento.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = PROC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }*/
        ArrayResult = PROC.FECHAINICIO(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaPROC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "PROCESOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaPROC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio 10.1.  El campo Fecha de ingreso de la causa penal (columna F) debe ser mayor a la Fecha de apertura de la carpeta de investigaci√≥n (columna X).";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = PROC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        /*ArrayResult = PROC.HUBOCELEBRACIONAUDIENCIAINICIAL(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaPROC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "PROCESOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaPROC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo ¬øHubo celebraci√≥n de audiencia inicial? (columna G) es requisitado con la opci√≥n ‚ÄúSi‚Äù (1), entonces el campo Fecha de la audiencia inicial (columna I) debera ser requisitado. ";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = PROC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = PROC.HUBOCELEBRACIONAUDIENCIAINICIAL1(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaPROC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "PROCESOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaPROC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo ¬øHubo celebraci√≥n de audiencia inicial? (columna G) es requisitado con la opci√≥n S√≠ (1) debe permitir el registro de las plantillas Mandamientos judiciales e Investigaci√≥n complementaria.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = PROC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = PROC.CATMOTIVOAUDIENCIAINICIALID(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaPROC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "PROCESOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaPROC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo ¬øHubo celebraci√≥n de audiencia inicial? (columna G) es requisitado con la opci√≥n S√≠ (1) no debe ser requistado el campo Motivo por el que no se celebr√≥ la audiencia inicial.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = PROC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = PROC.OTROMOTIVO(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaPROC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "PROCESOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaPROC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo ¬øHubo celebraci√≥n de audiencia inicial? (columna G) es requisitado con la opci√≥n No (2) y el campo Motivo por el que no se celebr√≥ la audiencia inicial (columna H) es requistado, entonces los campos Fecha de la audiencia inicial (columna I) , Otro motivo, Identificador √∫nico UltimoEstatusProceso, Fecha ultimo estatus proceso, Identificador  EstatusProceso , ¬øSe dict√≥ suspensi√≥n condicional del proceso? (columna K) y ¬øEl asunto fue derivado a MASC? (columna J) no deberan ser requisitados.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = PROC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = PROC.FECHAAUDIENCIAINICIAL(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaPROC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "PROCESOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaPROC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo ¬øHubo celebraci√≥n de audiencia inicial? (columna G) es requisitado con la opcion No (2) entonces los campos Motivo por el que no se celebr√≥ la audiencia inicial (columna H) debe ser requisitado y el campo Fecha de la audiencia inicial (columna I) no debe ser requisitado.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = PROC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = PROC.FECHAINICIO1(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaPROC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "PROCESOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaPROC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo Fecha de audiencia inicial (columna I) debe ser mayor o igual a la Fecha de ingreso de la causa penal (columna F).";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = PROC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = PROC.DERIVOMASC(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaPROC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "PROCESOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaPROC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo ¬øEl asunto fue derivado a MASC? (columna J) es requisitado con la opcion Si (1) debe ser requisitada la plantilla MASC.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = PROC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = PROC.TIENESUSPENSIONCONDICIONAL(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaPROC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "PROCESOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaPROC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo ¬øSe dict√≥ suspensi√≥n condicional del proceso? (columna K) es requisitado con la opcion Si (1) debe ser requisitada la plantilla Suspensi√≥n Condicional.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = PROC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = PROC.CATESTATUSCARPETAID2(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaPROC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "PROCESOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaPROC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo Estatus de carpeta CATESTATUSCARPETAID es requisitado con la opci√≥n ‚ÄúNo identificado‚Äù (9) no debe existir informaci√≥n en las plantillas MASC, Sobreseimiento, Suspension condicional y Semtencia.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = PROC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = PROC.CATESTATUSCARPETAID3(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaPROC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "PROCESOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaPROC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo Estatus de carpeta  es requisitado con la opci√≥n ‚ÄúTr√°mite‚Äù (2) para cualquier etapa del campo Etapa procesal en la que se encuentra la determinacion  no debe existir informaci√≥n en las plantillas MASC, Sobreseimiento, Suspensi√≥n condicional y Sentencia.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = PROC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = PROC.CATESTATUSCARPETAID4(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaPROC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "PROCESOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaPROC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo  Estatus de la carpeta  es requisitado con el valor ‚ÄúConcluido‚Äù, en la etapa de investigaci√≥n inicial, debe existir informaci√≥n en alguna de las siguientes plantillas MASC o Sobreseimiento.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = PROC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = PROC.CATESTATUSCARPETAID5(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaPROC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "PROCESOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaPROC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Si el campo Estatus del proceso  es requisitado con el valor ‚ÄúConcluido‚Äù, en la etapa de investigaci√≥n complementaria, se deber√° verificar que exista informaci√≥n en alguna de las siguientes plantillas. MASC, Suspensi√≥n condicional o Sobreseimiento ";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = PROC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = PROC.CATESTATUSCARPETAID6(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaPROC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "PROCESOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaPROC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Si el campo Estatus del proceso  es requisitado con el valor ‚ÄúConcluido‚Äù, en la etapa intermedia, se deber√° verificar que exista informaci√≥n en alguna de las siguientes plantillas: MASC, Suspensi√≥n condicional, Sobreseimiento o Sentencia.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = PROC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = PROC.CATESTATUSCARPETAID7(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaPROC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "PROCESOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaPROC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Si el campo Estatus del proceso  es requisitado con el valor ‚ÄúConcluido‚Äù, en la etapa de juicio, se deber√° verificar que exista informaci√≥n en alguna de las siguientes plantillas: Sobreseimiento o Sentencia.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = PROC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }*/
    }

    // MASC
    public void Despliega_MASC(XSSFWorkbook libro, XSSFSheet hojaMASC, XSSFCellStyle estiloCelda0, XSSFCellStyle estiloCelda1, XSSFCellStyle estiloCeldabordes0, JProgressBar progressBar, String Entidad, String Periodo) throws SQLException {

        String Texto = "", Texto2 = "";
        int conEnc = 1, conDat = 2, coni = 1;
        Border border = BorderFactory.createTitledBorder("Cargando...MASC");
        progressBar.setBorder(border);
        progressBar.setValue(58);

        XSSFRow row00 = hojaMASC.createRow(0); // Fila
        XSSFCell celda00 = row00.createCell(0); // Columna
        celda00.setCellStyle(estiloCelda0);
        celda00.setCellType(CellType.STRING);
        String titulo00 = "MASC";
        XSSFRichTextString texto00 = new XSSFRichTextString(titulo00);
        hojaMASC.addMergedRegion(new CellRangeAddress(0, 0, 0, 3));
        celda00.setCellValue(texto00);
        row00.setHeight((short) 600);
        VMASC MASC = new VMASC();

        /*ArrayResult = MASC.FECHADERIVAMASCMayor(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaMASC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "MASCID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaMASC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "La FECHADERIVAMASC (Fecha en que se deriva a MASC) No debe de ser mayor a la fecha actual.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = MASC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = MASC.FECHACUMPLIMENTOMASCMayor(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaMASC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "MASCID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaMASC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "La FECHACUMPLIMENTOMASC (Fecha en que se cumpliment√≥ el MASC) No debe de ser mayor a la fecha actual.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = MASC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }*/
        ArrayResult = MASC.TABLA_MASC(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaMASC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "MASCID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaMASC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio 15.3. La tabla TR_SENAP_MASC es requisitada, las plantillas Sobreseimiento, Suspensi√≥n condicional y Sentencia no deben ser requisitadas.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = MASC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = MASC.FECHACUMPSUSPENCONDIPROCESO(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaMASC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "MASCID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaMASC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio 15.4. El campo Fecha en que se cumpliment√≥ la suspensi√≥n condicional del proceso (columna H) es requisitada, no debe ser requisitada la plantilla MASC.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = MASC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = MASC.FECHACUMPSUSPENCONDIPROCESO1(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaMASC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "MASCID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaMASC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio 15.4. El campo Fecha en que se cumpliment√≥ la suspensi√≥n condicional del proceso (columna H) no es requisitada, debe ser requisitada la plantilla MASC.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = MASC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = MASC.CATETAPAPROCESALID(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaMASC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "MASCID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaMASC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio 15.5. El campo Etapa procesal en la que se encuentra el imputado de la plantilla Proceso tiene el valor ‚ÄúEtapa intermedia‚Äù (3), el campo ¬øSe dict√≥ auto de apertura a juicio oral? (columna K) de la plantilla Etapa intermedia sea ‚ÄúNo‚Äù (2) y el campo Fecha en que se cumpliment√≥ la suspensi√≥n condicional del proceso (columna H) es requisitada, entonces la plantilla MASC deber√° ser requisitada y las plantillas Suspensi√≥n condicional, Sobreseimiento y Sentencia no deber√°n ser requisitadas.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = MASC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        /*ArrayResult = MASC.CATTIPOCUMPLIMIENTOID(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaMASC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "MASCID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaMASC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo Tipo de cumplimiento (columna G) es requisitado, entonces el campo Fecha en la que se cumpliment√≥ el MASC (columna H) debe ser requisitado.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = MASC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = MASC.FECHACUMPLIMENTOMASC(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaMASC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "MASCID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaMASC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo Tipo de cumplimiento (columna G) no es requisitado, entonces el campo Fecha en la que se cumpliment√≥ el MASC (columna H) no debe ser requisitado.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = MASC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = MASC.FECHADERIVAMASC(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaMASC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "MASCID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaMASC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo Fecha en la que se cumpliment√≥ el MASC (columna H) debera ser mayor al campo Fecha en que se deriva el MASC (columna E).";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = "";
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = MASC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }*/
    }

    // MANDAMIENTOS JUDICIALES
    public void Despliega_MandamientosJudiciales(XSSFWorkbook libro, XSSFSheet hojaMJ, XSSFCellStyle estiloCelda0, XSSFCellStyle estiloCelda1, XSSFCellStyle estiloCeldabordes0, JProgressBar progressBar, String Entidad, String Periodo) throws SQLException {

        String Texto = "", Texto2 = "";
        int conEnc = 1, conDat = 2, coni = 1;
        Border border = BorderFactory.createTitledBorder("Cargando...Mandamientos Judiciales");
        progressBar.setBorder(border);
        progressBar.setValue(64);

        XSSFRow row00 = hojaMJ.createRow(0); // Fila
        XSSFCell celda00 = row00.createCell(0); // Columna
        celda00.setCellStyle(estiloCelda0);
        celda00.setCellType(CellType.STRING);
        String titulo00 = "Mandamientos Judiciales";
        XSSFRichTextString texto00 = new XSSFRichTextString(titulo00);
        hojaMJ.addMergedRegion(new CellRangeAddress(0, 0, 0, 3));
        celda00.setCellValue(texto00);
        row00.setHeight((short) 600);
        VMandamientosJudiciales MJ = new VMandamientosJudiciales();

        /*ArrayResult = MJ.FECHASOLMANDJUDMayorA(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaMJ.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "MANDAMIENTOJUDICIALID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaMJ.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "La FECHASOLMANDJUD (Fecha de solicitud del mandamiento judicial ) No debe de ser mayor a la fecha actual.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = MJ.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = MJ.FECHALIBMANDMayorA(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaMJ.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "MANDAMIENTOJUDICIALID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaMJ.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "La FECHALIBMAND (Fecha de libramiento del mandamiento) No debe de ser mayor a la fecha actual.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = MJ.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = MJ.FECHAULTESTMANDMayorA(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaMJ.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "MANDAMIENTOJUDICIALID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaMJ.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "La FECHAULTESTMAND (Fecha de libramiento del mandamiento) No debe de ser mayor a la fecha actual.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = MJ.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = MJ.FECHASOLMANDJUD(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaMJ.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "MANDAMIENTOJUDICIALID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaMJ.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo Fecha de solicitud del mandamiento judicial (columna E) debe ser mayor o igual al campo Fecha de apertura de la carpeta de investigaci√≥n (columna X) de la plantilla Carpeta de investigaci√≥n.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = MJ.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = MJ.FECHALIBMAND(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaMJ.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "MANDAMIENTOJUDICIALID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaMJ.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo Fecha de libramiento del mandamiento (columna G) debe ser mayor o igual al campo Fecha de ingreso de la causa penal (columna F) de la plantilla Proceso.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = MJ.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = MJ.ULTESTMAND(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaMJ.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "MANDAMIENTOJUDICIALID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaMJ.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo Estatus del mandamiento judicial (columna H) es requisitado con la opcion ‚ÄúCumplimentado‚Äù (1) debe ser requisitado el campo Fecha de cumplimento del mandamiento judicial (columna I).";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = MJ.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = MJ.FECHAULTESTMAND(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaMJ.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "MANDAMIENTOJUDICIALID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaMJ.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo Fecha de cumplimento del mandamiento (columna I) debe ser mayor o igual al campo Fecha de libramiento del mandamiento (columna G).";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = MJ.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = MJ.ULTESTMAND1(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaMJ.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "MANDAMIENTOJUDICIALID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaMJ.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo Estatus del mandamiento judicial (columna H) es requisitado con la opci√≥n ‚ÄúCumplimentado‚Äù (1) debe ser requisitado el campo Fecha de cumplimento del mandamiento judicial (columna I).";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = MJ.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }*/
    }

    //MEDIDAS CAUTELARES
    public void Despliega_MedidaCautelar(XSSFWorkbook libro, XSSFSheet hojaMC, XSSFCellStyle estiloCelda0, XSSFCellStyle estiloCelda1, XSSFCellStyle estiloCeldabordes0, JProgressBar progressBar, String Entidad, String Periodo) throws SQLException {

        String Texto = "", Texto2 = "";
        int conEnc = 1, conDat = 2, coni = 1;
        Border border = BorderFactory.createTitledBorder("Cargando...Medidas Cautelares");
        progressBar.setBorder(border);
        progressBar.setValue(70);

        XSSFRow row00 = hojaMC.createRow(0); // Fila
        XSSFCell celda00 = row00.createCell(0); // Columna
        celda00.setCellStyle(estiloCelda0);
        celda00.setCellType(CellType.STRING);
        String titulo00 = "Medida Cautelar";
        XSSFRichTextString texto00 = new XSSFRichTextString(titulo00);
        hojaMC.addMergedRegion(new CellRangeAddress(0, 0, 0, 3));
        celda00.setCellValue(texto00);
        row00.setHeight((short) 600);
        VMedidaCautelar MC = new VMedidaCautelar();

        ArrayResult = MC.CATMEDIDAID122024(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaMC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "MEDIDACAUTELARID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaMC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Regla Adicional -- Favor de verificar el campo Tipo de medida cautelar	CATMEDIDAID debido a que debe tener una opci√≥n v√°lida";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = MC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
    }

    // INVESTIGACION COMPLEMENTARIA
    public void Despliega_InvestigacionComplementaria(XSSFWorkbook libro, XSSFSheet hojaIC, XSSFCellStyle estiloCelda0, XSSFCellStyle estiloCelda1, XSSFCellStyle estiloCeldabordes0, JProgressBar progressBar, String Entidad, String Periodo) throws SQLException {

        String Texto = "", Texto2 = "";
        int conEnc = 1, conDat = 2, coni = 1;
        Border border = BorderFactory.createTitledBorder("Cargando...Investigaci√≥n Complementaria");
        progressBar.setBorder(border);
        progressBar.setValue(76);

        XSSFRow row00 = hojaIC.createRow(0); // Fila
        XSSFCell celda00 = row00.createCell(0); // Columna
        celda00.setCellStyle(estiloCelda0);
        celda00.setCellType(CellType.STRING);
        String titulo00 = "Investigaci√≥n Complementar√≠a";
        XSSFRichTextString texto00 = new XSSFRichTextString(titulo00);
        hojaIC.addMergedRegion(new CellRangeAddress(0, 0, 0, 3));
        celda00.setCellValue(texto00);
        row00.setHeight((short) 600);
        VInvestigacionComplementaria IC = new VInvestigacionComplementaria();

        /*ArrayResult = IC.FECHACIERREINVMayor(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "INVESTIGACIONCOMPLEMENTARIAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaIC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "La FECHACIERREINV (Fecha  del cierre de la investigaci√≥n ) No debe de ser mayor a la fecha actual.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }*/

 /*ArrayResult = IC.FECHAFORMIMPMayor(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "INVESTIGACIONCOMPLEMENTARIAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaIC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "La FECHAFORMIMP (Fecha de formulaci√≥n de la imputaci√≥n ) No debe de ser mayor a la fecha actual.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }*/

 /*ArrayResult = IC.FECHAVINCPROSMayor(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "INVESTIGACIONCOMPLEMENTARIAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaIC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "La FECHAVINCPROS (Fecha en que se dict√≥ el auto de vinculaci√≥n a proceso (aplica si se vincul√≥ a proceso) ) No debe de ser mayor a la fecha actual.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }*/
        ArrayResult = IC.FormulacionImputacion(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "INVESTIGACIONCOMPLEMENTARIAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaIC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio 12.2. El campo ¬øHubo formulaci√≥n de la imputaci√≥n? (columna E) es requisitado con la opci√≥n ‚ÄúS√≠‚Äù (1), entonces el campo Fecha de formulaci√≥n de la imputaci√≥n (columna F) debe ser requisitada.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = IC.FormulacionImputacion(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "INVESTIGACIONCOMPLEMENTARIAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaIC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio 12.2. El campo ¬øHubo formulaci√≥n de la imputaci√≥n? (columna E) es requisitado con la opci√≥n ‚ÄúS√≠‚Äù (1), entonces el campo Fecha de formulaci√≥n de la imputaci√≥n (columna F) debe ser requisitada.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        /*
        ArrayResult = IC.RESOLUCIONAUTOVINCAPROCESO(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "INVESTIGACIONCOMPLEMENTARIAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaIC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocioAdicional 12.7.  El campo Resoluci√≥n del auto de vinculaci√≥n a proceso (columna G) es requisitado con la opci√≥n \"No vinculaci√≥n a proceso\" (1) o \"No identificado\" (9), debe ser requisitada la plantilla Sobreseimiento.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        
        ArrayResult = IC.RESOLUCIONAUTOVINCAPROCESONO(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "INVESTIGACIONCOMPLEMENTARIAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaIC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocioAdicional 12.7.1. El campo Resoluci√≥n del auto de vinculaci√≥n a proceso (columna G) es requisitado con la opci√≥n \"No vinculaci√≥n a proceso\" (1) o \"No identificado\" (9), no debe tener registros los campos Fecha en que se dict√≥ el auto de vinculaci√≥n a proceso, ¬øSe impuso medida cautelar? (columna G), Fecha del cierre de la investigaci√≥n y ¬øSe formul√≥ acusaci√≥n? (columna I) .";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }*/
        ArrayResult = IC.NoFormulacionImputacion(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "INVESTIGACIONCOMPLEMENTARIAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaIC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio 12.2. El campo ¬øHubo formulaci√≥n de la imputaci√≥n? (columna E) no es requisitado con la opci√≥n ‚ÄúSi‚Äù (1), entonces el campo Fecha de formulaci√≥n de la imputaci√≥n (columna F) no deber√° ser requisitada.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        /*ArrayResult = IC.FechaFormulacionImputacion(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "INVESTIGACIONCOMPLEMENTARIAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaIC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo Fecha formulaci√≥n de la imputaci√≥n (columna F) debe ser mayor o igual a la Fecha de audiencia inicial (columna I) de la plantilla Proceso.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }*/

 /*ArrayResult = IC.VinculacionProceso(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "INVESTIGACIONCOMPLEMENTARIAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaIC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo Fecha formulaci√≥n de la imputaci√≥n (columna F) debe ser mayor o igual a la Fecha de audiencia inicial (columna I) de la plantilla Proceso.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }*/

 /*ArrayResult = IC.NoVinculacionProceso(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "INVESTIGACIONCOMPLEMENTARIAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaIC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo Resoluci√≥n del auto de vinculaci√≥n a proceso (columna G) es requisitado con la opci√≥n Vinculaci√≥n a proceso (1) debe registrarse la Fecha en que se dict√≥ el auto de vinculaci√≥n (columna H).";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }*/

 /*ArrayResult = IC.FechaVinculacionProceso(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "INVESTIGACIONCOMPLEMENTARIAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaIC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo Fecha en que se dict√≥ el auto de vinculaci√≥n (columna H) debe ser mayor o igual a la Fecha de formulaci√≥n de la imputaci√≥n (columna F).";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }*/
        ArrayResult = IC.MedidaCautelar(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "INVESTIGACIONCOMPLEMENTARIAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaIC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio 12.5. El campo ¬øSe impuso medida cautelar? (columna G) es requisitado con la opcion Si (1) debera ser requistada la plantilla Medidas cautelares.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = IC.MedidaCautelar1(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "INVESTIGACIONCOMPLEMENTARIAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaIC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio 2.18.2. El campo ¬øSe impuso medida cautelar? (columna I) es requisitado con la opci√≥n Si (1), deber√° ser requisitada la plantilla Medidas cautelares.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        /*ArrayResult = IC.FechaCierreInvestigacion(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "INVESTIGACIONCOMPLEMENTARIAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaIC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo Fecha de cierre de la investigaci√≥n (columna J) debe ser mayor o igual al campo Fecha en que se dict√≥ auto de vinculaci√≥n (columna H).";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }*/
        ArrayResult = IC.Acusacion(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "INVESTIGACIONCOMPLEMENTARIAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaIC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio 2.18.3. El campo ¬øSe formul√≥ acusaci√≥n? (columna K) es requisitado con la opcion Si (1) debera ser requisitada la plantilla Etapa intermedia. ";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = IC.NoAcusacion(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "INVESTIGACIONCOMPLEMENTARIAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaIC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaAdicional 20.1.3. El campo ¬øSe formul√≥ acusaci√≥n? (columna K) es es requisitado con la opci√≥n ‚ÄúNo‚Äù (2) deber√° ser requisitada la plantilla Sobreseimiento.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = IC.NoAcusacion1(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "INVESTIGACIONCOMPLEMENTARIAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaIC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaAdicional 20.1.3. El campo ¬øSe formul√≥ acusaci√≥n? (columna K) es es requisitado con la opci√≥n ‚ÄúNo‚Äù (2) debe ser requisitada la plantilla MASC.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = IC.NoAcusacion2(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "INVESTIGACIONCOMPLEMENTARIAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaIC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaAdicional 20.1.3. El campo ¬øSe formul√≥ acusaci√≥n? (columna K) es es requisitado con la opci√≥n ‚ÄúNo‚Äù (2) deber√° ser requisitada la plantilla Suspensi√≥n condicional.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = IC.FORMULACIONIMPUTACIONNOTNULL(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "INVESTIGACIONCOMPLEMENTARIAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaIC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Regla Adicional -- Favor de verififcar el campo ¬øHubo formulaci√≥n de la imputaci√≥n?	FORMULACIONIMPUTACION debido a que no puede seleccionar una opci√≥n diferente a 'Si' (1), 'No' (2) y 'No identificado' (3).";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        ArrayResult = IC.FORMULACIONIMPUTACION122024(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "INVESTIGACIONCOMPLEMENTARIAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaIC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Regla Adicional -- Favor de verififcar el campo ¬øSe formul√≥ acusaci√≥n?	ACUSACION debido a que no puede seleccionar una opci√≥n diferente a 'Si' (1), 'No' (2) y 'No identificado' (3)";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = IC.MEDIDACAUTELAR122024(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaIC.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "INVESTIGACIONCOMPLEMENTARIAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {
                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }
            } else {
                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaIC.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Regla Adicional -- Favor de verififcar el campo ¬øSe impuso medida cautelar? MEDIDACAUTELAR debido a que no puede seleccionar una opci√≥n diferente a 'Si' (1), 'No' (2) y 'No identificado' (9).";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = IC.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

    }

    // ETAPA INTERMEDIA
    public void Despliega_EtapaIntermedia(XSSFWorkbook libro, XSSFSheet hojaEI, XSSFCellStyle estiloCelda0, XSSFCellStyle estiloCelda1, XSSFCellStyle estiloCeldabordes0, JProgressBar progressBar, String Entidad, String Periodo) throws SQLException {

        String Texto = "", Texto2 = "";
        int conEnc = 1, conDat = 2, coni = 1;
        Border border = BorderFactory.createTitledBorder("Cargando...Etapa Intermedia");
        progressBar.setBorder(border);
        progressBar.setValue(82);

        XSSFRow row00 = hojaEI.createRow(0); // Fila
        XSSFCell celda00 = row00.createCell(0); // Columna
        celda00.setCellStyle(estiloCelda0);
        celda00.setCellType(CellType.STRING);
        String titulo00 = "Etapa Intermedia";
        XSSFRichTextString texto00 = new XSSFRichTextString(titulo00);
        hojaEI.addMergedRegion(new CellRangeAddress(0, 0, 0, 3));
        celda00.setCellValue(texto00);
        row00.setHeight((short) 600);
        VEtapaIntermedia EI = new VEtapaIntermedia();

        /*ArrayResult = EI.FECHACELAUDINTERMayor(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaEI.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "ETAPAINTERMEDIAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaEI.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "La FECHACELAUDINTER (Fecha de la celebraci√≥n de la audiencia intermedia ) No debe de ser mayor a la fecha actual.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = "";
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = EI.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }*/

 /*ArrayResult = EI.FECHAESCRITOACUSACION(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaEI.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "ETAPAINTERMEDIAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaEI.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo Fecha de escrito de la acusaci√≥n (columna E) debera ser mayor o igual al campo Fecha de cierre de la investigaci√≥n (columna J) de la plantilla Investigaci√≥n complementaria.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = EI.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = EI.HUBOCELAUDINTER(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaEI.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "ETAPAINTERMEDIAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaEI.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo ¬øHubo celebraci√≥n de audiencia intermedia? (columna F) es requisitado con la opcion Si (1) entonces el campo Fecha de la celebraci√≥n de la audiencia intermedia (columna G) debe ser requisitado. ";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = EI.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = EI.FECHACELAUDINTER(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaEI.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "ETAPAINTERMEDIAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaEI.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo Fecha de la celebraci√≥n de la audiencia intermedia (columna G) debera ser mayor al campo Fecha de audiencia inicial (columna I) de la plantilla Proceso.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = EI.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = EI.HUBOPRESMEDPRU(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaEI.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "ETAPAINTERMEDIAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaEI.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo ¬øHubo celebraci√≥n de audiencia intermedia? (columna F) es requisitado con la opci√≥n ‚ÄúSi‚Äù (1), entonces los campos Fecha de la celebraci√≥n de la audiencia intermedia (columna E), ¬øHubo presentaci√≥n de medios de prueba? (columna F), Medios de prueba (presentados /excluidos) (columna G), ¬øCont√≥ con acuerdos probatorios? (columna H) y ¬øSe dict√≥ auto de apertura a juicio oral? (columna I) deben ser requisitados. ";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = EI.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = EI.MEDIOSPRUEBA(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaEI.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "ETAPAINTERMEDIAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaEI.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo ¬øHubo celebraci√≥n de audiencia intermedia? (columna F) es requisitado con la opci√≥n ‚ÄúNo‚Äù (2) o No identificado (9), entonces los campos Fecha de la celebraci√≥n de la audiencia intermedia (columna E), ¬øHubo presentaci√≥n de medios de prueba? (columna F), Medios de prueba (presentados /excluidos) (columna G), ¬øCont√≥ con acuerdos probatorios? (columna H) y ¬øSe dict√≥ auto de apertura a juicio oral? (columna I) no deben ser requisitados. ";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = EI.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = EI.HUBOCELAUDINTER1(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaEI.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "ETAPAINTERMEDIAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaEI.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo El campo ¬øHubo celebraci√≥n de audiencia intermedia? (columna F) es requisitado con la opci√≥n ‚ÄúNo‚Äù (2) o No identificado (9), entonces la plantilla Sobreseimiento debe ser requisitada.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = EI.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = EI.HUBOPRESMEDPRU1(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaEI.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "ETAPAINTERMEDIAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaEI.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo ¬øHubo presentaci√≥n de medios de prueba? (columna H) es requisitado con la opci√≥n ‚ÄúSi‚Äù (1), entonces el campo Medios de prueba (columna I) debe ser requisitado.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = EI.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = EI.HUBOPRESMEDPRU2(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaEI.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "ETAPAINTERMEDIAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaEI.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo ¬øHubo presentaci√≥n de medios de prueba? (columna H) es diferente a la opci√≥n ‚ÄúSi‚Äù (1), entonces el campo Medios de prueba (columna I) no debe ser requisitado.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = EI.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = EI.CONTACUPROB(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaEI.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "ETAPAINTERMEDIAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaEI.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo ¬øHubo celebraci√≥n de audiencia intermedia? (columna F) es requisitado con la opcion Si (1), entonces el campo ¬øCont√≥ con acuerdos probatorios? (columna J) debe ser requisitado con la opcion 'Si' (1). ";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = EI.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }*/
        ArrayResult = EI.DICTAUTAPERJUICIO(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaEI.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "ETAPAINTERMEDIAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaEI.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Regla Negocio 14.8. El campo ¬øHubo celebraci√≥n de audiencia intermedia? (columna D) es requisitado con la opcion Si (1), entonces el campo ¬øSe dict√≥ auto de apertura a juicio oral? (columna K) debe ser requisitado con la opci√≥n 'Si' (1).";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = EI.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = EI.SENTENCIADERPROCABREV(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaEI.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "ETAPAINTERMEDIAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaEI.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio 14.9.El campo ¬øSe dict√≥ auto de apertura a juicio oral? (columna K) es requisitado con la opci√≥n Si (1), entonces el campo ¬øLa sentencia fue derivada de un procedimiento abreviado? (columna G) de la plantilla Sentencia debe ser requisitado con la opci√≥n Si (1) y el campo Fecha en que se dict√≥ el procedimiento abreviado (columna H) debe ser requisitado.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = EI.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = EI.DICTAUTAPERJUICI1(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaEI.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "ETAPAINTERMEDIAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaEI.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaAdicional 14.9.1. El campo ¬øSe dict√≥ auto de apertura a juicio oral? (columna K) se requisito con la opci√≥n 'S√≠' (1) debe ser requisitada la plantilla Sentencia.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = EI.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = EI.NODICTAUTAPERJUICI1(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaEI.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "ETAPAINTERMEDIAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaEI.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaAdicional 14.9.1. El campo ¬øSe dict√≥ auto de apertura a juicio oral? (columna K) es diferente de la opci√≥n \"S√≠\" (1) no debe ser requisitada la plantilla Sentencia.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = EI.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = EI.ACUSACION(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaEI.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "ETAPAINTERMEDIAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaEI.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio 14.2. La plantilla Etapa Intermedia es requisitada, entonces el campo ¬øSe formul√≥ acusaci√≥n? (columna K) de la plantilla Investigaci√≥n complementaria deber√° ser requisitado con la opci√≥n ‚ÄúSi‚Äù (1). ";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = EI.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
        ArrayResult = EI.APERTURAJO122024(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaEI.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "ETAPAINTERMEDIAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaEI.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "Regla Adicional Favor de verificar el campo ¬øSe dict√≥ auto de apertura a juicio oral?	DICTAUTAPERJUICIO debido a que no se puede seleccionar una opcion diferente a 'Si' (1), 'No' (2), 'No identificado' (9).";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = "";
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = EI.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }
    }

    // SOBRESEIMIENTO
    public void Despliega_Sobreseimiento(XSSFWorkbook libro, XSSFSheet hojaSOBR, XSSFCellStyle estiloCelda0, XSSFCellStyle estiloCelda1, XSSFCellStyle estiloCeldabordes0, JProgressBar progressBar, String Entidad, String Periodo) throws SQLException {

        String Texto = "", Texto2 = "";
        int conEnc = 1, conDat = 2, coni = 1;
        Border border = BorderFactory.createTitledBorder("Cargando...Sobreseimiento");
        progressBar.setBorder(border);
        progressBar.setValue(88);

        XSSFRow row00 = hojaSOBR.createRow(0); // Fila
        XSSFCell celda00 = row00.createCell(0); // Columna
        celda00.setCellStyle(estiloCelda0);
        celda00.setCellType(CellType.STRING);
        String titulo00 = "Sobreseimiento";
        XSSFRichTextString texto00 = new XSSFRichTextString(titulo00);
        hojaSOBR.addMergedRegion(new CellRangeAddress(0, 0, 0, 3));
        celda00.setCellValue(texto00);
        row00.setHeight((short) 600);
        VSobreseimiento SB = new VSobreseimiento();

        /*ArrayResult = SB.FECHADICTOSOBRESEIMIENTOMayor(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaSOBR.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "SOBRESEIMIENTOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaSOBR.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "La FECHADICTOSOBRESEIMIENTO (Fecha de la celebraci√≥n de la audiencia intermedia ) No debe de ser mayor a la fecha actual.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = SB.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }*/
        ArrayResult = SB.SobreseimientoETAPA(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaSOBR.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "SOBRESEIMIENTOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaSOBR.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio 16.3. Si en el campo En caso de sobreseimiento, etapa en la que se dict√≥ el sobreseimiento se requisito la opci√≥n Investigaci√≥n complementaria, entonces el campo Etapa en la que se dict√≥ el sobreseimiento (columna AG) debera corresponder con la opci√≥n Etapa de investigaci√≥n complementaria de la plantilla Proceso";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = SB.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = SB.SobreseimientoETAPA1(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaSOBR.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "SOBRESEIMIENTOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaSOBR.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio 16.3. Si en el campo En caso de sobreseimiento, etapa en la que se dict√≥ el sobreseimiento se requisito la opci√≥n Investigaci√≥n complementaria, entonces se deber√° verificar que el campo Etapa en la que se dict√≥ el sobreseimiento (columna AG) corresponda con la opci√≥n Etapa de investigaci√≥n complementaria de la plantilla Proceso; adem√°s, que el campo ¬øSe formul√≥ acusaci√≥n? (columna K) de la plantilla Investigaci√≥n debe de traer la opci√≥n ‚ÄúNo‚Äù";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = SB.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = SB.SobreseimientoMasc(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaSOBR.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "SOBRESEIMIENTOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaSOBR.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio 16.3. Si en el campo En caso de sobreseimiento, etapa en la que se dict√≥ el sobreseimiento se requisito la opci√≥n Investigaci√≥n complementaria, entonces se deber√° verificar que el campo Etapa en la que se dict√≥ el sobreseimiento (columna AG) corresponda con la opci√≥n Etapa de investigaci√≥n complementaria de la plantilla Proceso; adem√°s, que el campo ¬øSe formul√≥ acusaci√≥n? (columna K) de la plantilla Investigaci√≥n complementaria se haya requisitado la pci√≥n ‚ÄúNo‚Äù. Y tambi√©n las plantillas Etapa intermedia, MASC y Sentencia no deber√°n ser requisitadas.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = SB.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = SB.SobreseimientoSuspension(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaSOBR.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "SOBRESEIMIENTOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaSOBR.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio 16.5. La pesta√±a de sobreseimiento no debe contener informaci√≥n debido a que no se ha cumplimentado la suspensi√≥n condicional";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = SB.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = SB.FechaSobreseimiento(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaSOBR.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "SOBRESEIMIENTOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaSOBR.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio 16.5. El campo Fecha en que se cumpliment√≥ la suspensi√≥n condicional del proceso (columna J) debe ser menor al campo Fecha en que se dict√≥ el sobreseimiento (columna G) de la plantilla Sobreseimiento.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = SB.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = SB.SobreseimientoEtpInter(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaSOBR.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "SOBRESEIMIENTOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaSOBR.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio 16.6. En caso de sobreseimiento, etapa en la que se dict√≥ el sobreseimiento se requisito la opci√≥n Etapa intermedia, entonces el campo Etapa procesal en la que se encuentra el imputado corresponda con la opci√≥n Etapa intermedia de la plantilla Proceso";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = SB.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = SB.Sobresei_jucioOral(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaSOBR.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "SOBRESEIMIENTOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaSOBR.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio 16.6. El campo ¬øSe dict√≥ auto de apertura a juicio oral?  (columna K) de la plantilla Etapa intermedia debe de ser la opci√≥n ‚ÄúNo‚Äù";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = SB.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = SB.Sobreseimiento(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaSOBR.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "SOBRESEIMIENTOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaSOBR.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio 16.6. Si se encuentran registros en la plantilla Sobreseimiento, no deber√° existir informaci√≥n relacionada en las plantillas MASC, Suspensi√≥n condicional y Sentencia.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = SB.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        /*ArrayResult = SB.Fecha_sobreseimiento(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaSOBR.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "SOBRESEIMIENTOID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaSOBR.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo Fecha en la que se dict√≥ el sobreseimiento (columna G) debe ser mayor al campo Fecha de ingreso de la causa penal (columna K) de la plantilla Proceso.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = SB.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }*/
    }

    // SUSPENSION CONDICIONAL
    public void Despliega_SuspencionCondicional(XSSFWorkbook libro, XSSFSheet hojaSPCON, XSSFCellStyle estiloCelda0, XSSFCellStyle estiloCelda1, XSSFCellStyle estiloCeldabordes0, JProgressBar progressBar, String Entidad, String Periodo) throws SQLException {

        String Texto = "", Texto2 = "";
        int conEnc = 1, conDat = 2, coni = 1;
        Border border = BorderFactory.createTitledBorder("Cargando...SupensionCondicional");
        progressBar.setBorder(border);
        progressBar.setValue(94);

        XSSFRow row00 = hojaSPCON.createRow(0); // Fila
        XSSFCell celda00 = row00.createCell(0); // Columna
        celda00.setCellStyle(estiloCelda0);
        celda00.setCellType(CellType.STRING);
        String titulo00 = "Suspencion Condicional ";
        XSSFRichTextString texto00 = new XSSFRichTextString(titulo00);
        hojaSPCON.addMergedRegion(new CellRangeAddress(0, 0, 0, 3));
        celda00.setCellValue(texto00);
        row00.setHeight((short) 600);
        VSuspensionCondicional SPCON = new VSuspensionCondicional();

        /*ArrayResult = SPCON.FECHADICSUSCONPROMayor(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaSPCON.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "SUSPENSIONCONDICIONALID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaSPCON.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "La FECHADICSUSCONPRO (Indica la etapa del proceso penal en la que se decret√≥ la suspensi√≥n condicional del proceso. ) No debe de ser mayor a la fecha actual.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = SPCON.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = SPCON.FECHAREAPERTURAPROCESOMayor(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaSPCON.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "SUSPENSIONCONDICIONALID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaSPCON.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "La FECHAREAPERTURAPROCESO () No debe de ser mayor a la fecha actual.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = SPCON.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = SPCON.FECHACUMPSUSPENCONDIPROCESOMayor(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaSPCON.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "SUSPENSIONCONDICIONALID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaSPCON.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "La FECHACUMPSUSPENCONDIPROCESO () No debe de ser mayor a la fecha actual.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = SPCON.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = SPCON.TABLA_SUSPENSIONCONDICIONAL(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaSPCON.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "SUSPENSIONCONDICIONALID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaSPCON.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "La plantilla Suspensi√≥n condicional es requisitada, el campo Fecha en que se cumpliment√≥ la suspensi√≥n condicional del proceso (columna J) debe ser requisitado y las plantillas MASC y Sentencia no deben ser requisitadas.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = SPCON.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = SPCON.FECHACUMPSUSPENCONDIPROCESO(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaSPCON.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "SUSPENSIONCONDICIONALID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaSPCON.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo Fecha en que dict√≥ el sobreseimiento (columna G) de la plantilla Sobreseimiento debe ser mayor al campo Fecha en que se cumpliment√≥ la suspensi√≥n condicional del proceso (columna J).";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = SPCON.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = SPCON.CATSUSCONID(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaSPCON.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "SUSPENSIONCONDICIONALID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaSPCON.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo Etapa en la que se dict√≥  la suspensi√≥n condicional del proceso es requisitado con la opci√≥n Etapa intermedia (1) entonces el campo Etapa procesal en la que se encuentra el imputado debe ser igual a Etapa intermedia (3) y el campo ¬øSe dict√≥ auto de apertura a juicio oral? (columna K) debe ser requisitado con la opci√≥n No (2).";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = SPCON.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = SPCON.TABLA_MASC(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaSPCON.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "SUSPENSIONCONDICIONALID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaSPCON.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "En la plantilla Suspensi√≥n condicional existen registros, no debe haber registros en las plantillas MASC y Sobreseimiento.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = SPCON.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = SPCON.FECHADICSUSCONPRO(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaSPCON.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "SUSPENSIONCONDICIONALID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaSPCON.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo Fecha en que se dict√≥ la suspensi√≥n condicional del proceso (columna E) es requisitado, debe ser mayor o igual al campo Fecha en que se dict√≥ el auto de vinculaci√≥n a proceso (columna G) de la plantilla Investigaci√≥n complementaria.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = SPCON.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = SPCON.FECHAREAPERTURAPROCESO(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaSPCON.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "SUSPENSIONCONDICIONALID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaSPCON.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo Fecha en que se dict√≥ la suspensi√≥n condicional del proceso (columna E) es requisitado, debe ser mayor o igual al campo Fecha en que se dict√≥ el auto de vinculaci√≥n a proceso (columna G) de la plantilla Investigaci√≥n complementaria.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = SPCON.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = SPCON.HUBOREAPERTURAPROCESO(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaSPCON.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "SUSPENSIONCONDICIONALID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaSPCON.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo ¬øHubo reapertura del proceso? (columna H) es requisitado con la opci√≥n ‚ÄúSi‚Äù (1) entonces el campo Fecha de reapertura del proceso (columna I) debe ser requisitado.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = SPCON.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = SPCON.HUBOREAPERTURAPROCESO1(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaSPCON.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "SUSPENSIONCONDICIONALID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaSPCON.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo ¬øHubo reapertura del proceso? (columna H) es diferente a la opci√≥n ‚ÄúSi‚Äù (1) entonces el campo Fecha de reapertura del proceso (columna I) no debe ser requisitado.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = SPCON.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = SPCON.FECHACUMPSUSPENCONDIPROCESO1(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaSPCON.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "SUSPENSIONCONDICIONALID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaSPCON.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo Fecha en que se cumpliment√≥ la suspensi√≥n condicional del proceso (columna J) debe ser mayor o igual al campo Fecha en que se dict√≥ la suspensi√≥n condicional del proceso (columna E).";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = SPCON.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = SPCON.HUBOREAPERTURAPROCESO2(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaSPCON.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "SUSPENSIONCONDICIONALID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 5000) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaSPCON.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo ¬øHubo reapertura del proceso? (columna H) es requisitado con la opci√≥n ‚ÄúSi‚Äù (1), entonces el campo Fecha en que se cumpliment√≥ la suspensi√≥n condicional del proceso (columna J) no debe ser requerido y el campo Fecha de reapertura del proceso (columna I) debe ser requisitado.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = SPCON.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }*/
    }

    // SENTENCIA
    public void Despliega_Sentencia(XSSFWorkbook libro, XSSFSheet hojaSENT, XSSFCellStyle estiloCelda0, XSSFCellStyle estiloCelda1, XSSFCellStyle estiloCeldabordes0, JProgressBar progressBar, String Entidad, String Periodo) throws SQLException {

        String Texto = "", Texto2 = "";
        int conEnc = 1, conDat = 2, coni = 1;
        Border border = BorderFactory.createTitledBorder("Cargando...Sentencia");
        progressBar.setBorder(border);
        progressBar.setValue(99);

        XSSFRow row00 = hojaSENT.createRow(0); // Fila
        XSSFCell celda00 = row00.createCell(0); // Columna
        celda00.setCellStyle(estiloCelda0);
        celda00.setCellType(CellType.STRING);
        String titulo00 = "Sentencia";
        XSSFRichTextString texto00 = new XSSFRichTextString(titulo00);
        hojaSENT.addMergedRegion(new CellRangeAddress(0, 0, 0, 3));
        celda00.setCellValue(texto00);
        row00.setHeight((short) 600);
        VSentencia SENT = new VSentencia();

        /*ArrayResult = SENT.FECHACELEBAUDIJUICIOMayor(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaSENT.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "SENTENCIAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 2500) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaSENT.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "La FECHACELEBAUDIJUICIO (Hace referencia del d√≠a, mes y a√±o de la celebraci√≥n de la audiencia de juicio) No debe de ser mayor a la fecha actual.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = SENT.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = SENT.FECHADICTOSENTENCIAMayor(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaSENT.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "SENTENCIAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 2500) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaSENT.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "La FECHADICTOSENTENCIA (Hace referencia del d√≠a, mes y a√±o en que se dict√≥ la resoluci√≥n del estudio de fondo del asunto, por parte del tribunal de enjuiciamiento) No debe de ser mayor a la fecha actual.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = SENT.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }*/
        ArrayResult = SENT.ESTATUSCARPETA(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaSENT.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "SENTENCIAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 2500) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaSENT.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio 18.6. Si la tabla TR_SENAP_SENTENCIA es requisitada, las tablas TR_SENAP_MASC, TR_SENAP_SOBRESEIMIENTO y TR_SENAP_SUSPENSIONCONDICIONAL no deben ser requisitadas.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = SENT.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = SENT.FECHACUMPLIMIENTO(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaSENT.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "SENTENCIAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 2500) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaSENT.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio 18.7. El campo Fecha en que se cumpliment√≥ la suspensi√≥n condicional del proceso (columna H) es requisitada, la plantilla Sentencia debe ser requisitada.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = SENT.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = SENT.FECHACUMPLIMIENTONS(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaSENT.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "SENTENCIAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 2500) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaSENT.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio 18.7. El campo Fecha en que se cumpliment√≥ la suspensi√≥n condicional del proceso (columna H) no es requisitada y el campo ¬øHubo reapertura del proceso? (columna H) sea requisitado con la opcion ‚ÄúS√ç‚Äù (1), entonces la plantilla Sentencia no debe ser requisitada.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = SENT.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = SENT.SENTENCIA(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaSENT.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "SENTENCIAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 2500) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaSENT.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio 18.8. La plantilla Sentencia es requisitada y el campo Etapa procesal en la que se encuentra el imputado (columna AG) se requisito con la opci√≥n ‚ÄúEtapa intermedia‚Äù (4), en el campo ¬øSe dict√≥ auto de apertura a juicio oral? (columna k) de la plantilla Etapa Intermedia debe ser requisitado la opci√≥n ‚ÄúSi‚Äù (1) y el campo ¬øLa sentencia fue derivada de un procedimiento abreviado? (columna G) debe ser requisitada con la opci√≥n ‚ÄúNo‚Äù (2).";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = SENT.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = SENT.HUBOREAPERTURA(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaSENT.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "SENTENCIAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 2500) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaSENT.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaAdicional 18.8.1. El campo ¬øHubo reapertura del proceso? HUBOREAPERTURAPROCESO es requisitada con la opci√≥n ‚ÄúS√ç‚Äù (1) y el campo Fecha en que se cumpliment√≥ la suspensi√≥n condicional del proceso FECHACUMPSUSPENCONDIPROCESO no debe ser requisitada, as√≠ como la tabla TR_SENAP_SENTENCIA debe ser requisitada.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = SENT.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = SENT.HUBOREAPERTURA(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaSENT.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "SENTENCIAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 2500) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaSENT.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo ¬øHubo reapertura del proceso? HUBOREAPERTURAPROCESO es requisitada con la opci√≥n ‚ÄúS√ç‚Äù (1) y el campo Fecha en que se cumpliment√≥ la suspensi√≥n condicional del proceso FECHACUMPSUSPENCONDIPROCESO no debe ser requisitada, as√≠ como la tabla TR_SENAP_SENTENCIA debe ser requisitada.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = SENT.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = SENT.ETAPAPROCESAL(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaSENT.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "SENTENCIAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 2500) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaSENT.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "ReglaNegocio 18.9. La plantilla Sentencia es requisitada y el campo Etapa procesal en la que se encuentra el imputado (columna AG) se requisito con la opci√≥n ‚ÄúEtapa intermedia‚Äù (4), en el campo ¬øSe dict√≥ auto de apertura a juicio oral? (columna k) de la plantilla Etapa Intermedia debe ser requisitado la opci√≥n ‚ÄúSi‚Äù (1) y el campo ¬øLa sentencia fue derivada de un procedimiento abreviado? (columna G) debe ser requisitada con la opci√≥n ‚ÄúNo‚Äù (2).";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = SENT.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        /*ArrayResult = SENT.CELEBRACION(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaSENT.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "SENTENCIAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 2500) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaSENT.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "La plantilla Sentencia es requisitada y el campo Etapa procesal en la que se encuentra el imputado (columna AG) se requisito con la opci√≥n ‚ÄúEtapa intermedia‚Äù (4), en el campo ¬øSe dict√≥ auto de apertura a juicio oral? (columna k) de la plantilla Etapa Intermedia debe ser requisitado la opci√≥n ‚ÄúSi‚Äù (1) y el campo ¬øLa sentencia fue derivada de un procedimiento abreviado? (columna G) debe ser requisitada con la opci√≥n ‚ÄúNo‚Äù (2).";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = SENT.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }*/

 /*ArrayResult = SENT.PROCABREVIADO(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaSENT.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "SENTENCIAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 2500) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaSENT.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo ¬øLa Sentencia fue derivada de un procedimiento abreviado? (columna G) es requisitado con la opci√≥n ‚ÄúSi‚Äù (1), entonces el campo Fecha en que se dict√≥ el procedimiento abreviado (columna H) debe ser requisitado.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = SENT.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }*/

 /*ArrayResult = SENT.AUDIENCIAJUICIO(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaSENT.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "SENTENCIAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 2500) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaSENT.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo Fecha de la celebraci√≥n de la audiencia de juicio (columna E) es requisitado, entonces el campo Fecha en que se dict√≥ el procedimiento abreviado (columna H) no debe ser requisitado.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = SENT.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = SENT.JUICIOORAL(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaSENT.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "SENTENCIAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 2500) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaSENT.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo ¬øSe dict√≥ auto de apertura a juicio oral? (columna K) de la plantilla Etapa intermedia no debe ser requisitado con la opci√≥n 'Si' (1), entonces el campo Fecha en que se dict√≥ el procedimiento abreviado (columna H) no debe ser requisitado.";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = SENT.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }

        ArrayResult = SENT.FECHASENTENCIA(Entidad, Periodo);
        if (ArrayResult.size() > 0) {

            XSSFRow filaEE1 = hojaSENT.createRow(conEnc);//FILA
            XSSFCell celdaE1 = filaEE1.createCell(0);//COLUMNA
            celdaE1.setCellStyle(estiloCelda1);
            celdaE1.setCellType(CellType.STRING);
            String txtE1 = "SENTENCIAID";
            XSSFRichTextString textoE1 = new XSSFRichTextString(txtE1);
            celdaE1.setCellValue(textoE1);

            XSSFCell celdaE10 = filaEE1.createCell(1);//COLUMNA
            celdaE10.setCellStyle(estiloCelda1);
            celdaE10.setCellType(CellType.STRING);
            String txtE10 = "IMPUTADOID";
            XSSFRichTextString textoE10 = new XSSFRichTextString(txtE10);
            celdaE10.setCellValue(textoE10);

            XSSFCell celdaE2 = filaEE1.createCell(2);//COLUMNA
            celdaE2.setCellStyle(estiloCelda1);
            celdaE2.setCellType(CellType.STRING);
            String txtE2 = "Regla";
            XSSFRichTextString textoE2 = new XSSFRichTextString(txtE2);
            celdaE2.setCellValue(textoE2);

            XSSFCell celdaE4 = filaEE1.createCell(3);//COLUMNA
            celdaE4.setCellStyle(estiloCelda1);
            celdaE4.setCellType(CellType.STRING);
            String txtE4 = "Total Casos";
            XSSFRichTextString textoE4 = new XSSFRichTextString(txtE4);
            celdaE4.setCellValue(textoE4);

            XSSFCell celdaE3 = filaEE1.createCell(4);//COLUMNA 
            celdaE3.setCellStyle(estiloCelda1);
            celdaE3.setCellType(CellType.STRING);
            String txtE3 = "Comentarios";
            XSSFRichTextString textoE3 = new XSSFRichTextString(txtE3);
            celdaE3.setCellValue(textoE3);

            if (ArrayResult.size() < 2500) {

                for (int i = 0; i < ArrayResult.size(); i++) {
                    String txtD1 = Arrays.toString(ArrayResult.get(i));
                    txtD1 = txtD1.replace("[", "").replace("]", "").replace(" 00:00:00.0", "");
                    String[] parts = txtD1.split(",");
                    String parts1 = parts[0].trim();
                    String parts2 = parts[1].trim();
                    Texto = Texto + "," + parts1;
                    Texto2 = Texto2 + "," + parts2;
                }

            } else {

                Texto = "General";
                Texto2 = "General";
            }

            XSSFRow filaEE2 = hojaSENT.createRow(conDat);

            XSSFCell celdaD1 = filaEE2.createCell(0);//COLUMNA
            celdaD1.setCellStyle(estiloCeldabordes0);
            celdaD1.setCellType(CellType.STRING);
            XSSFRichTextString textoD1 = new XSSFRichTextString(Texto);
            celdaD1.setCellValue(textoD1);

            XSSFCell celdaDD1 = filaEE2.createCell(1);//COLUMNA
            celdaDD1.setCellStyle(estiloCeldabordes0);
            celdaDD1.setCellType(CellType.STRING);
            XSSFRichTextString textoDD1 = new XSSFRichTextString(Texto2);
            celdaDD1.setCellValue(textoDD1);

            XSSFCell celdaD2 = filaEE2.createCell(2);//COLUMNA
            celdaD2.setCellStyle(estiloCeldabordes0);
            celdaD2.setCellType(CellType.STRING);
            String txtD4 = "El campo Fecha en que se dict√≥ la sentencia (columna I) debe ser mayor o igual al campo Fecha de la celebraci√≥n de la audiencia de juicio (columna E).";
            XSSFRichTextString textoD2 = new XSSFRichTextString(txtD4);
            celdaD2.setCellValue(textoD2);

            XSSFCell celdaD3 = filaEE2.createCell(3);//COLUMNA
            celdaD3.setCellStyle(estiloCeldabordes0);
            celdaD3.setCellType(CellType.STRING);
            String txtD3 = Integer.toString(ArrayResult.size());
            XSSFRichTextString textoD3 = new XSSFRichTextString(txtD3);
            celdaD3.setCellValue(textoD3);

            XSSFCell celdaDDD3 = filaEE2.createCell(4);//COLUMNA
            celdaDDD3.setCellStyle(estiloCeldabordes0);
            celdaDDD3.setCellType(CellType.STRING);
            String txtDDD3 = "";
            XSSFRichTextString textoDDD3 = new XSSFRichTextString(txtDDD3);
            celdaDDD3.setCellValue(textoDDD3);

            XSSFCell celdaDDD6 = filaEE2.createCell(5);//COLUMNA
            celdaDDD6.setCellStyle(estiloCeldabordes0);
            celdaDDD6.setCellType(CellType.STRING);
            String txtDDD6 = SENT.Query;
            XSSFRichTextString textoDDD6 = new XSSFRichTextString(txtDDD6);
            celdaDDD6.setCellValue(textoDDD6);

            Texto = "";
            Texto2 = "";
            coni++;
            conEnc = conEnc + coni;
            conDat = conDat + coni;
            coni = 1;
        }*/
        progressBar.setValue(100);
    }

    public static void SaveFileTo(XSSFWorkbook libro, JProgressBar progressBar, JFrame frame, DateTimeFormatter dtf, String Entidad, String Periodo) throws FileNotFoundException, IOException {

        DataOutputStream h = null;
        FileDialog d = new FileDialog(new JFrame(), "Save", FileDialog.SAVE);
        String PPeriodo = Periodo.replace("/", "-");
        d.setFile("VAL_SENAP_ENT_" + Entidad + " R " + "_PER_" + PPeriodo + ".xlsx");
        d.setVisible(true);
        String dir;
        dir = d.getDirectory();
        String nomarchi = dir + d.getFile();
        int Pos = nomarchi.length();
        String Ext = nomarchi.substring(Pos - 5, Pos);
        File oneFile = new File(dir + d.getFile() + ".xlsx");
        System.out.println(Ext);
        if (dir != null) {
            FileOutputStream f = new FileOutputStream(oneFile);
            libro.write(f);
            f.close();
            JOptionPane.showMessageDialog(null, "Archivo Guardado Correctamente", "", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "Archivo sin extencion .xlsx", "", JOptionPane.WARNING_MESSAGE);
        }

        progressBar.setValue(0);
        frame.setVisible(false);
    }

    public static void SaveFileTo_Conteo(XSSFWorkbook libro, JProgressBar progressBar, JFrame frame, DateTimeFormatter dtf, String Entidad, String Periodo) throws FileNotFoundException, IOException {

        DataOutputStream h = null;
        FileDialog d = new FileDialog(new JFrame(), "Save", FileDialog.SAVE);
        String PPeriodo = Periodo.replace("/", "-");
        d.setFile("CON_VAL_SENAP_ENT_" + Entidad + " R " + "_PER_" + PPeriodo + ".xlsx");
        d.setVisible(true);
        String dir;
        dir = d.getDirectory();
        String nomarchi = dir + d.getFile();
        int Pos = nomarchi.length();
        String Ext = nomarchi.substring(Pos - 5, Pos);
        File oneFile = new File(dir + d.getFile() + ".xlsx");
        System.out.println(Ext);
        if (dir != null) {
            FileOutputStream f = new FileOutputStream(oneFile);
            libro.write(f);
            f.close();
            JOptionPane.showMessageDialog(null, "Archivo Guardado Correctamente", "", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "Archivo sin extencion .xlsx", "", JOptionPane.WARNING_MESSAGE);
        }

        progressBar.setValue(0);
        frame.setVisible(false);

    }

}
